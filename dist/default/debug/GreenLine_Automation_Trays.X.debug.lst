

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 14 12:18:21 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.30
    87                           ; Generated 02/06/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F47Q10 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121 ;; Function _EUSART1_Read is unused but had its address taken
   122  0000                     
   123 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   124  0000                     
   125 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   126  0000                     
   127 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   128  0000                     _NVMCON2	set	3969
   129  0000                     _NVMDATL	set	3964
   130  0000                     _NVMDATH	set	3965
   131  0000                     _NVMCON1bits	set	3968
   132  0000                     _OSCTUNE	set	3800
   133  0000                     _OSCFRQ	set	3801
   134  0000                     _TX2REG	set	3733
   135  0000                     _SP2BRGH	set	3735
   136  0000                     _TX2STA	set	3737
   137  0000                     _SP1BRGH	set	3995
   138  0000                     _TX1STA	set	3997
   139  0000                     _INT1PPS	set	3741
   140  0000                     _INT2PPS	set	3742
   141  0000                     _INLVLD	set	3869
   142  0000                     _SLRCOND	set	3870
   143  0000                     _ODCOND	set	3871
   144  0000                     _WPUD	set	3872
   145  0000                     _TRISD	set	3978
   146  0000                     _TRISC	set	3977
   147  0000                     _TRISB	set	3976
   148  0000                     _TRISA	set	3975
   149  0000                     _TRISE	set	3979
   150  0000                     _LATC	set	3972
   151  0000                     _LATB	set	3971
   152                           
   153                           ; 1 bytes @ 0x4C
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 95 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   177 ;;Total ram usage:        2 bytes
   178 ;; Hardware stack levels required when called: 14
   179 ;; This function calls:
   180 ;;		_LaySheetsOnTrays
   181 ;;		_SYSTEM_Initialize
   182 ;;		_lcd_GUI
   183 ;;		_lcd_clear
   184 ;;		_lcd_print
   185 ;;		_lcd_set_cursor
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  01141E                     __ptext0:
   193                           	callstack 0
   194  01141E                     _main:
   195                           	callstack 17
   196  01141E                     
   197                           ;main.c: 97:     SYSTEM_Initialize();
   198  01141E  EC6C  F08D         	call	_SYSTEM_Initialize	;wreg free
   199  011422                     
   200                           ;main.c: 104:     (INTCONbits.GIE = 1);
   201  011422  8EF2               	bsf	242,7,c	;volatile
   202  011424                     
   203                           ;main.c: 110:     (INTCONbits.PEIE = 1);
   204  011424  8CF2               	bsf	242,6,c	;volatile
   205  011426                     
   206                           ;main.c: 122:     lcd_clear();
   207  011426  EC5D  F08D         	call	_lcd_clear	;wreg free
   208  01142A                     
   209                           ;main.c: 123:     _delay((unsigned long)((500)*(8000000/4000.0)));
   210  01142A  0E06               	movlw	6
   211  01142C  0100               	movlb	0	; () banked
   212  01142E  6FF0               	movwf	(??_main+1)& (0+255),b
   213  011430  0E13               	movlw	19
   214  011432  6FEF               	movwf	??_main& (0+255),b
   215  011434  0EAD               	movlw	173
   216  011436                     u4207:
   217  011436  2EE8               	decfsz	wreg,f,c
   218  011438  D7FE               	bra	u4207
   219  01143A  2FEF               	decfsz	??_main& (0+255),f,b
   220  01143C  D7FC               	bra	u4207
   221  01143E  2FF0               	decfsz	(??_main+1)& (0+255),f,b
   222  011440  D7FA               	bra	u4207
   223  011442  D000               	nop2	
   224  011444                     
   225                           ;main.c: 124:     (PIE0bits.INT0IE = 1);
   226  011444  010E               	movlb	14	; () banked
   227  011446  81BD               	bsf	189,0,b	;volatile
   228  011448                     l4613:
   229                           
   230                           ;main.c: 141:         if(lcd_GUI() == 0) {
   231  011448  ECAC  F082         	call	_lcd_GUI	;wreg free
   232  01144C  0900               	iorlw	0
   233  01144E  A4D8               	btfss	status,2,c
   234  011450  EF2C  F08A         	goto	u4041
   235  011454  EF2E  F08A         	goto	u4040
   236  011458                     u4041:
   237  011458  EF4A  F08A         	goto	l4621
   238  01145C                     u4040:
   239  01145C                     
   240                           ;main.c: 142:             lcd_clear();
   241  01145C  EC5D  F08D         	call	_lcd_clear	;wreg free
   242  011460                     
   243                           ;main.c: 143:             _delay((unsigned long)((100)*(8000000/4000.0)));
   244  011460  0E02               	movlw	2
   245  011462  0100               	movlb	0	; () banked
   246  011464  6FF0               	movwf	(??_main+1)& (0+255),b
   247  011466  0E04               	movlw	4
   248  011468  6FEF               	movwf	??_main& (0+255),b
   249  01146A  0EBA               	movlw	186
   250  01146C                     u4217:
   251  01146C  2EE8               	decfsz	wreg,f,c
   252  01146E  D7FE               	bra	u4217
   253  011470  2FEF               	decfsz	??_main& (0+255),f,b
   254  011472  D7FC               	bra	u4217
   255  011474  2FF0               	decfsz	(??_main+1)& (0+255),f,b
   256  011476  D7FA               	bra	u4217
   257  011478  F000               	nop	
   258  01147A                     
   259                           ;main.c: 144:             status = LaySheetsOnTrays(20, 6);
   260  01147A  0E00               	movlw	0
   261  01147C  0100               	movlb	0	; () banked
   262  01147E  6FEA               	movwf	(LaySheetsOnTrays@sheetCount+1)& (0+255),b
   263  011480  0E14               	movlw	20
   264  011482  6FE9               	movwf	LaySheetsOnTrays@sheetCount& (0+255),b
   265  011484  0E06               	movlw	6
   266  011486  6FEB               	movwf	LaySheetsOnTrays@sheetSize& (0+255),b
   267  011488  ECDF  F084         	call	_LaySheetsOnTrays	;wreg free
   268  01148C  0101               	movlb	1	; () banked
   269  01148E  6F20               	movwf	_status& (0+255),b
   270                           
   271                           ;main.c: 145:         }
   272  011490  EF24  F08A         	goto	l4613
   273  011494                     l4621:
   274                           
   275                           ;main.c: 147:             lcd_clear();
   276  011494  EC5D  F08D         	call	_lcd_clear	;wreg free
   277  011498                     
   278                           ;main.c: 148:             _delay((unsigned long)((500)*(8000000/4000.0)));
   279  011498  0E06               	movlw	6
   280  01149A  0100               	movlb	0	; () banked
   281  01149C  6FF0               	movwf	(??_main+1)& (0+255),b
   282  01149E  0E13               	movlw	19
   283  0114A0  6FEF               	movwf	??_main& (0+255),b
   284  0114A2  0EAD               	movlw	173
   285  0114A4                     u4227:
   286  0114A4  2EE8               	decfsz	wreg,f,c
   287  0114A6  D7FE               	bra	u4227
   288  0114A8  2FEF               	decfsz	??_main& (0+255),f,b
   289  0114AA  D7FC               	bra	u4227
   290  0114AC  2FF0               	decfsz	(??_main+1)& (0+255),f,b
   291  0114AE  D7FA               	bra	u4227
   292  0114B0  D000               	nop2	
   293  0114B2                     
   294                           ;main.c: 149:             lcd_set_cursor(64);
   295  0114B2  0E40               	movlw	64
   296  0114B4  EC7B  F08D         	call	_lcd_set_cursor
   297  0114B8                     
   298                           ;main.c: 150:             lcd_print("  CHANGE        ");
   299  0114B8  0E8C               	movlw	low STR_1
   300  0114BA  6E14               	movwf	lcd_print@str^0,c
   301  0114BC  0EFE               	movlw	high STR_1
   302  0114BE  6E15               	movwf	(lcd_print@str+1)^0,c
   303  0114C0  EC37  F08D         	call	_lcd_print	;wreg free
   304  0114C4                     l604:
   305  0114C4  EF62  F08A         	goto	l604
   306  0114C8  EF73  F000         	goto	start
   307  0114CC                     __end_of_main:
   308                           	callstack 0
   309                           
   310                           	psect	nvBANK1
   311  000142                     __pnvBANK1:
   312                           	callstack 0
   313  000142                     _EUSART2_ErrorHandler:
   314                           	callstack 0
   315  000142                     	ds	3
   316  000145                     _EUSART2_OverrunErrorHandler:
   317                           	callstack 0
   318  000145                     	ds	3
   319  000148                     _EUSART2_FramingErrorHandler:
   320                           	callstack 0
   321  000148                     	ds	3
   322  00014B                     _INT2_InterruptHandler:
   323                           	callstack 0
   324  00014B                     	ds	3
   325  00014E                     _INT1_InterruptHandler:
   326                           	callstack 0
   327  00014E                     	ds	3
   328  000151                     _INT0_InterruptHandler:
   329                           	callstack 0
   330  000151                     	ds	3
   331  000154                     _EUSART1_ErrorHandler:
   332                           	callstack 0
   333  000154                     	ds	3
   334  000157                     _EUSART1_OverrunErrorHandler:
   335                           	callstack 0
   336  000157                     	ds	3
   337  00015A                     _EUSART1_FramingErrorHandler:
   338                           	callstack 0
   339  00015A                     	ds	3
   340  00015D                     _EUSART1_RxDefaultInterruptHandler:
   341                           	callstack 0
   342  00015D                     	ds	3
   343  0000                     _RC2STAbits	set	3736
   344  0000                     _TX2STAbits	set	3737
   345  0000                     _RC1STAbits	set	3996
   346  0000                     _TX1STAbits	set	3997
   347  0000                     _RC2REG	set	3732
   348  0000                     _SP2BRGL	set	3734
   349  0000                     _RC2STA	set	3736
   350  0000                     _BAUD2CON	set	3738
   351  0000                     _INT0PPS	set	3740
   352  0000                     _RX1PPS	set	3760
   353  0000                     _INLVLA	set	3848
   354  0000                     _SLRCONA	set	3849
   355  0000                     _ODCONA	set	3850
   356  0000                     _WPUA	set	3851
   357  0000                     _ANSELA	set	3852
   358  0000                     _ANSELB	set	3860
   359  0000                     _ANSELC	set	3868
   360  0000                     _ANSELD	set	3873
   361  0000                     _LATA	set	3970
   362  0000                     _LATD	set	3973
   363  0000                     _LATE	set	3974
   364  0000                     _PORTCbits	set	3982
   365  0000                     _RC1REG	set	3992
   366  0000                     _TX1REG	set	3993
   367  0000                     _SP1BRGL	set	3994
   368  0000                     _RC1STA	set	3996
   369  0000                     _BAUD1CON	set	3998
   370  0000                     _INLVLE	set	3877
   371  0000                     _SLRCONE	set	3878
   372  0000                     _ODCONE	set	3879
   373  0000                     _WPUE	set	3880
   374  0000                     _ANSELE	set	3881
   375  0000                     _INLVLC	set	3864
   376  0000                     _SLRCONC	set	3865
   377  0000                     _ODCONC	set	3866
   378  0000                     _WPUC	set	3867
   379  0000                     _NVMADRL	set	3961
   380  0000                     _NVMADRH	set	3962
   381  0000                     _NVMADRU	set	3963
   382  0000                     _INLVLB	set	3856
   383  0000                     _SLRCONB	set	3857
   384  0000                     _ODCONB	set	3858
   385  0000                     _WPUB	set	3859
   386  0000                     _PIE0bits	set	3773
   387  0000                     _PIE3bits	set	3776
   388  0000                     _RB3PPS	set	3821
   389  0000                     _RB6PPS	set	3824
   390  0000                     _RC6PPS	set	3832
   391  0000                     _PIR0bits	set	3781
   392  0000                     _PIR3bits	set	3784
   393  0000                     _INTCONbits	set	4082
   394  0000                     _PIR7bits	set	3788
   395  0000                     _OSCCON1	set	3795
   396  0000                     _TABLAT	set	4085
   397  0000                     _TBLPTRL	set	4086
   398  0000                     _TBLPTRH	set	4087
   399  0000                     _TBLPTRU	set	4088
   400  0000                     _OSCCON3	set	3797
   401  0000                     _OSCEN	set	3799
   402  0000                     _PMD0	set	3804
   403  0000                     _PMD5	set	3809
   404  0000                     _PMD4	set	3808
   405  0000                     _PMD3	set	3807
   406  0000                     _PMD2	set	3806
   407  0000                     _PMD1	set	3805
   408  0000                     _NVMCON0bits	set	3967
   409                           
   410                           	psect	mediumconst
   411  00FDE8                     __pmediumconst:
   412                           	callstack 0
   413  00FDE8  00                 	db	0
   414  00FDE9  20                 	db	32
   415  00FDEA  20                 	db	32
   416  00FDEB  23                 	db	35
   417  00FDEC  25                 	db	37
   418  00FDED  69                 	db	105	;'i'
   419  00FDEE  20                 	db	32
   420  00FDEF  20                 	db	32
   421  00FDF0  20                 	db	32
   422  00FDF1  20                 	db	32
   423  00FDF2  23                 	db	35
   424  00FDF3  25                 	db	37
   425  00FDF4  69                 	db	105	;'i'
   426  00FDF5  22                 	db	34
   427  00FDF6  20                 	db	32
   428  00FDF7  2D                 	db	45
   429  00FDF8  3E                 	db	62	;'>'
   430  00FDF9  20                 	db	32
   431  00FDFA  20                 	db	32
   432  00FDFB  20                 	db	32
   433  00FDFC  20                 	db	32
   434  00FDFD  00                 	db	0
   435  00FDFE                     STR_10:
   436  00FDFE  20                 	db	32
   437  00FDFF  20                 	db	32
   438  00FE00  23                 	db	35
   439  00FE01  25                 	db	37
   440  00FE02  69                 	db	105	;'i'
   441  00FE03  20                 	db	32
   442  00FE04  20                 	db	32
   443  00FE05  20                 	db	32
   444  00FE06  20                 	db	32
   445  00FE07  23                 	db	35
   446  00FE08  25                 	db	37
   447  00FE09  69                 	db	105	;'i'
   448  00FE0A  22                 	db	34
   449  00FE0B  2D                 	db	45
   450  00FE0C  3E                 	db	62	;'>'
   451  00FE0D  20                 	db	32
   452  00FE0E  20                 	db	32
   453  00FE0F  20                 	db	32
   454  00FE10  00                 	db	0
   455  00FE11                     STR_7:
   456  00FE11  20                 	db	32
   457  00FE12  20                 	db	32
   458  00FE13  53                 	db	83	;'S'
   459  00FE14  74                 	db	116	;'t'
   460  00FE15  61                 	db	97	;'a'
   461  00FE16  72                 	db	114	;'r'
   462  00FE17  74                 	db	116	;'t'
   463  00FE18  20                 	db	32
   464  00FE19  20                 	db	32
   465  00FE1A  20                 	db	32
   466  00FE1B  20                 	db	32
   467  00FE1C  20                 	db	32
   468  00FE1D  20                 	db	32
   469  00FE1E  20                 	db	32
   470  00FE1F  20                 	db	32
   471  00FE20  20                 	db	32
   472  00FE21  20                 	db	32
   473  00FE22  00                 	db	0
   474  00FE23  20                 	db	32
   475  00FE24  20                 	db	32
   476  00FE25  23                 	db	35
   477  00FE26  25                 	db	37
   478  00FE27  69                 	db	105	;'i'
   479  00FE28  20                 	db	32
   480  00FE29  20                 	db	32
   481  00FE2A  20                 	db	32
   482  00FE2B  20                 	db	32
   483  00FE2C  23                 	db	35
   484  00FE2D  25                 	db	37
   485  00FE2E  69                 	db	105	;'i'
   486  00FE2F  22                 	db	34
   487  00FE30  20                 	db	32
   488  00FE31  20                 	db	32
   489  00FE32  20                 	db	32
   490  00FE33  20                 	db	32
   491  00FE34  00                 	db	0
   492  00FE35                     STR_5:
   493  00FE35  20                 	db	32
   494  00FE36  20                 	db	32
   495  00FE37  20                 	db	32
   496  00FE38  20                 	db	32
   497  00FE39  20                 	db	32
   498  00FE3A  20                 	db	32
   499  00FE3B  20                 	db	32
   500  00FE3C  20                 	db	32
   501  00FE3D  20                 	db	32
   502  00FE3E  43                 	db	67	;'C'
   503  00FE3F  68                 	db	104	;'h'
   504  00FE40  61                 	db	97	;'a'
   505  00FE41  6E                 	db	110	;'n'
   506  00FE42  67                 	db	103	;'g'
   507  00FE43  65                 	db	101	;'e'
   508  00FE44  20                 	db	32
   509  00FE45  20                 	db	32
   510  00FE46  00                 	db	0
   511  00FE47                     STR_3:
   512  00FE47  20                 	db	32
   513  00FE48  20                 	db	32
   514  00FE49  53                 	db	83	;'S'
   515  00FE4A  74                 	db	116	;'t'
   516  00FE4B  61                 	db	97	;'a'
   517  00FE4C  72                 	db	114	;'r'
   518  00FE4D  74                 	db	116	;'t'
   519  00FE4E  20                 	db	32
   520  00FE4F  20                 	db	32
   521  00FE50  43                 	db	67	;'C'
   522  00FE51  68                 	db	104	;'h'
   523  00FE52  61                 	db	97	;'a'
   524  00FE53  6E                 	db	110	;'n'
   525  00FE54  67                 	db	103	;'g'
   526  00FE55  65                 	db	101	;'e'
   527  00FE56  20                 	db	32
   528  00FE57  20                 	db	32
   529  00FE58  00                 	db	0
   530  00FE59  20                 	db	32
   531  00FE5A  20                 	db	32
   532  00FE5B  20                 	db	32
   533  00FE5C  20                 	db	32
   534  00FE5D  20                 	db	32
   535  00FE5E  36                 	db	54	;'6'
   536  00FE5F  22                 	db	34
   537  00FE60  20                 	db	32
   538  00FE61  20                 	db	32
   539  00FE62  20                 	db	32
   540  00FE63  20                 	db	32
   541  00FE64  20                 	db	32
   542  00FE65  20                 	db	32
   543  00FE66  20                 	db	32
   544  00FE67  20                 	db	32
   545  00FE68  20                 	db	32
   546  00FE69  00                 	db	0
   547  00FE6A  20                 	db	32
   548  00FE6B  20                 	db	32
   549  00FE6C  20                 	db	32
   550  00FE6D  20                 	db	32
   551  00FE6E  59                 	db	89	;'Y'
   552  00FE6F  65                 	db	101	;'e'
   553  00FE70  73                 	db	115	;'s'
   554  00FE71  20                 	db	32
   555  00FE72  20                 	db	32
   556  00FE73  20                 	db	32
   557  00FE74  20                 	db	32
   558  00FE75  20                 	db	32
   559  00FE76  20                 	db	32
   560  00FE77  20                 	db	32
   561  00FE78  20                 	db	32
   562  00FE79  20                 	db	32
   563  00FE7A  00                 	db	0
   564  00FE7B  20                 	db	32
   565  00FE7C  20                 	db	32
   566  00FE7D  53                 	db	83	;'S'
   567  00FE7E  74                 	db	116	;'t'
   568  00FE7F  61                 	db	97	;'a'
   569  00FE80  72                 	db	114	;'r'
   570  00FE81  74                 	db	116	;'t'
   571  00FE82  20                 	db	32
   572  00FE83  20                 	db	32
   573  00FE84  20                 	db	32
   574  00FE85  20                 	db	32
   575  00FE86  20                 	db	32
   576  00FE87  20                 	db	32
   577  00FE88  20                 	db	32
   578  00FE89  20                 	db	32
   579  00FE8A  20                 	db	32
   580  00FE8B  00                 	db	0
   581  00FE8C                     STR_1:
   582  00FE8C  20                 	db	32
   583  00FE8D  20                 	db	32
   584  00FE8E  43                 	db	67	;'C'
   585  00FE8F  48                 	db	72	;'H'
   586  00FE90  41                 	db	65	;'A'
   587  00FE91  4E                 	db	78	;'N'
   588  00FE92  47                 	db	71	;'G'
   589  00FE93  45                 	db	69	;'E'
   590  00FE94  20                 	db	32
   591  00FE95  20                 	db	32
   592  00FE96  20                 	db	32
   593  00FE97  20                 	db	32
   594  00FE98  20                 	db	32
   595  00FE99  20                 	db	32
   596  00FE9A  20                 	db	32
   597  00FE9B  20                 	db	32
   598  00FE9C  00                 	db	0
   599  00FE9D  20                 	db	32
   600  00FE9E  20                 	db	32
   601  00FE9F  20                 	db	32
   602  00FEA0  20                 	db	32
   603  00FEA1  20                 	db	32
   604  00FEA2  20                 	db	32
   605  00FEA3  20                 	db	32
   606  00FEA4  20                 	db	32
   607  00FEA5  20                 	db	32
   608  00FEA6  4E                 	db	78	;'N'
   609  00FEA7  6F                 	db	111	;'o'
   610  00FEA8  20                 	db	32
   611  00FEA9  20                 	db	32
   612  00FEAA  20                 	db	32
   613  00FEAB  20                 	db	32
   614  00FEAC  20                 	db	32
   615  00FEAD  00                 	db	0
   616  00FEAE  20                 	db	32
   617  00FEAF  20                 	db	32
   618  00FEB0  20                 	db	32
   619  00FEB1  20                 	db	32
   620  00FEB2  59                 	db	89	;'Y'
   621  00FEB3  65                 	db	101	;'e'
   622  00FEB4  73                 	db	115	;'s'
   623  00FEB5  20                 	db	32
   624  00FEB6  20                 	db	32
   625  00FEB7  4E                 	db	78	;'N'
   626  00FEB8  6F                 	db	111	;'o'
   627  00FEB9  20                 	db	32
   628  00FEBA  20                 	db	32
   629  00FEBB  20                 	db	32
   630  00FEBC  20                 	db	32
   631  00FEBD  20                 	db	32
   632  00FEBE  00                 	db	0
   633  00FEBF  20                 	db	32
   634  00FEC0  20                 	db	32
   635  00FEC1  20                 	db	32
   636  00FEC2  20                 	db	32
   637  00FEC3  20                 	db	32
   638  00FEC4  20                 	db	32
   639  00FEC5  20                 	db	32
   640  00FEC6  20                 	db	32
   641  00FEC7  20                 	db	32
   642  00FEC8  31                 	db	49	;'1'
   643  00FEC9  32                 	db	50	;'2'
   644  00FECA  22                 	db	34
   645  00FECB  20                 	db	32
   646  00FECC  20                 	db	32
   647  00FECD  20                 	db	32
   648  00FECE  20                 	db	32
   649  00FECF  00                 	db	0
   650  00FED0  20                 	db	32
   651  00FED1  20                 	db	32
   652  00FED2  20                 	db	32
   653  00FED3  20                 	db	32
   654  00FED4  20                 	db	32
   655  00FED5  36                 	db	54	;'6'
   656  00FED6  22                 	db	34
   657  00FED7  20                 	db	32
   658  00FED8  20                 	db	32
   659  00FED9  31                 	db	49	;'1'
   660  00FEDA  32                 	db	50	;'2'
   661  00FEDB  22                 	db	34
   662  00FEDC  20                 	db	32
   663  00FEDD  20                 	db	32
   664  00FEDE  20                 	db	32
   665  00FEDF  20                 	db	32
   666  00FEE0  00                 	db	0
   667  00FEE1  20                 	db	32
   668  00FEE2  20                 	db	32
   669  00FEE3  23                 	db	35
   670  00FEE4  25                 	db	37
   671  00FEE5  69                 	db	105	;'i'
   672  00FEE6  20                 	db	32
   673  00FEE7  20                 	db	32
   674  00FEE8  20                 	db	32
   675  00FEE9  23                 	db	35
   676  00FEEA  25                 	db	37
   677  00FEEB  69                 	db	105	;'i'
   678  00FEEC  22                 	db	34
   679  00FEED  20                 	db	32
   680  00FEEE  20                 	db	32
   681  00FEEF  20                 	db	32
   682  00FEF0  20                 	db	32
   683  00FEF1  00                 	db	0
   684  00FEF2  20                 	db	32
   685  00FEF3  20                 	db	32
   686  00FEF4  20                 	db	32
   687  00FEF5  54                 	db	84	;'T'
   688  00FEF6  61                 	db	97	;'a'
   689  00FEF7  70                 	db	112	;'p'
   690  00FEF8  65                 	db	101	;'e'
   691  00FEF9  20                 	db	32
   692  00FEFA  4C                 	db	76	;'L'
   693  00FEFB  65                 	db	101	;'e'
   694  00FEFC  6E                 	db	110	;'n'
   695  00FEFD  67                 	db	103	;'g'
   696  00FEFE  74                 	db	116	;'t'
   697  00FEFF  68                 	db	104	;'h'
   698  00FF00  20                 	db	32
   699  00FF01  20                 	db	32
   700  00FF02  00                 	db	0
   701  00FF03  20                 	db	32
   702  00FF04  20                 	db	32
   703  00FF05  20                 	db	32
   704  00FF06  20                 	db	32
   705  00FF07  20                 	db	32
   706  00FF08  20                 	db	32
   707  00FF09  20                 	db	32
   708  00FF0A  20                 	db	32
   709  00FF0B  20                 	db	32
   710  00FF0C  53                 	db	83	;'S'
   711  00FF0D  65                 	db	101	;'e'
   712  00FF0E  74                 	db	116	;'t'
   713  00FF0F  75                 	db	117	;'u'
   714  00FF10  70                 	db	112	;'p'
   715  00FF11  20                 	db	32
   716  00FF12  20                 	db	32
   717  00FF13  00                 	db	0
   718  00FF14  20                 	db	32
   719  00FF15  20                 	db	32
   720  00FF16  53                 	db	83	;'S'
   721  00FF17  74                 	db	116	;'t'
   722  00FF18  61                 	db	97	;'a'
   723  00FF19  72                 	db	114	;'r'
   724  00FF1A  74                 	db	116	;'t'
   725  00FF1B  20                 	db	32
   726  00FF1C  54                 	db	84	;'T'
   727  00FF1D  6F                 	db	111	;'o'
   728  00FF1E  20                 	db	32
   729  00FF1F  43                 	db	67	;'C'
   730  00FF20  75                 	db	117	;'u'
   731  00FF21  74                 	db	116	;'t'
   732  00FF22  20                 	db	32
   733  00FF23  20                 	db	32
   734  00FF24  00                 	db	0
   735  00FF25                     STR_36:
   736  00FF25  54                 	db	84	;'T'
   737  00FF26  6F                 	db	111	;'o'
   738  00FF27  74                 	db	116	;'t'
   739  00FF28  61                 	db	97	;'a'
   740  00FF29  6C                 	db	108	;'l'
   741  00FF2A  20                 	db	32
   742  00FF2B  53                 	db	83	;'S'
   743  00FF2C  68                 	db	104	;'h'
   744  00FF2D  65                 	db	101	;'e'
   745  00FF2E  65                 	db	101	;'e'
   746  00FF2F  74                 	db	116	;'t'
   747  00FF30  73                 	db	115	;'s'
   748  00FF31  20                 	db	32
   749  00FF32  25                 	db	37
   750  00FF33  75                 	db	117	;'u'
   751  00FF34  20                 	db	32
   752  00FF35  00                 	db	0
   753  00FF36  20                 	db	32
   754  00FF37  20                 	db	32
   755  00FF38  23                 	db	35
   756  00FF39  25                 	db	37
   757  00FF3A  69                 	db	105	;'i'
   758  00FF3B  20                 	db	32
   759  00FF3C  20                 	db	32
   760  00FF3D  20                 	db	32
   761  00FF3E  23                 	db	35
   762  00FF3F  25                 	db	37
   763  00FF40  69                 	db	105	;'i'
   764  00FF41  22                 	db	34
   765  00FF42  20                 	db	32
   766  00FF43  20                 	db	32
   767  00FF44  2D                 	db	45
   768  00FF45  3E                 	db	62	;'>'
   769  00FF46  00                 	db	0
   770  00FF47  23                 	db	35
   771  00FF48  20                 	db	32
   772  00FF49  6F                 	db	111	;'o'
   773  00FF4A  66                 	db	102	;'f'
   774  00FF4B  20                 	db	32
   775  00FF4C  53                 	db	83	;'S'
   776  00FF4D  68                 	db	104	;'h'
   777  00FF4E  65                 	db	101	;'e'
   778  00FF4F  65                 	db	101	;'e'
   779  00FF50  74                 	db	116	;'t'
   780  00FF51  73                 	db	115	;'s'
   781  00FF52  3A                 	db	58	;':'
   782  00FF53  20                 	db	32
   783  00FF54  20                 	db	32
   784  00FF55  25                 	db	37
   785  00FF56  69                 	db	105	;'i'
   786  00FF57  00                 	db	0
   787  00FF58  20                 	db	32
   788  00FF59  20                 	db	32
   789  00FF5A  55                 	db	85	;'U'
   790  00FF5B  73                 	db	115	;'s'
   791  00FF5C  65                 	db	101	;'e'
   792  00FF5D  20                 	db	32
   793  00FF5E  56                 	db	86	;'V'
   794  00FF5F  61                 	db	97	;'a'
   795  00FF60  6C                 	db	108	;'l'
   796  00FF61  75                 	db	117	;'u'
   797  00FF62  65                 	db	101	;'e'
   798  00FF63  73                 	db	115	;'s'
   799  00FF64  3F                 	db	63	;'?'
   800  00FF65  20                 	db	32
   801  00FF66  20                 	db	32
   802  00FF67  00                 	db	0
   803  00FF68  20                 	db	32
   804  00FF69  20                 	db	32
   805  00FF6A  53                 	db	83	;'S'
   806  00FF6B  68                 	db	104	;'h'
   807  00FF6C  65                 	db	101	;'e'
   808  00FF6D  65                 	db	101	;'e'
   809  00FF6E  74                 	db	116	;'t'
   810  00FF6F  73                 	db	115	;'s'
   811  00FF70  20                 	db	32
   812  00FF71  4D                 	db	77	;'M'
   813  00FF72  6F                 	db	111	;'o'
   814  00FF73  64                 	db	100	;'d'
   815  00FF74  65                 	db	101	;'e'
   816  00FF75  20                 	db	32
   817  00FF76  20                 	db	32
   818  00FF77  00                 	db	0
   819  00FF78                     STR_2:
   820  00FF78  53                 	db	83	;'S'
   821  00FF79  68                 	db	104	;'h'
   822  00FF7A  65                 	db	101	;'e'
   823  00FF7B  65                 	db	101	;'e'
   824  00FF7C  74                 	db	116	;'t'
   825  00FF7D  73                 	db	115	;'s'
   826  00FF7E  3D                 	db	61	;'='
   827  00FF7F  25                 	db	37
   828  00FF80  75                 	db	117	;'u'
   829  00FF81  20                 	db	32
   830  00FF82  25                 	db	37
   831  00FF83  75                 	db	117	;'u'
   832  00FF84  69                 	db	105	;'i'
   833  00FF85  6E                 	db	110	;'n'
   834  00FF86  20                 	db	32
   835  00FF87  00                 	db	0
   836  00FF88  20                 	db	32
   837  00FF89  20                 	db	32
   838  00FF8A  20                 	db	32
   839  00FF8B  20                 	db	32
   840  00FF8C  20                 	db	32
   841  00FF8D  20                 	db	32
   842  00FF8E  20                 	db	32
   843  00FF8F  20                 	db	32
   844  00FF90  4D                 	db	77	;'M'
   845  00FF91  61                 	db	97	;'a'
   846  00FF92  78                 	db	120	;'x'
   847  00FF93  20                 	db	32
   848  00FF94  39                 	db	57	;'9'
   849  00FF95  39                 	db	57	;'9'
   850  00FF96  39                 	db	57	;'9'
   851  00FF97  00                 	db	0
   852  00FF98  20                 	db	32
   853  00FF99  20                 	db	32
   854  00FF9A  23                 	db	35
   855  00FF9B  25                 	db	37
   856  00FF9C  69                 	db	105	;'i'
   857  00FF9D  20                 	db	32
   858  00FF9E  20                 	db	32
   859  00FF9F  20                 	db	32
   860  00FFA0  23                 	db	35
   861  00FFA1  25                 	db	37
   862  00FFA2  69                 	db	105	;'i'
   863  00FFA3  22                 	db	34
   864  00FFA4  20                 	db	32
   865  00FFA5  2D                 	db	45
   866  00FFA6  3E                 	db	62	;'>'
   867  00FFA7  00                 	db	0
   868  00FFA8  23                 	db	35
   869  00FFA9  20                 	db	32
   870  00FFAA  6F                 	db	111	;'o'
   871  00FFAB  66                 	db	102	;'f'
   872  00FFAC  20                 	db	32
   873  00FFAD  53                 	db	83	;'S'
   874  00FFAE  68                 	db	104	;'h'
   875  00FFAF  65                 	db	101	;'e'
   876  00FFB0  65                 	db	101	;'e'
   877  00FFB1  74                 	db	116	;'t'
   878  00FFB2  73                 	db	115	;'s'
   879  00FFB3  3A                 	db	58	;':'
   880  00FFB4  20                 	db	32
   881  00FFB5  25                 	db	37
   882  00FFB6  69                 	db	105	;'i'
   883  00FFB7  00                 	db	0
   884  00FFB8  20                 	db	32
   885  00FFB9  20                 	db	32
   886  00FFBA  23                 	db	35
   887  00FFBB  25                 	db	37
   888  00FFBC  69                 	db	105	;'i'
   889  00FFBD  20                 	db	32
   890  00FFBE  20                 	db	32
   891  00FFBF  20                 	db	32
   892  00FFC0  23                 	db	35
   893  00FFC1  25                 	db	37
   894  00FFC2  69                 	db	105	;'i'
   895  00FFC3  22                 	db	34
   896  00FFC4  2D                 	db	45
   897  00FFC5  3E                 	db	62	;'>'
   898  00FFC6  00                 	db	0
   899  00FFC7  4E                 	db	78	;'N'
   900  00FFC8  6F                 	db	111	;'o'
   901  00FFC9  20                 	db	32
   902  00FFCA  44                 	db	68	;'D'
   903  00FFCB  61                 	db	97	;'a'
   904  00FFCC  74                 	db	116	;'t'
   905  00FFCD  61                 	db	97	;'a'
   906  00FFCE  20                 	db	32
   907  00FFCF  25                 	db	37
   908  00FFD0  69                 	db	105	;'i'
   909  00FFD1  20                 	db	32
   910  00FFD2  20                 	db	32
   911  00FFD3  25                 	db	37
   912  00FFD4  69                 	db	105	;'i'
   913  00FFD5  00                 	db	0
   914  00FFD6  23                 	db	35
   915  00FFD7  20                 	db	32
   916  00FFD8  6F                 	db	111	;'o'
   917  00FFD9  66                 	db	102	;'f'
   918  00FFDA  20                 	db	32
   919  00FFDB  53                 	db	83	;'S'
   920  00FFDC  68                 	db	104	;'h'
   921  00FFDD  65                 	db	101	;'e'
   922  00FFDE  65                 	db	101	;'e'
   923  00FFDF  74                 	db	116	;'t'
   924  00FFE0  73                 	db	115	;'s'
   925  00FFE1  3A                 	db	58	;':'
   926  00FFE2  25                 	db	37
   927  00FFE3  69                 	db	105	;'i'
   928  00FFE4  00                 	db	0
   929  00FFE5                     STR_34:
   930  00FFE5  40                 	db	64	;'@'
   931  00FFE6  25                 	db	37
   932  00FFE7  69                 	db	105	;'i'
   933  00FFE8  20                 	db	32
   934  00FFE9  41                 	db	65	;'A'
   935  00FFEA  43                 	db	67	;'C'
   936  00FFEB  43                 	db	67	;'C'
   937  00FFEC  46                 	db	70	;'F'
   938  00FFED  20                 	db	32
   939  00FFEE  25                 	db	37
   940  00FFEF  69                 	db	105	;'i'
   941  00FFF0  0A                 	db	10
   942  00FFF1  00                 	db	0
   943  00FFF2                     STR_35:
   944  00FFF2  40                 	db	64	;'@'
   945  00FFF3  25                 	db	37
   946  00FFF4  69                 	db	105	;'i'
   947  00FFF5  20                 	db	32
   948  00FFF6  52                 	db	82	;'R'
   949  00FFF7  4D                 	db	77	;'M'
   950  00FFF8  4F                 	db	79	;'O'
   951  00FFF9  56                 	db	86	;'V'
   952  00FFFA  20                 	db	32
   953  00FFFB  25                 	db	37
   954  00FFFC  69                 	db	105	;'i'
   955  00FFFD  0A                 	db	10
   956  00FFFE  00                 	db	0
   957  00FFFF  00                 	db	0	; dummy byte at the end
   958  0000                     
   959                           ; #config settings
   960                           
   961                           	psect	cinit
   962  011A48                     __pcinit:
   963                           	callstack 0
   964  011A48                     start_initialization:
   965                           	callstack 0
   966  011A48                     __initialization:
   967                           	callstack 0
   968                           
   969                           ; Clear objects allocated to BANK1 (66 bytes)
   970  011A48  EE01  F000         	lfsr	0,__pbssBANK1
   971  011A4C  0E42               	movlw	66
   972  011A4E                     clear_0:
   973  011A4E  6AEE               	clrf	postinc0,c
   974  011A50  06E8               	decf	wreg,f,c
   975  011A52  E1FD               	bnz	clear_0
   976                           
   977                           ; Clear objects allocated to BANK0 (1 bytes)
   978  011A54  0100               	movlb	0
   979  011A56  6BF1               	clrf	__pbssBANK0& (0+255),b
   980                           
   981                           ; Clear objects allocated to COMRAM (9 bytes)
   982  011A58  EE00  F04D         	lfsr	0,__pbssCOMRAM
   983  011A5C  0E09               	movlw	9
   984  011A5E                     clear_1:
   985  011A5E  6AEE               	clrf	postinc0,c
   986  011A60  06E8               	decf	wreg,f,c
   987  011A62  E1FD               	bnz	clear_1
   988  011A64                     end_of_initialization:
   989                           	callstack 0
   990  011A64                     __end_of__initialization:
   991                           	callstack 0
   992  011A64  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   993  011A66  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   994  011A68  0100               	movlb	0
   995  011A6A  EF0F  F08A         	goto	_main	;jump to C main() function
   996                           
   997                           	psect	bssCOMRAM
   998  00004D                     __pbssCOMRAM:
   999                           	callstack 0
  1000  00004D                     _prec:
  1001                           	callstack 0
  1002  00004D                     	ds	2
  1003  00004F                     _flags:
  1004                           	callstack 0
  1005  00004F                     	ds	2
  1006  000051                     _eusart2RxLastError:
  1007                           	callstack 0
  1008  000051                     	ds	1
  1009  000052                     _eusart1RxLastError:
  1010                           	callstack 0
  1011  000052                     	ds	1
  1012  000053                     _eusart1RxCount:
  1013                           	callstack 0
  1014  000053                     	ds	1
  1015  000054                     _eusart1RxTail:
  1016                           	callstack 0
  1017  000054                     	ds	1
  1018  000055                     _eusart1RxHead:
  1019                           	callstack 0
  1020  000055                     	ds	1
  1021                           
  1022                           	psect	bssBANK0
  1023  0000F1                     __pbssBANK0:
  1024                           	callstack 0
  1025  0000F1                     _quickTime:
  1026                           	callstack 0
  1027  0000F1                     	ds	1
  1028                           
  1029                           	psect	bssBANK1
  1030  000100                     __pbssBANK1:
  1031                           	callstack 0
  1032  000100                     _eusart1RxStatusBuffer:
  1033                           	callstack 0
  1034  000100                     	ds	8
  1035  000108                     _eusart1RxBuffer:
  1036                           	callstack 0
  1037  000108                     	ds	8
  1038  000110                     _input:
  1039                           	callstack 0
  1040  000110                     	ds	4
  1041  000114                     _count:
  1042                           	callstack 0
  1043  000114                     	ds	4
  1044  000118                     _nout:
  1045                           	callstack 0
  1046  000118                     	ds	2
  1047  00011A                     _width:
  1048                           	callstack 0
  1049  00011A                     	ds	2
  1050  00011C                     _scaledValuePast:
  1051                           	callstack 0
  1052  00011C                     	ds	2
  1053  00011E                     _scaledValue:
  1054                           	callstack 0
  1055  00011E                     	ds	2
  1056  000120                     _status:
  1057                           	callstack 0
  1058  000120                     	ds	1
  1059  000121                     _start:
  1060                           	callstack 0
  1061  000121                     	ds	1
  1062  000122                     _dbuf:
  1063                           	callstack 0
  1064  000122                     	ds	32
  1065                           
  1066                           	psect	cstackBANK1
  1067  000160                     __pcstackBANK1:
  1068                           	callstack 0
  1069  000160                     LaySheetsOnTrays@lcd_string:
  1070                           	callstack 0
  1071                           
  1072                           ; 16 bytes @ 0x0
  1073  000160                     	ds	16
  1074  000170                     LaySheetsOnTrays@forwardCount:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x10
  1078  000170                     	ds	2
  1079  000172                     LaySheetsOnTrays@returnCount:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x12
  1083  000172                     	ds	2
  1084  000174                     LaySheetsOnTrays@totalSheetsPlaced:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x14
  1088  000174                     	ds	2
  1089  000176                     LaySheetsOnTrays@motorNumber:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x16
  1093  000176                     	ds	1
  1094                           
  1095                           	psect	cstackBANK0
  1096  000060                     __pcstackBANK0:
  1097                           	callstack 0
  1098  000060                     ?_vfpfcnvrt:
  1099                           	callstack 0
  1100  000060                     vfpfcnvrt@fp:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x0
  1104  000060                     	ds	2
  1105  000062                     vfpfcnvrt@fmt:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x2
  1109  000062                     	ds	2
  1110  000064                     vfpfcnvrt@ap:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x4
  1114  000064                     	ds	2
  1115  000066                     vfpfcnvrt@ll:
  1116                           	callstack 0
  1117                           
  1118                           ; 8 bytes @ 0x6
  1119  000066                     	ds	8
  1120  00006E                     vfpfcnvrt@llu:
  1121                           	callstack 0
  1122                           
  1123                           ; 8 bytes @ 0xE
  1124  00006E                     	ds	8
  1125  000076                     ?_vfprintf:
  1126                           	callstack 0
  1127  000076                     vfprintf@fp:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x16
  1131  000076                     	ds	2
  1132  000078                     vfprintf@fmt:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x18
  1136  000078                     	ds	2
  1137  00007A                     vfprintf@ap:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x1A
  1141  00007A                     	ds	2
  1142  00007C                     vfprintf@cfmt:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x1C
  1146  00007C                     	ds	2
  1147  00007E                     ?_sprintf:
  1148                           	callstack 0
  1149  00007E                     sprintf@s:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x1E
  1153  00007E                     	ds	2
  1154  000080                     sprintf@fmt:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x20
  1158  000080                     	ds	6
  1159  000086                     sprintf@ap:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x26
  1163  000086                     	ds	2
  1164  000088                     sprintf@f:
  1165                           	callstack 0
  1166                           
  1167                           ; 11 bytes @ 0x28
  1168  000088                     	ds	11
  1169  000093                     ??_lcd_GUI:
  1170  000093                     rmove@speed:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x33
  1174  000093                     	ds	2
  1175  000095                     rmove@pos:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x35
  1179  000095                     	ds	1
  1180  000096                     lcd_GUI@lcd_string:
  1181                           	callstack 0
  1182                           
  1183                           ; 16 bytes @ 0x36
  1184  000096                     	ds	1
  1185  000097                     ??_rmove:
  1186                           
  1187                           ; 1 bytes @ 0x37
  1188  000097                     	ds	1
  1189  000098                     rmove@speed_buf:
  1190                           	callstack 0
  1191                           
  1192                           ; 40 bytes @ 0x38
  1193  000098                     	ds	14
  1194  0000A6                     lcd_GUI@page:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x46
  1198  0000A6                     	ds	2
  1199  0000A8                     lcd_GUI@select_bool:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x48
  1203  0000A8                     	ds	2
  1204  0000AA                     lcd_GUI@i:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x4A
  1208  0000AA                     	ds	2
  1209  0000AC                     lcd_GUI@sheetsEEprom:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x4C
  1213  0000AC                     	ds	2
  1214  0000AE                     lcd_GUI@LengthEEprom:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x4E
  1218  0000AE                     	ds	2
  1219  0000B0                     lcd_GUI@selectSwitch:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x50
  1223  0000B0                     	ds	1
  1224  0000B1                     lcd_GUI@pastCount:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x51
  1228  0000B1                     	ds	2
  1229  0000B3                     lcd_GUI@location:
  1230                           	callstack 0
  1231                           
  1232                           ; 1 bytes @ 0x53
  1233  0000B3                     	ds	1
  1234  0000B4                     lcd_GUI@presentCount:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x54
  1238  0000B4                     	ds	12
  1239  0000C0                     rmove@move_buf:
  1240                           	callstack 0
  1241                           
  1242                           ; 40 bytes @ 0x60
  1243  0000C0                     	ds	40
  1244  0000E8                     rmove@motor:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0x88
  1248  0000E8                     	ds	1
  1249  0000E9                     LaySheetsOnTrays@sheetCount:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x89
  1253  0000E9                     	ds	2
  1254  0000EB                     LaySheetsOnTrays@sheetSize:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x8B
  1258  0000EB                     	ds	1
  1259  0000EC                     ??_LaySheetsOnTrays:
  1260                           
  1261                           ; 1 bytes @ 0x8C
  1262  0000EC                     	ds	3
  1263  0000EF                     ??_main:
  1264                           
  1265                           ; 1 bytes @ 0x8F
  1266  0000EF                     	ds	2
  1267                           
  1268                           	psect	cstackCOMRAM
  1269  000001                     __pcstackCOMRAM:
  1270                           	callstack 0
  1271  000001                     ??_INT0_DefaultInterruptHandler:
  1272  000001                     
  1273                           ; 1 bytes @ 0x0
  1274  000001                     	ds	5
  1275  000006                     ??_INTERRUPT_InterruptManager:
  1276                           
  1277                           ; 1 bytes @ 0x5
  1278  000006                     	ds	4
  1279  00000A                     ?_strlen:
  1280                           	callstack 0
  1281  00000A                     ?_INT0_Read_Count:
  1282                           	callstack 0
  1283  00000A                     ?___fltol:
  1284                           	callstack 0
  1285  00000A                     ?___aodiv:
  1286                           	callstack 0
  1287  00000A                     ?___aomod:
  1288                           	callstack 0
  1289  00000A                     ?___lodiv:
  1290                           	callstack 0
  1291  00000A                     ?___lomod:
  1292                           	callstack 0
  1293  00000A                     EUSART1_Write@txData:
  1294                           	callstack 0
  1295  00000A                     EUSART2_Write@txData:
  1296                           	callstack 0
  1297  00000A                     DATAEE_ReadByte@bAdd:
  1298                           	callstack 0
  1299  00000A                     fputc@c:
  1300                           	callstack 0
  1301  00000A                     strcpy@dest:
  1302                           	callstack 0
  1303  00000A                     strlen@s:
  1304                           	callstack 0
  1305  00000A                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1306                           	callstack 0
  1307  00000A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1308                           	callstack 0
  1309  00000A                     EUSART1_SetErrorHandler@interruptHandler:
  1310                           	callstack 0
  1311  00000A                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1312                           	callstack 0
  1313  00000A                     INT0_SetInterruptHandler@InterruptHandler:
  1314                           	callstack 0
  1315  00000A                     INT1_SetInterruptHandler@InterruptHandler:
  1316                           	callstack 0
  1317  00000A                     INT2_SetInterruptHandler@InterruptHandler:
  1318                           	callstack 0
  1319  00000A                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1320                           	callstack 0
  1321  00000A                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1322                           	callstack 0
  1323  00000A                     EUSART2_SetErrorHandler@interruptHandler:
  1324                           	callstack 0
  1325  00000A                     ___fltol@f1:
  1326                           	callstack 0
  1327  00000A                     ___aodiv@dividend:
  1328                           	callstack 0
  1329  00000A                     ___aomod@dividend:
  1330                           	callstack 0
  1331  00000A                     ___lodiv@dividend:
  1332                           	callstack 0
  1333  00000A                     ___lomod@dividend:
  1334                           	callstack 0
  1335                           
  1336                           ; 8 bytes @ 0x9
  1337  00000A                     	ds	1
  1338  00000B                     ??_lcd_clear:
  1339  00000B                     lcd_set_cursor@pos:
  1340                           	callstack 0
  1341  00000B                     TX_Buffer2@buff:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0xA
  1345  00000B                     	ds	1
  1346  00000C                     fputc@fp:
  1347                           	callstack 0
  1348  00000C                     strcpy@src:
  1349                           	callstack 0
  1350  00000C                     strlen@a:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0xB
  1354  00000C                     	ds	1
  1355  00000D                     TX_Buffer2@size:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0xC
  1359  00000D                     	ds	1
  1360  00000E                     ??_strcpy:
  1361  00000E                     ??_fputc:
  1362  00000E                     ??___fltol:
  1363  00000E                     TX_Buffer2@i:
  1364                           	callstack 0
  1365  00000E                     TX_Buffer1@buff:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0xD
  1369  00000E                     	ds	2
  1370  000010                     TX_Buffer1@size:
  1371                           	callstack 0
  1372  000010                     strcpy@s:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0xF
  1376  000010                     	ds	1
  1377  000011                     TX_Buffer1@i:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x10
  1381  000011                     	ds	1
  1382  000012                     ___fltol@sign1:
  1383                           	callstack 0
  1384  000012                     strcpy@d:
  1385                           	callstack 0
  1386  000012                     ___aodiv@divisor:
  1387                           	callstack 0
  1388  000012                     ___aomod@divisor:
  1389                           	callstack 0
  1390  000012                     ___lodiv@divisor:
  1391                           	callstack 0
  1392  000012                     ___lomod@divisor:
  1393                           	callstack 0
  1394                           
  1395                           ; 8 bytes @ 0x11
  1396  000012                     	ds	1
  1397  000013                     ___fltol@exp1:
  1398                           	callstack 0
  1399  000013                     fputs@s:
  1400                           	callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x12
  1403  000013                     	ds	1
  1404  000014                     ?___wmul:
  1405                           	callstack 0
  1406  000014                     lcd_print@str:
  1407                           	callstack 0
  1408  000014                     ___wmul@multiplier:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x13
  1412  000014                     	ds	1
  1413  000015                     fputs@fp:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x14
  1417  000015                     	ds	1
  1418  000016                     ___wmul@multiplicand:
  1419                           	callstack 0
  1420  000016                     lcd_print@Buffer:
  1421                           	callstack 0
  1422                           
  1423                           ; 16 bytes @ 0x15
  1424  000016                     	ds	1
  1425  000017                     fputs@c:
  1426                           	callstack 0
  1427                           
  1428                           ; 1 bytes @ 0x16
  1429  000017                     	ds	1
  1430  000018                     ___wmul@product:
  1431                           	callstack 0
  1432  000018                     fputs@i:
  1433                           	callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x17
  1436  000018                     	ds	2
  1437  00001A                     ?_distance:
  1438                           	callstack 0
  1439  00001A                     ?_pad:
  1440                           	callstack 0
  1441  00001A                     ___aodiv@counter:
  1442                           	callstack 0
  1443  00001A                     ___aomod@counter:
  1444                           	callstack 0
  1445  00001A                     ___lomod@counter:
  1446                           	callstack 0
  1447  00001A                     pad@fp:
  1448                           	callstack 0
  1449  00001A                     distance@inch:
  1450                           	callstack 0
  1451  00001A                     ___lodiv@quotient:
  1452                           	callstack 0
  1453                           
  1454                           ; 8 bytes @ 0x19
  1455  00001A                     	ds	1
  1456  00001B                     ___aodiv@sign:
  1457                           	callstack 0
  1458  00001B                     ___aomod@sign:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x1A
  1462  00001B                     	ds	1
  1463  00001C                     ?_abs:
  1464                           	callstack 0
  1465  00001C                     pad@buf:
  1466                           	callstack 0
  1467  00001C                     abs@a:
  1468                           	callstack 0
  1469  00001C                     ___aodiv@quotient:
  1470                           	callstack 0
  1471                           
  1472                           ; 8 bytes @ 0x1B
  1473  00001C                     	ds	2
  1474  00001E                     ??_abs:
  1475  00001E                     pad@p:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x1D
  1479  00001E                     	ds	2
  1480  000020                     ??_pad:
  1481                           
  1482                           ; 1 bytes @ 0x1F
  1483  000020                     	ds	1
  1484  000021                     pad@i:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x20
  1488  000021                     	ds	1
  1489  000022                     ___lodiv@counter:
  1490                           	callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x21
  1493  000022                     	ds	1
  1494  000023                     pad@w:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x22
  1498  000023                     	ds	2
  1499  000025                     ?_dtoa:
  1500                           	callstack 0
  1501  000025                     ?_utoa:
  1502                           	callstack 0
  1503  000025                     dtoa@fp:
  1504                           	callstack 0
  1505  000025                     utoa@fp:
  1506                           	callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x24
  1509  000025                     	ds	2
  1510  000027                     dtoa@d:
  1511                           	callstack 0
  1512  000027                     utoa@d:
  1513                           	callstack 0
  1514                           
  1515                           ; 8 bytes @ 0x26
  1516  000027                     	ds	8
  1517  00002F                     ??_dtoa:
  1518  00002F                     ??_utoa:
  1519                           
  1520                           ; 1 bytes @ 0x2E
  1521  00002F                     	ds	8
  1522  000037                     _dtoa$1694:
  1523                           	callstack 0
  1524  000037                     utoa@p:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x36
  1528  000037                     	ds	2
  1529  000039                     dtoa@p:
  1530                           	callstack 0
  1531  000039                     utoa@w:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x38
  1535  000039                     	ds	2
  1536  00003B                     dtoa@w:
  1537                           	callstack 0
  1538  00003B                     utoa@n:
  1539                           	callstack 0
  1540                           
  1541                           ; 8 bytes @ 0x3A
  1542  00003B                     	ds	2
  1543  00003D                     dtoa@s:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x3C
  1547  00003D                     	ds	2
  1548  00003F                     dtoa@n:
  1549                           	callstack 0
  1550                           
  1551                           ; 8 bytes @ 0x3E
  1552  00003F                     	ds	4
  1553  000043                     utoa@i:
  1554                           	callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x42
  1557  000043                     	ds	4
  1558  000047                     dtoa@i:
  1559                           	callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x46
  1562  000047                     	ds	2
  1563  000049                     ??_vfpfcnvrt:
  1564                           
  1565                           ; 1 bytes @ 0x48
  1566  000049                     	ds	4
  1567  00004D                     
  1568 ;; *************** function _lcd_clear *****************
  1569 ;; Defined at:
  1570 ;;		line 536 in file "main.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 5
  1591 ;; This function calls:
  1592 ;;		_EUSART2_Write
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text1
  1599  011ABA                     __ptext1:
  1600                           	callstack 0
  1601  011ABA                     _lcd_clear:
  1602                           	callstack 25
  1603  011ABA                     
  1604                           ;main.c: 537:        EUSART2_Write(0xfe);
  1605  011ABA  0EFE               	movlw	254
  1606  011ABC  ECB0  F08D         	call	_EUSART2_Write
  1607                           
  1608                           ;main.c: 538:        EUSART2_Write(0x51);
  1609  011AC0  0E51               	movlw	81
  1610  011AC2  ECB0  F08D         	call	_EUSART2_Write
  1611  011AC6                     
  1612                           ;main.c: 539:        _delay((unsigned long)((2)*(8000000/4000.0)));
  1613  011AC6  0E06               	movlw	6
  1614  011AC8  6E0B               	movwf	??_lcd_clear^0,c
  1615  011ACA  0E30               	movlw	48
  1616  011ACC                     u4237:
  1617  011ACC  2EE8               	decfsz	wreg,f,c
  1618  011ACE  D7FE               	bra	u4237
  1619  011AD0  2E0B               	decfsz	??_lcd_clear^0,f,c
  1620  011AD2  D7FC               	bra	u4237
  1621  011AD4  D000               	nop2	
  1622  011AD6  0012               	return		;funcret
  1623  011AD8                     __end_of_lcd_clear:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _lcd_GUI *****************
  1627 ;; Defined at:
  1628 ;;		line 160 in file "main.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  lcd_string     16   54[BANK0 ] unsigned char [16]
  1633 ;;  presentCount    2   84[BANK0 ] int 
  1634 ;;  pastCount       2   81[BANK0 ] int 
  1635 ;;  LengthEEprom    2   78[BANK0 ] int 
  1636 ;;  sheetsEEprom    2   76[BANK0 ] int 
  1637 ;;  i               2   74[BANK0 ] int 
  1638 ;;  select_bool     2   72[BANK0 ] int 
  1639 ;;  page            2   70[BANK0 ] int 
  1640 ;;  yes_no          2    0        int 
  1641 ;;  location        1   83[BANK0 ] unsigned char 
  1642 ;;  selectSwitch    1   80[BANK0 ] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      unsigned char 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;Total ram usage:       35 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 12
  1659 ;; This function calls:
  1660 ;;		_DATAEE_ReadByte
  1661 ;;		_INT0_Read_Count
  1662 ;;		_lcd_print
  1663 ;;		_lcd_set_cursor
  1664 ;;		_sprintf
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text2
  1671  010558                     __ptext2:
  1672                           	callstack 0
  1673  010558                     _lcd_GUI:
  1674                           	callstack 18
  1675  010558                     
  1676                           ;main.c: 171:         int page = 0;
  1677  010558  0E00               	movlw	0
  1678  01055A  0100               	movlb	0	; () banked
  1679  01055C  6FA7               	movwf	(lcd_GUI@page+1)& (0+255),b
  1680  01055E  0E00               	movlw	0
  1681  010560  6FA6               	movwf	lcd_GUI@page& (0+255),b
  1682                           
  1683                           ;main.c: 172:         char lcd_string[16];;main.c: 173:         int select_bool = 0;
  1684  010562  0E00               	movlw	0
  1685  010564  6FA9               	movwf	(lcd_GUI@select_bool+1)& (0+255),b
  1686  010566  0E00               	movlw	0
  1687  010568  6FA8               	movwf	lcd_GUI@select_bool& (0+255),b
  1688                           
  1689                           ;main.c: 174:         int i = 0, pastCount, presentCount;
  1690  01056A  0E00               	movlw	0
  1691  01056C  6FAB               	movwf	(lcd_GUI@i+1)& (0+255),b
  1692  01056E  0E00               	movlw	0
  1693  010570  6FAA               	movwf	lcd_GUI@i& (0+255),b
  1694                           
  1695                           ;main.c: 175:         char location = 0;
  1696  010572  0E00               	movlw	0
  1697  010574  6FB3               	movwf	lcd_GUI@location& (0+255),b
  1698                           
  1699                           ;main.c: 176:         char selectSwitch = 0;
  1700  010576  0E00               	movlw	0
  1701  010578  6FB0               	movwf	lcd_GUI@selectSwitch& (0+255),b
  1702  01057A                     
  1703                           ; BSR set to: 0
  1704  01057A  EC0D  F08E         	call	_INT0_Read_Count	;wreg free
  1705  01057E  C00A  F0B1         	movff	?_INT0_Read_Count,lcd_GUI@pastCount
  1706  010582  C00B  F0B2         	movff	?_INT0_Read_Count+1,lcd_GUI@pastCount+1
  1707  010586                     
  1708                           ;main.c: 180:         sheetsEEprom = DATAEE_ReadByte(0);
  1709  010586  0E00               	movlw	0
  1710  010588  6E0B               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  1711  01058A  0E00               	movlw	0
  1712  01058C  6E0A               	movwf	DATAEE_ReadByte@bAdd^0,c
  1713  01058E  ECBC  F08D         	call	_DATAEE_ReadByte	;wreg free
  1714  010592  0100               	movlb	0	; () banked
  1715  010594  6F93               	movwf	??_lcd_GUI& (0+255),b
  1716  010596  5193               	movf	??_lcd_GUI& (0+255),w,b
  1717  010598  6FAC               	movwf	lcd_GUI@sheetsEEprom& (0+255),b
  1718  01059A  6BAD               	clrf	(lcd_GUI@sheetsEEprom+1)& (0+255),b
  1719  01059C                     
  1720                           ; BSR set to: 0
  1721                           ;main.c: 181:         sheetsEEprom = sheetsEEprom + (DATAEE_ReadByte(1) <<8);
  1722  01059C  0E00               	movlw	0
  1723  01059E  6E0B               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  1724  0105A0  0E01               	movlw	1
  1725  0105A2  6E0A               	movwf	DATAEE_ReadByte@bAdd^0,c
  1726  0105A4  ECBC  F08D         	call	_DATAEE_ReadByte	;wreg free
  1727  0105A8  0100               	movlb	0	; () banked
  1728  0105AA  6F93               	movwf	??_lcd_GUI& (0+255),b
  1729  0105AC  5193               	movf	??_lcd_GUI& (0+255),w,b
  1730  0105AE  6F95               	movwf	(??_lcd_GUI+2)& (0+255),b
  1731  0105B0  6B94               	clrf	(??_lcd_GUI+1)& (0+255),b
  1732  0105B2  51AC               	movf	lcd_GUI@sheetsEEprom& (0+255),w,b
  1733  0105B4  2594               	addwf	(??_lcd_GUI+1)& (0+255),w,b
  1734  0105B6  6FAC               	movwf	lcd_GUI@sheetsEEprom& (0+255),b
  1735  0105B8  51AD               	movf	(lcd_GUI@sheetsEEprom+1)& (0+255),w,b
  1736  0105BA  2195               	addwfc	(??_lcd_GUI+2)& (0+255),w,b
  1737  0105BC  6FAD               	movwf	(lcd_GUI@sheetsEEprom+1)& (0+255),b
  1738  0105BE                     
  1739                           ; BSR set to: 0
  1740                           ;main.c: 183:         LengthEEprom = DATAEE_ReadByte(2);
  1741  0105BE  0E00               	movlw	0
  1742  0105C0  6E0B               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  1743  0105C2  0E02               	movlw	2
  1744  0105C4  6E0A               	movwf	DATAEE_ReadByte@bAdd^0,c
  1745  0105C6  ECBC  F08D         	call	_DATAEE_ReadByte	;wreg free
  1746  0105CA  0100               	movlb	0	; () banked
  1747  0105CC  6F93               	movwf	??_lcd_GUI& (0+255),b
  1748  0105CE  5193               	movf	??_lcd_GUI& (0+255),w,b
  1749  0105D0  6FAE               	movwf	lcd_GUI@LengthEEprom& (0+255),b
  1750  0105D2  6BAF               	clrf	(lcd_GUI@LengthEEprom+1)& (0+255),b
  1751  0105D4                     
  1752                           ; BSR set to: 0
  1753                           ;main.c: 184:         LengthEEprom = LengthEEprom + (DATAEE_ReadByte(3) <<8);
  1754  0105D4  0E00               	movlw	0
  1755  0105D6  6E0B               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  1756  0105D8  0E03               	movlw	3
  1757  0105DA  6E0A               	movwf	DATAEE_ReadByte@bAdd^0,c
  1758  0105DC  ECBC  F08D         	call	_DATAEE_ReadByte	;wreg free
  1759  0105E0  0100               	movlb	0	; () banked
  1760  0105E2  6F93               	movwf	??_lcd_GUI& (0+255),b
  1761  0105E4  5193               	movf	??_lcd_GUI& (0+255),w,b
  1762  0105E6  6F95               	movwf	(??_lcd_GUI+2)& (0+255),b
  1763  0105E8  6B94               	clrf	(??_lcd_GUI+1)& (0+255),b
  1764  0105EA  51AE               	movf	lcd_GUI@LengthEEprom& (0+255),w,b
  1765  0105EC  2594               	addwf	(??_lcd_GUI+1)& (0+255),w,b
  1766  0105EE  6FAE               	movwf	lcd_GUI@LengthEEprom& (0+255),b
  1767  0105F0  51AF               	movf	(lcd_GUI@LengthEEprom+1)& (0+255),w,b
  1768  0105F2  2195               	addwfc	(??_lcd_GUI+2)& (0+255),w,b
  1769  0105F4  6FAF               	movwf	(lcd_GUI@LengthEEprom+1)& (0+255),b
  1770  0105F6                     
  1771                           ; BSR set to: 0
  1772                           ;main.c: 186:         sprintf(lcd_string,"Sheets=%u %uin ",120,6);
  1773  0105F6  0E96               	movlw	low lcd_GUI@lcd_string
  1774  0105F8  6F7E               	movwf	sprintf@s& (0+255),b
  1775  0105FA  0E00               	movlw	high lcd_GUI@lcd_string
  1776  0105FC  6F7F               	movwf	(sprintf@s+1)& (0+255),b
  1777  0105FE  0E78               	movlw	low STR_2
  1778  010600  6F80               	movwf	sprintf@fmt& (0+255),b
  1779  010602  0EFF               	movlw	high STR_2
  1780  010604  6F81               	movwf	(sprintf@fmt+1)& (0+255),b
  1781  010606  0E00               	movlw	0
  1782  010608  6F83               	movwf	(?_sprintf+5)& (0+255),b
  1783  01060A  0E78               	movlw	120
  1784  01060C  6F82               	movwf	(?_sprintf+4)& (0+255),b
  1785  01060E  0E00               	movlw	0
  1786  010610  6F85               	movwf	(?_sprintf+7)& (0+255),b
  1787  010612  0E06               	movlw	6
  1788  010614  6F84               	movwf	(?_sprintf+6)& (0+255),b
  1789  010616  ECA3  F08B         	call	_sprintf	;wreg free
  1790  01061A                     
  1791                           ;main.c: 187:         lcd_print(lcd_string);
  1792  01061A  0E96               	movlw	low lcd_GUI@lcd_string
  1793  01061C  6E14               	movwf	lcd_print@str^0,c
  1794  01061E  0E00               	movlw	high lcd_GUI@lcd_string
  1795  010620  6E15               	movwf	(lcd_print@str+1)^0,c
  1796  010622  EC37  F08D         	call	_lcd_print	;wreg free
  1797  010626                     
  1798                           ;main.c: 188:         lcd_set_cursor(64);
  1799  010626  0E40               	movlw	64
  1800  010628  EC7B  F08D         	call	_lcd_set_cursor
  1801  01062C                     
  1802                           ;main.c: 189:         lcd_print("  Start  Change  ");
  1803  01062C  0E47               	movlw	low STR_3
  1804  01062E  6E14               	movwf	lcd_print@str^0,c
  1805  010630  0EFE               	movlw	high STR_3
  1806  010632  6E15               	movwf	(lcd_print@str+1)^0,c
  1807  010634  EC37  F08D         	call	_lcd_print	;wreg free
  1808  010638                     l4445:
  1809                           
  1810                           ;main.c: 200:             if(location == 0)
  1811  010638  0100               	movlb	0	; () banked
  1812  01063A  51B3               	movf	lcd_GUI@location& (0+255),w,b
  1813  01063C  A4D8               	btfss	status,2,c
  1814  01063E  EF23  F083         	goto	u3781
  1815  010642  EF25  F083         	goto	u3780
  1816  010646                     u3781:
  1817  010646  EF53  F083         	goto	l4457
  1818  01064A                     u3780:
  1819  01064A                     
  1820                           ; BSR set to: 0
  1821                           ;main.c: 201:             {;main.c: 202:                 lcd_set_cursor(64);
  1822  01064A  0E40               	movlw	64
  1823  01064C  EC7B  F08D         	call	_lcd_set_cursor
  1824  010650                     
  1825                           ;main.c: 203:                 lcd_print("  Start  Change  ");
  1826  010650  0E47               	movlw	low STR_3
  1827  010652  6E14               	movwf	lcd_print@str^0,c
  1828  010654  0EFE               	movlw	high STR_3
  1829  010656  6E15               	movwf	(lcd_print@str+1)^0,c
  1830  010658  EC37  F08D         	call	_lcd_print	;wreg free
  1831  01065C                     
  1832                           ;main.c: 204:                 _delay((unsigned long)((300)*(8000000/4000.0)));
  1833  01065C  0E04               	movlw	4
  1834  01065E  0100               	movlb	0	; () banked
  1835  010660  6F94               	movwf	(??_lcd_GUI+1)& (0+255),b
  1836  010662  0E0C               	movlw	12
  1837  010664  6F93               	movwf	??_lcd_GUI& (0+255),b
  1838  010666  0E33               	movlw	51
  1839  010668                     u4247:
  1840  010668  2EE8               	decfsz	wreg,f,c
  1841  01066A  D7FE               	bra	u4247
  1842  01066C  2F93               	decfsz	??_lcd_GUI& (0+255),f,b
  1843  01066E  D7FC               	bra	u4247
  1844  010670  2F94               	decfsz	(??_lcd_GUI+1)& (0+255),f,b
  1845  010672  D7FA               	bra	u4247
  1846  010674  D000               	nop2	
  1847  010676                     
  1848                           ;main.c: 205:                 lcd_set_cursor(64);
  1849  010676  0E40               	movlw	64
  1850  010678  EC7B  F08D         	call	_lcd_set_cursor
  1851  01067C                     
  1852                           ;main.c: 206:                 lcd_print("         Change  ");
  1853  01067C  0E35               	movlw	low STR_5
  1854  01067E  6E14               	movwf	lcd_print@str^0,c
  1855  010680  0EFE               	movlw	high STR_5
  1856  010682  6E15               	movwf	(lcd_print@str+1)^0,c
  1857  010684  EC37  F08D         	call	_lcd_print	;wreg free
  1858                           
  1859                           ;main.c: 207:                 _delay((unsigned long)((300)*(8000000/4000.0)));
  1860  010688  0E04               	movlw	4
  1861  01068A  0100               	movlb	0	; () banked
  1862  01068C  6F94               	movwf	(??_lcd_GUI+1)& (0+255),b
  1863  01068E  0E0C               	movlw	12
  1864  010690  6F93               	movwf	??_lcd_GUI& (0+255),b
  1865  010692  0E33               	movlw	51
  1866  010694                     u4257:
  1867  010694  2EE8               	decfsz	wreg,f,c
  1868  010696  D7FE               	bra	u4257
  1869  010698  2F93               	decfsz	??_lcd_GUI& (0+255),f,b
  1870  01069A  D7FC               	bra	u4257
  1871  01069C  2F94               	decfsz	(??_lcd_GUI+1)& (0+255),f,b
  1872  01069E  D7FA               	bra	u4257
  1873  0106A0  D000               	nop2	
  1874                           
  1875                           ;main.c: 208:             }
  1876  0106A2  EF7F  F083         	goto	l4467
  1877  0106A6                     l4457:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 210:             {;main.c: 211:                 lcd_set_cursor(64);
  1881  0106A6  0E40               	movlw	64
  1882  0106A8  EC7B  F08D         	call	_lcd_set_cursor
  1883  0106AC                     
  1884                           ;main.c: 212:                 lcd_print("  Start  Change  ");
  1885  0106AC  0E47               	movlw	low STR_3
  1886  0106AE  6E14               	movwf	lcd_print@str^0,c
  1887  0106B0  0EFE               	movlw	high STR_3
  1888  0106B2  6E15               	movwf	(lcd_print@str+1)^0,c
  1889  0106B4  EC37  F08D         	call	_lcd_print	;wreg free
  1890  0106B8                     
  1891                           ;main.c: 213:                 _delay((unsigned long)((300)*(8000000/4000.0)));
  1892  0106B8  0E04               	movlw	4
  1893  0106BA  0100               	movlb	0	; () banked
  1894  0106BC  6F94               	movwf	(??_lcd_GUI+1)& (0+255),b
  1895  0106BE  0E0C               	movlw	12
  1896  0106C0  6F93               	movwf	??_lcd_GUI& (0+255),b
  1897  0106C2  0E33               	movlw	51
  1898  0106C4                     u4267:
  1899  0106C4  2EE8               	decfsz	wreg,f,c
  1900  0106C6  D7FE               	bra	u4267
  1901  0106C8  2F93               	decfsz	??_lcd_GUI& (0+255),f,b
  1902  0106CA  D7FC               	bra	u4267
  1903  0106CC  2F94               	decfsz	(??_lcd_GUI+1)& (0+255),f,b
  1904  0106CE  D7FA               	bra	u4267
  1905  0106D0  D000               	nop2	
  1906  0106D2                     
  1907                           ;main.c: 214:                 lcd_set_cursor(64);
  1908  0106D2  0E40               	movlw	64
  1909  0106D4  EC7B  F08D         	call	_lcd_set_cursor
  1910  0106D8                     
  1911                           ;main.c: 215:                 lcd_print("  Start          ");
  1912  0106D8  0E11               	movlw	low STR_7
  1913  0106DA  6E14               	movwf	lcd_print@str^0,c
  1914  0106DC  0EFE               	movlw	high STR_7
  1915  0106DE  6E15               	movwf	(lcd_print@str+1)^0,c
  1916  0106E0  EC37  F08D         	call	_lcd_print	;wreg free
  1917                           
  1918                           ;main.c: 216:                 _delay((unsigned long)((300)*(8000000/4000.0)));
  1919  0106E4  0E04               	movlw	4
  1920  0106E6  0100               	movlb	0	; () banked
  1921  0106E8  6F94               	movwf	(??_lcd_GUI+1)& (0+255),b
  1922  0106EA  0E0C               	movlw	12
  1923  0106EC  6F93               	movwf	??_lcd_GUI& (0+255),b
  1924  0106EE  0E33               	movlw	51
  1925  0106F0                     u4277:
  1926  0106F0  2EE8               	decfsz	wreg,f,c
  1927  0106F2  D7FE               	bra	u4277
  1928  0106F4  2F93               	decfsz	??_lcd_GUI& (0+255),f,b
  1929  0106F6  D7FC               	bra	u4277
  1930  0106F8  2F94               	decfsz	(??_lcd_GUI+1)& (0+255),f,b
  1931  0106FA  D7FA               	bra	u4277
  1932  0106FC  D000               	nop2	
  1933  0106FE                     l4467:
  1934                           
  1935                           ;main.c: 219:             presentCount=INT0_Read_Count();
  1936  0106FE  EC0D  F08E         	call	_INT0_Read_Count	;wreg free
  1937  010702  C00A  F0B4         	movff	?_INT0_Read_Count,lcd_GUI@presentCount
  1938  010706  C00B  F0B5         	movff	?_INT0_Read_Count+1,lcd_GUI@presentCount+1
  1939  01070A                     
  1940                           ;main.c: 221:             if(pastCount != presentCount)
  1941  01070A  0100               	movlb	0	; () banked
  1942  01070C  51B4               	movf	lcd_GUI@presentCount& (0+255),w,b
  1943  01070E  19B1               	xorwf	lcd_GUI@pastCount& (0+255),w,b
  1944  010710  E109               	bnz	u3790
  1945  010712  51B5               	movf	(lcd_GUI@presentCount+1)& (0+255),w,b
  1946  010714  19B2               	xorwf	(lcd_GUI@pastCount+1)& (0+255),w,b
  1947  010716  B4D8               	btfsc	status,2,c
  1948  010718  EF90  F083         	goto	u3791
  1949  01071C  EF92  F083         	goto	u3790
  1950  010720                     u3791:
  1951  010720  EFAB  F083         	goto	l4479
  1952  010724                     u3790:
  1953  010724                     
  1954                           ; BSR set to: 0
  1955                           ;main.c: 222:             {;main.c: 223:                 if(pastCount>presentCount)
  1956  010724  51B1               	movf	lcd_GUI@pastCount& (0+255),w,b
  1957  010726  5DB4               	subwf	lcd_GUI@presentCount& (0+255),w,b
  1958  010728  51B5               	movf	(lcd_GUI@presentCount+1)& (0+255),w,b
  1959  01072A  0A80               	xorlw	128
  1960  01072C  6F93               	movwf	??_lcd_GUI& (0+255),b
  1961  01072E  51B2               	movf	(lcd_GUI@pastCount+1)& (0+255),w,b
  1962  010730  0A80               	xorlw	128
  1963  010732  5993               	subwfb	??_lcd_GUI& (0+255),w,b
  1964  010734  B0D8               	btfsc	status,0,c
  1965  010736  EF9F  F083         	goto	u3801
  1966  01073A  EFA1  F083         	goto	u3800
  1967  01073E                     u3801:
  1968  01073E  EFA5  F083         	goto	l4475
  1969  010742                     u3800:
  1970  010742                     
  1971                           ; BSR set to: 0
  1972                           ;main.c: 224:                     location = 0;
  1973  010742  0E00               	movlw	0
  1974  010744  6FB3               	movwf	lcd_GUI@location& (0+255),b
  1975  010746  EFA7  F083         	goto	l4477
  1976  01074A                     l4475:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;main.c: 226:                     location = 1;
  1980  01074A  0E01               	movlw	1
  1981  01074C  6FB3               	movwf	lcd_GUI@location& (0+255),b
  1982  01074E                     l4477:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 228:                 pastCount = presentCount;
  1986  01074E  C0B4  F0B1         	movff	lcd_GUI@presentCount,lcd_GUI@pastCount
  1987  010752  C0B5  F0B2         	movff	lcd_GUI@presentCount+1,lcd_GUI@pastCount+1
  1988  010756                     l4479:
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 231:             if(PORTCbits.RC2 == 0)
  1992  010756  B48E               	btfsc	142,2,c	;volatile
  1993  010758  EFB0  F083         	goto	u3811
  1994  01075C  EFB2  F083         	goto	u3810
  1995  010760                     u3811:
  1996  010760  EFB6  F083         	goto	l4483
  1997  010764                     u3810:
  1998  010764                     
  1999                           ; BSR set to: 0
  2000                           ;main.c: 232:                 selectSwitch=1;
  2001  010764  0E01               	movlw	1
  2002  010766  6FB0               	movwf	lcd_GUI@selectSwitch& (0+255),b
  2003  010768  EFB8  F083         	goto	l4485
  2004  01076C                     l4483:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;main.c: 234:                 selectSwitch=0;
  2008  01076C  0E00               	movlw	0
  2009  01076E  6FB0               	movwf	lcd_GUI@selectSwitch& (0+255),b
  2010  010770                     l4485:
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;main.c: 237:             if(selectSwitch==1)
  2014  010770  05B0               	decf	lcd_GUI@selectSwitch& (0+255),w,b
  2015  010772  A4D8               	btfss	status,2,c
  2016  010774  EFBE  F083         	goto	u3821
  2017  010778  EFC0  F083         	goto	u3820
  2018  01077C                     u3821:
  2019  01077C  EF1C  F083         	goto	l4445
  2020  010780                     u3820:
  2021  010780                     
  2022                           ; BSR set to: 0
  2023                           ;main.c: 238:             {;main.c: 239:                 if(location == 0 ) {
  2024  010780  51B3               	movf	lcd_GUI@location& (0+255),w,b
  2025  010782  A4D8               	btfss	status,2,c
  2026  010784  EFC6  F083         	goto	u3831
  2027  010788  EFC8  F083         	goto	u3830
  2028  01078C                     u3831:
  2029  01078C  EFD4  F083         	goto	l4495
  2030  010790                     u3830:
  2031  010790                     
  2032                           ; BSR set to: 0
  2033                           ;main.c: 240:                     _delay((unsigned long)((1)*(8000000/4000.0)));
  2034  010790  0E03               	movlw	3
  2035  010792  0100               	movlb	0	; () banked
  2036  010794  6F93               	movwf	??_lcd_GUI& (0+255),b
  2037  010796  0E97               	movlw	151
  2038  010798                     u4287:
  2039  010798  2EE8               	decfsz	wreg,f,c
  2040  01079A  D7FE               	bra	u4287
  2041  01079C  2F93               	decfsz	??_lcd_GUI& (0+255),f,b
  2042  01079E  D7FC               	bra	u4287
  2043  0107A0  D000               	nop2	
  2044                           
  2045                           ;main.c: 241:                     return 0;
  2046  0107A2  0E00               	movlw	0
  2047  0107A4  EFDE  F083         	goto	l622
  2048  0107A8                     l4495:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;main.c: 244:                     _delay((unsigned long)((1)*(8000000/4000.0)));
  2052  0107A8  0E03               	movlw	3
  2053  0107AA  0100               	movlb	0	; () banked
  2054  0107AC  6F93               	movwf	??_lcd_GUI& (0+255),b
  2055  0107AE  0E97               	movlw	151
  2056  0107B0                     u4297:
  2057  0107B0  2EE8               	decfsz	wreg,f,c
  2058  0107B2  D7FE               	bra	u4297
  2059  0107B4  2F93               	decfsz	??_lcd_GUI& (0+255),f,b
  2060  0107B6  D7FC               	bra	u4297
  2061  0107B8  D000               	nop2	
  2062                           
  2063                           ;main.c: 245:                     return 1;
  2064  0107BA  0E01               	movlw	1
  2065  0107BC                     l622:
  2066  0107BC  0012               	return		;funcret
  2067  0107BE                     __end_of_lcd_GUI:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _INT0_Read_Count *****************
  2071 ;; Defined at:
  2072 ;;		line 92 in file "mcc_generated_files/ext_int.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  2    9[COMRAM] int 
  2079 ;; Registers used:
  2080 ;;		None
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;Total ram usage:        2 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 4
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_lcd_GUI
  2097 ;;		_lcd_default_setup
  2098 ;;		_lcd_page_1
  2099 ;;		_lcd_page_2
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text3
  2104  011C1A                     __ptext3:
  2105                           	callstack 0
  2106  011C1A                     _INT0_Read_Count:
  2107                           	callstack 25
  2108  011C1A                     
  2109                           ;mcc_generated_files/ext_int.c: 93:     return scaledValue;
  2110  011C1A  C11E  F00A         	movff	_scaledValue,?_INT0_Read_Count
  2111  011C1E  C11F  F00B         	movff	_scaledValue+1,?_INT0_Read_Count+1
  2112  011C22  0012               	return		;funcret
  2113  011C24                     __end_of_INT0_Read_Count:
  2114                           	callstack 0
  2115                           
  2116 ;; *************** function _DATAEE_ReadByte *****************
  2117 ;; Defined at:
  2118 ;;		line 259 in file "mcc_generated_files/memory.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  bAdd            2    9[COMRAM] unsigned short 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      unsigned char 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;Total ram usage:        2 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 4
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_lcd_GUI
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text4
  2147  011B78                     __ptext4:
  2148                           	callstack 0
  2149  011B78                     _DATAEE_ReadByte:
  2150                           	callstack 25
  2151  011B78                     
  2152                           ;mcc_generated_files/memory.c: 259: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 260: {;mcc_generated_files/memory.c: 262:     NVMADRU = 0x31;
  2153  011B78  0E31               	movlw	49
  2154  011B7A  6E7B               	movwf	123,c	;volatile
  2155                           
  2156                           ;mcc_generated_files/memory.c: 263:     NVMADRH = (uint8_t)((bAdd & 0xFF00) >> 8);
  2157  011B7C  500B               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  2158  011B7E  6E7A               	movwf	122,c	;volatile
  2159  011B80                     
  2160                           ;mcc_generated_files/memory.c: 264:     NVMADRL = (uint8_t)(bAdd & 0x00FF);
  2161  011B80  C00A  FF79         	movff	DATAEE_ReadByte@bAdd,3961	;volatile
  2162  011B84                     
  2163                           ;mcc_generated_files/memory.c: 268:     NVMCON1bits.RD = 1;
  2164  011B84  8080               	bsf	128,0,c	;volsfr
  2165  011B86                     
  2166                           ;mcc_generated_files/memory.c: 269:     __nop();
  2167  011B86  F000               	nop	
  2168  011B88                     
  2169                           ;mcc_generated_files/memory.c: 270:     __nop();
  2170  011B88  F000               	nop	
  2171                           
  2172                           ;mcc_generated_files/memory.c: 272:     return (NVMDATL);
  2173  011B8A  507C               	movf	124,w,c	;volatile
  2174  011B8C  0012               	return		;funcret
  2175  011B8E                     __end_of_DATAEE_ReadByte:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _SYSTEM_Initialize *****************
  2179 ;; Defined at:
  2180 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 6
  2201 ;; This function calls:
  2202 ;;		_EUSART1_Initialize
  2203 ;;		_EUSART2_Initialize
  2204 ;;		_EXT_INT_Initialize
  2205 ;;		_INTERRUPT_Initialize
  2206 ;;		_OSCILLATOR_Initialize
  2207 ;;		_PIN_MANAGER_Initialize
  2208 ;;		_PMD_Initialize
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text5
  2215  011AD8                     __ptext5:
  2216                           	callstack 0
  2217  011AD8                     _SYSTEM_Initialize:
  2218                           	callstack 24
  2219  011AD8                     
  2220                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2221  011AD8  EC27  F08E         	call	_INTERRUPT_Initialize	;wreg free
  2222  011ADC                     
  2223                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2224  011ADC  EC8A  F08D         	call	_PMD_Initialize	;wreg free
  2225  011AE0                     
  2226                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2227  011AE0  ECBB  F08A         	call	_PIN_MANAGER_Initialize	;wreg free
  2228  011AE4                     
  2229                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2230  011AE4  EC98  F08D         	call	_OSCILLATOR_Initialize	;wreg free
  2231  011AE8                     
  2232                           ;mcc_generated_files/mcc.c: 56:     EXT_INT_Initialize();
  2233  011AE8  ECCC  F08B         	call	_EXT_INT_Initialize	;wreg free
  2234  011AEC                     
  2235                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  2236  011AEC  EC06  F08B         	call	_EUSART1_Initialize	;wreg free
  2237  011AF0                     
  2238                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
  2239  011AF0  ECF2  F08B         	call	_EUSART2_Initialize	;wreg free
  2240  011AF4  0012               	return		;funcret
  2241  011AF6                     __end_of_SYSTEM_Initialize:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _PMD_Initialize *****************
  2245 ;; Defined at:
  2246 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 4
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_SYSTEM_Initialize
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text6
  2275  011B14                     __ptext6:
  2276                           	callstack 0
  2277  011B14                     _PMD_Initialize:
  2278                           	callstack 25
  2279  011B14                     
  2280                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  2281  011B14  0E00               	movlw	0
  2282  011B16  010E               	movlb	14	; () banked
  2283  011B18  6FDC               	movwf	220,b	;volatile
  2284                           
  2285                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  2286  011B1A  0E00               	movlw	0
  2287  011B1C  6FDD               	movwf	221,b	;volatile
  2288                           
  2289                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  2290  011B1E  0E00               	movlw	0
  2291  011B20  6FDE               	movwf	222,b	;volatile
  2292                           
  2293                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  2294  011B22  0E00               	movlw	0
  2295  011B24  6FDF               	movwf	223,b	;volatile
  2296                           
  2297                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  2298  011B26  0E00               	movlw	0
  2299  011B28  6FE0               	movwf	224,b	;volatile
  2300                           
  2301                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  2302  011B2A  0E00               	movlw	0
  2303  011B2C  6FE1               	movwf	225,b	;volatile
  2304  011B2E                     
  2305                           ; BSR set to: 14
  2306  011B2E  0012               	return		;funcret
  2307  011B30                     __end_of_PMD_Initialize:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _PIN_MANAGER_Initialize *****************
  2311 ;; Defined at:
  2312 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 4
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_SYSTEM_Initialize
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text7
  2341  011576                     __ptext7:
  2342                           	callstack 0
  2343  011576                     _PIN_MANAGER_Initialize:
  2344                           	callstack 25
  2345  011576                     
  2346                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2347  011576  0E00               	movlw	0
  2348  011578  6E86               	movwf	134,c	;volatile
  2349                           
  2350                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2351  01157A  0E00               	movlw	0
  2352  01157C  6E85               	movwf	133,c	;volatile
  2353                           
  2354                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2355  01157E  0E00               	movlw	0
  2356  011580  6E82               	movwf	130,c	;volatile
  2357                           
  2358                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2359  011582  0E00               	movlw	0
  2360  011584  6E83               	movwf	131,c	;volatile
  2361                           
  2362                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2363  011586  0E00               	movlw	0
  2364  011588  6E84               	movwf	132,c	;volatile
  2365                           
  2366                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2367  01158A  0E07               	movlw	7
  2368  01158C  6E8B               	movwf	139,c	;volatile
  2369  01158E                     
  2370                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2371  01158E  6887               	setf	135,c	;volatile
  2372                           
  2373                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xB7;
  2374  011590  0EB7               	movlw	183
  2375  011592  6E88               	movwf	136,c	;volatile
  2376                           
  2377                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2378  011594  0EBF               	movlw	191
  2379  011596  6E89               	movwf	137,c	;volatile
  2380  011598                     
  2381                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  2382  011598  688A               	setf	138,c	;volatile
  2383  01159A                     
  2384                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  2385  01159A  010F               	movlb	15	; () banked
  2386  01159C  6921               	setf	33,b	;volatile
  2387                           
  2388                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x30;
  2389  01159E  0E30               	movlw	48
  2390  0115A0  6F1C               	movwf	28,b	;volatile
  2391                           
  2392                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xB0;
  2393  0115A2  0EB0               	movlw	176
  2394  0115A4  6F14               	movwf	20,b	;volatile
  2395                           
  2396                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  2397  0115A6  0E07               	movlw	7
  2398  0115A8  6F29               	movwf	41,b	;volatile
  2399  0115AA                     
  2400                           ; BSR set to: 15
  2401                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  2402  0115AA  690C               	setf	12,b	;volatile
  2403                           
  2404                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2405  0115AC  0E00               	movlw	0
  2406  0115AE  6F20               	movwf	32,b	;volatile
  2407                           
  2408                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2409  0115B0  0E00               	movlw	0
  2410  0115B2  6F28               	movwf	40,b	;volatile
  2411                           
  2412                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x01;
  2413  0115B4  0E01               	movlw	1
  2414  0115B6  6F13               	movwf	19,b	;volatile
  2415                           
  2416                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  2417  0115B8  0E00               	movlw	0
  2418  0115BA  6F0B               	movwf	11,b	;volatile
  2419                           
  2420                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x07;
  2421  0115BC  0E07               	movlw	7
  2422  0115BE  6F1B               	movwf	27,b	;volatile
  2423                           
  2424                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2425  0115C0  0E00               	movlw	0
  2426  0115C2  6F27               	movwf	39,b	;volatile
  2427                           
  2428                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2429  0115C4  0E00               	movlw	0
  2430  0115C6  6F0A               	movwf	10,b	;volatile
  2431                           
  2432                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2433  0115C8  0E00               	movlw	0
  2434  0115CA  6F12               	movwf	18,b	;volatile
  2435                           
  2436                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2437  0115CC  0E00               	movlw	0
  2438  0115CE  6F1A               	movwf	26,b	;volatile
  2439                           
  2440                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2441  0115D0  0E00               	movlw	0
  2442  0115D2  6F1F               	movwf	31,b	;volatile
  2443  0115D4                     
  2444                           ; BSR set to: 15
  2445                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2446  0115D4  6909               	setf	9,b	;volatile
  2447  0115D6                     
  2448                           ; BSR set to: 15
  2449                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2450  0115D6  6911               	setf	17,b	;volatile
  2451  0115D8                     
  2452                           ; BSR set to: 15
  2453                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2454  0115D8  6919               	setf	25,b	;volatile
  2455  0115DA                     
  2456                           ; BSR set to: 15
  2457                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2458  0115DA  691E               	setf	30,b	;volatile
  2459                           
  2460                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2461  0115DC  0E07               	movlw	7
  2462  0115DE  6F26               	movwf	38,b	;volatile
  2463  0115E0                     
  2464                           ; BSR set to: 15
  2465                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2466  0115E0  6908               	setf	8,b	;volatile
  2467  0115E2                     
  2468                           ; BSR set to: 15
  2469                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2470  0115E2  6910               	setf	16,b	;volatile
  2471  0115E4                     
  2472                           ; BSR set to: 15
  2473                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2474  0115E4  6918               	setf	24,b	;volatile
  2475  0115E6                     
  2476                           ; BSR set to: 15
  2477                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2478  0115E6  691D               	setf	29,b	;volatile
  2479                           
  2480                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  2481  0115E8  0E0F               	movlw	15
  2482  0115EA  6F25               	movwf	37,b	;volatile
  2483                           
  2484                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  2485  0115EC  0E17               	movlw	23
  2486  0115EE  010E               	movlb	14	; () banked
  2487  0115F0  6FB0               	movwf	176,b	;volatile
  2488                           
  2489                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  2490  0115F2  0E0B               	movlw	11
  2491  0115F4  6FF0               	movwf	240,b	;volatile
  2492                           
  2493                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
  2494  0115F6  0E08               	movlw	8
  2495  0115F8  6F9C               	movwf	156,b	;volatile
  2496                           
  2497                           ;mcc_generated_files/pin_manager.c: 130:     RB3PPS = 0x0B;
  2498  0115FA  0E0B               	movlw	11
  2499  0115FC  6FED               	movwf	237,b	;volatile
  2500                           
  2501                           ;mcc_generated_files/pin_manager.c: 131:     INT2PPS = 0x0A;
  2502  0115FE  0E0A               	movlw	10
  2503  011600  6F9E               	movwf	158,b	;volatile
  2504                           
  2505                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
  2506  011602  0E09               	movlw	9
  2507  011604  6F9D               	movwf	157,b	;volatile
  2508                           
  2509                           ;mcc_generated_files/pin_manager.c: 133:     RC6PPS = 0x09;
  2510  011606  0E09               	movlw	9
  2511  011608  6FF8               	movwf	248,b	;volatile
  2512  01160A                     
  2513                           ; BSR set to: 14
  2514  01160A  0012               	return		;funcret
  2515  01160C                     __end_of_PIN_MANAGER_Initialize:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _OSCILLATOR_Initialize *****************
  2519 ;; Defined at:
  2520 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;Total ram usage:        0 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 4
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_SYSTEM_Initialize
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text8
  2549  011B30                     __ptext8:
  2550                           	callstack 0
  2551  011B30                     _OSCILLATOR_Initialize:
  2552                           	callstack 25
  2553  011B30                     
  2554                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x61;
  2555  011B30  0E61               	movlw	97
  2556  011B32  010E               	movlb	14	; () banked
  2557  011B34  6FD3               	movwf	211,b	;volatile
  2558                           
  2559                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  2560  011B36  0E00               	movlw	0
  2561  011B38  6FD5               	movwf	213,b	;volatile
  2562                           
  2563                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  2564  011B3A  0E00               	movlw	0
  2565  011B3C  6FD7               	movwf	215,b	;volatile
  2566                           
  2567                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x05;
  2568  011B3E  0E05               	movlw	5
  2569  011B40  6FD9               	movwf	217,b	;volatile
  2570                           
  2571                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  2572  011B42  0E00               	movlw	0
  2573  011B44  6FD8               	movwf	216,b	;volatile
  2574  011B46                     
  2575                           ; BSR set to: 14
  2576  011B46  0012               	return		;funcret
  2577  011B48                     __end_of_OSCILLATOR_Initialize:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _INTERRUPT_Initialize *****************
  2581 ;; Defined at:
  2582 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		None
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 4
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_SYSTEM_Initialize
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text9
  2611  011C4E                     __ptext9:
  2612                           	callstack 0
  2613  011C4E                     _INTERRUPT_Initialize:
  2614                           	callstack 25
  2615  011C4E                     
  2616                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2617  011C4E  9AF2               	bcf	242,5,c	;volatile
  2618  011C50  0012               	return		;funcret
  2619  011C52                     __end_of_INTERRUPT_Initialize:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _EXT_INT_Initialize *****************
  2623 ;; Defined at:
  2624 ;;		line 157 in file "mcc_generated_files/ext_int.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 5
  2645 ;; This function calls:
  2646 ;;		_INT0_SetInterruptHandler
  2647 ;;		_INT1_SetInterruptHandler
  2648 ;;		_INT2_SetInterruptHandler
  2649 ;; This function is called by:
  2650 ;;		_SYSTEM_Initialize
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text10
  2655  011798                     __ptext10:
  2656                           	callstack 0
  2657  011798                     _EXT_INT_Initialize:
  2658                           	callstack 24
  2659  011798                     
  2660                           ;mcc_generated_files/ext_int.c: 162:     (PIR0bits.INT0IF = 0);
  2661  011798  010E               	movlb	14	; () banked
  2662  01179A  91C5               	bcf	197,0,b	;volatile
  2663                           
  2664                           ;mcc_generated_files/ext_int.c: 163:     (INTCONbits.INT0EDG = 1);
  2665  01179C  80F2               	bsf	242,0,c	;volatile
  2666  01179E                     
  2667                           ; BSR set to: 14
  2668                           ;mcc_generated_files/ext_int.c: 165:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  2669  01179E  0E64               	movlw	low _INT0_DefaultInterruptHandler
  2670  0117A0  6E0A               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2671  0117A2  0E13               	movlw	high _INT0_DefaultInterruptHandler
  2672  0117A4  6E0B               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2673  0117A6  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  2674  0117A8  6E0C               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  2675  0117AA  ECD5  F08D         	call	_INT0_SetInterruptHandler	;wreg free
  2676  0117AE                     
  2677                           ;mcc_generated_files/ext_int.c: 166:     (PIE0bits.INT0IE = 1);
  2678  0117AE  010E               	movlb	14	; () banked
  2679  0117B0  81BD               	bsf	189,0,b	;volatile
  2680  0117B2                     
  2681                           ; BSR set to: 14
  2682                           ;mcc_generated_files/ext_int.c: 171:     (PIR0bits.INT1IF = 0);
  2683  0117B2  93C5               	bcf	197,1,b	;volatile
  2684  0117B4                     
  2685                           ; BSR set to: 14
  2686                           ;mcc_generated_files/ext_int.c: 172:     (INTCONbits.INT1EDG = 1);
  2687  0117B4  82F2               	bsf	242,1,c	;volatile
  2688                           
  2689                           ;mcc_generated_files/ext_int.c: 174:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  2690  0117B6  0E56               	movlw	low _INT1_DefaultInterruptHandler
  2691  0117B8  6E0A               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  2692  0117BA  0E1C               	movlw	high _INT1_DefaultInterruptHandler
  2693  0117BC  6E0B               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  2694  0117BE  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
  2695  0117C0  6E0C               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  2696  0117C2  ECCE  F08D         	call	_INT1_SetInterruptHandler	;wreg free
  2697  0117C6                     
  2698                           ;mcc_generated_files/ext_int.c: 175:     (PIE0bits.INT1IE = 1);
  2699  0117C6  010E               	movlb	14	; () banked
  2700  0117C8  83BD               	bsf	189,1,b	;volatile
  2701  0117CA                     
  2702                           ; BSR set to: 14
  2703                           ;mcc_generated_files/ext_int.c: 180:     (PIR0bits.INT2IF = 0);
  2704  0117CA  95C5               	bcf	197,2,b	;volatile
  2705  0117CC                     
  2706                           ; BSR set to: 14
  2707                           ;mcc_generated_files/ext_int.c: 181:     (INTCONbits.INT2EDG = 1);
  2708  0117CC  84F2               	bsf	242,2,c	;volatile
  2709                           
  2710                           ;mcc_generated_files/ext_int.c: 183:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  2711  0117CE  0E54               	movlw	low _INT2_DefaultInterruptHandler
  2712  0117D0  6E0A               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  2713  0117D2  0E1C               	movlw	high _INT2_DefaultInterruptHandler
  2714  0117D4  6E0B               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  2715  0117D6  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
  2716  0117D8  6E0C               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  2717  0117DA  ECC7  F08D         	call	_INT2_SetInterruptHandler	;wreg free
  2718  0117DE                     
  2719                           ;mcc_generated_files/ext_int.c: 184:     (PIE0bits.INT2IE = 1);
  2720  0117DE  010E               	movlb	14	; () banked
  2721  0117E0  85BD               	bsf	189,2,b	;volatile
  2722  0117E2                     
  2723                           ; BSR set to: 14
  2724  0117E2  0012               	return		;funcret
  2725  0117E4                     __end_of_EXT_INT_Initialize:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _INT2_SetInterruptHandler *****************
  2729 ;; Defined at:
  2730 ;;		line 148 in file "mcc_generated_files/ext_int.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  InterruptHan    3    9[COMRAM] PTR FTN()void 
  2733 ;;		 -> INT2_DefaultInterruptHandler(1), 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2745 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;Total ram usage:        3 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 4
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_EXT_INT_Initialize
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text11
  2760  011B8E                     __ptext11:
  2761                           	callstack 0
  2762  011B8E                     _INT2_SetInterruptHandler:
  2763                           	callstack 24
  2764  011B8E                     
  2765                           ;mcc_generated_files/ext_int.c: 149:     INT2_InterruptHandler = InterruptHandler;
  2766  011B8E  C00A  F14B         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2767  011B92  C00B  F14C         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2768  011B96  C00C  F14D         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  2769  011B9A  0012               	return		;funcret
  2770  011B9C                     __end_of_INT2_SetInterruptHandler:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _INT1_SetInterruptHandler *****************
  2774 ;; Defined at:
  2775 ;;		line 122 in file "mcc_generated_files/ext_int.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  InterruptHan    3    9[COMRAM] PTR FTN()void 
  2778 ;;		 -> INT1_DefaultInterruptHandler(1), 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2790 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;Total ram usage:        3 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 4
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_EXT_INT_Initialize
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text12
  2805  011B9C                     __ptext12:
  2806                           	callstack 0
  2807  011B9C                     _INT1_SetInterruptHandler:
  2808                           	callstack 24
  2809  011B9C                     
  2810                           ;mcc_generated_files/ext_int.c: 123:     INT1_InterruptHandler = InterruptHandler;
  2811  011B9C  C00A  F14E         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2812  011BA0  C00B  F14F         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2813  011BA4  C00C  F150         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  2814  011BA8  0012               	return		;funcret
  2815  011BAA                     __end_of_INT1_SetInterruptHandler:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _INT0_SetInterruptHandler *****************
  2819 ;; Defined at:
  2820 ;;		line 64 in file "mcc_generated_files/ext_int.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  InterruptHan    3    9[COMRAM] PTR FTN()void 
  2823 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;Total ram usage:        3 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 4
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_EXT_INT_Initialize
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text13
  2850  011BAA                     __ptext13:
  2851                           	callstack 0
  2852  011BAA                     _INT0_SetInterruptHandler:
  2853                           	callstack 24
  2854  011BAA                     
  2855                           ;mcc_generated_files/ext_int.c: 65:     INT0_InterruptHandler = InterruptHandler;
  2856  011BAA  C00A  F151         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2857  011BAE  C00B  F152         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2858  011BB2  C00C  F153         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  2859  011BB6  0012               	return		;funcret
  2860  011BB8                     __end_of_INT0_SetInterruptHandler:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _EUSART2_Initialize *****************
  2864 ;; Defined at:
  2865 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 5
  2886 ;; This function calls:
  2887 ;;		_EUSART2_SetErrorHandler
  2888 ;;		_EUSART2_SetFramingErrorHandler
  2889 ;;		_EUSART2_SetOverrunErrorHandler
  2890 ;; This function is called by:
  2891 ;;		_SYSTEM_Initialize
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text14
  2896  0117E4                     __ptext14:
  2897                           	callstack 0
  2898  0117E4                     _EUSART2_Initialize:
  2899                           	callstack 24
  2900  0117E4                     
  2901                           ;mcc_generated_files/eusart2.c: 71:     BAUD2CON = 0x08;
  2902  0117E4  0E08               	movlw	8
  2903  0117E6  010E               	movlb	14	; () banked
  2904  0117E8  6F9A               	movwf	154,b	;volatile
  2905                           
  2906                           ;mcc_generated_files/eusart2.c: 74:     RC2STA = 0x80;
  2907  0117EA  0E80               	movlw	128
  2908  0117EC  6F98               	movwf	152,b	;volatile
  2909                           
  2910                           ;mcc_generated_files/eusart2.c: 77:     TX2STA = 0x24;
  2911  0117EE  0E24               	movlw	36
  2912  0117F0  6F99               	movwf	153,b	;volatile
  2913                           
  2914                           ;mcc_generated_files/eusart2.c: 80:     SP2BRGL = 0xCF;
  2915  0117F2  0ECF               	movlw	207
  2916  0117F4  6F96               	movwf	150,b	;volatile
  2917                           
  2918                           ;mcc_generated_files/eusart2.c: 83:     SP2BRGH = 0x00;
  2919  0117F6  0E00               	movlw	0
  2920  0117F8  6F97               	movwf	151,b	;volatile
  2921  0117FA                     
  2922                           ; BSR set to: 14
  2923                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  2924  0117FA  0E00               	movlw	0
  2925  0117FC  6E0A               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  2926  0117FE  0E00               	movlw	0
  2927  011800  6E0B               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2928  011802  0E00               	movlw	0
  2929  011804  6E0C               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  2930  011806  ECE3  F08D         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  2931  01180A                     
  2932                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  2933  01180A  0E00               	movlw	0
  2934  01180C  6E0A               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  2935  01180E  0E00               	movlw	0
  2936  011810  6E0B               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2937  011812  0E00               	movlw	0
  2938  011814  6E0C               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  2939  011816  ECDC  F08D         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  2940  01181A                     
  2941                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  2942  01181A  0E00               	movlw	0
  2943  01181C  6E0A               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  2944  01181E  0E00               	movlw	0
  2945  011820  6E0B               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  2946  011822  0E00               	movlw	0
  2947  011824  6E0C               	movwf	(EUSART2_SetErrorHandler@interruptHandler+2)^0,c
  2948  011826  ECEA  F08D         	call	_EUSART2_SetErrorHandler	;wreg free
  2949  01182A                     
  2950                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  2951  01182A  0E00               	movlw	0
  2952  01182C  6E51               	movwf	_eusart2RxLastError^0,c	;volatile
  2953  01182E  0012               	return		;funcret
  2954  011830                     __end_of_EUSART2_Initialize:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2958 ;; Defined at:
  2959 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  interruptHan    3    9[COMRAM] PTR FTN()void 
  2962 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2974 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;Total ram usage:        3 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 4
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_EUSART2_Initialize
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text15
  2989  011BB8                     __ptext15:
  2990                           	callstack 0
  2991  011BB8                     _EUSART2_SetOverrunErrorHandler:
  2992                           	callstack 24
  2993  011BB8                     
  2994                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  2995  011BB8  C00A  F145         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2996  011BBC  C00B  F146         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2997  011BC0  C00C  F147         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+2,_EUSART2_OverrunErrorHandler+2
  2998  011BC4  0012               	return		;funcret
  2999  011BC6                     __end_of_EUSART2_SetOverrunErrorHandler:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  3003 ;; Defined at:
  3004 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  interruptHan    3    9[COMRAM] PTR FTN()void 
  3007 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3023 ;;Total ram usage:        3 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 4
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_EUSART2_Initialize
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text16
  3034  011BC6                     __ptext16:
  3035                           	callstack 0
  3036  011BC6                     _EUSART2_SetFramingErrorHandler:
  3037                           	callstack 24
  3038  011BC6                     
  3039                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  3040  011BC6  C00A  F148         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  3041  011BCA  C00B  F149         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  3042  011BCE  C00C  F14A         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+2,_EUSART2_FramingErrorHandler+2
  3043  011BD2  0012               	return		;funcret
  3044  011BD4                     __end_of_EUSART2_SetFramingErrorHandler:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _EUSART2_SetErrorHandler *****************
  3048 ;; Defined at:
  3049 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  interruptHan    3    9[COMRAM] PTR FTN()void 
  3052 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3064 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;Total ram usage:        3 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 4
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_EUSART2_Initialize
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text17
  3079  011BD4                     __ptext17:
  3080                           	callstack 0
  3081  011BD4                     _EUSART2_SetErrorHandler:
  3082                           	callstack 24
  3083  011BD4                     
  3084                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  3085  011BD4  C00A  F142         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  3086  011BD8  C00B  F143         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  3087  011BDC  C00C  F144         	movff	EUSART2_SetErrorHandler@interruptHandler+2,_EUSART2_ErrorHandler+2
  3088  011BE0  0012               	return		;funcret
  3089  011BE2                     __end_of_EUSART2_SetErrorHandler:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function _EUSART1_Initialize *****************
  3093 ;; Defined at:
  3094 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 5
  3115 ;; This function calls:
  3116 ;;		_EUSART1_SetErrorHandler
  3117 ;;		_EUSART1_SetFramingErrorHandler
  3118 ;;		_EUSART1_SetOverrunErrorHandler
  3119 ;;		_EUSART1_SetRxInterruptHandler
  3120 ;; This function is called by:
  3121 ;;		_SYSTEM_Initialize
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text18
  3126  01160C                     __ptext18:
  3127                           	callstack 0
  3128  01160C                     _EUSART1_Initialize:
  3129                           	callstack 24
  3130  01160C                     
  3131                           ;mcc_generated_files/eusart1.c: 86:     PIE3bits.RC1IE = 0;
  3132  01160C  010E               	movlb	14	; () banked
  3133  01160E  9BC0               	bcf	192,5,b	;volatile
  3134  011610                     
  3135                           ; BSR set to: 14
  3136                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3137  011610  0EA2               	movlw	low _EUSART1_Receive_ISR
  3138  011612  6E0A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  3139  011614  0E12               	movlw	high _EUSART1_Receive_ISR
  3140  011616  6E0B               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  3141  011618  0E01               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  3142  01161A  6E0C               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)^0,c
  3143  01161C  ECF1  F08D         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3144  011620                     
  3145                           ;mcc_generated_files/eusart1.c: 91:     BAUD1CON = 0x08;
  3146  011620  0E08               	movlw	8
  3147  011622  6E9E               	movwf	158,c	;volatile
  3148  011624                     
  3149                           ;mcc_generated_files/eusart1.c: 94:     RC1STA = 0x90;
  3150  011624  0E90               	movlw	144
  3151  011626  6E9C               	movwf	156,c	;volatile
  3152  011628                     
  3153                           ;mcc_generated_files/eusart1.c: 97:     TX1STA = 0x24;
  3154  011628  0E24               	movlw	36
  3155  01162A  6E9D               	movwf	157,c	;volatile
  3156  01162C                     
  3157                           ;mcc_generated_files/eusart1.c: 100:     SP1BRGL = 0x22;
  3158  01162C  0E22               	movlw	34
  3159  01162E  6E9A               	movwf	154,c	;volatile
  3160  011630                     
  3161                           ;mcc_generated_files/eusart1.c: 103:     SP1BRGH = 0x00;
  3162  011630  0E00               	movlw	0
  3163  011632  6E9B               	movwf	155,c	;volatile
  3164  011634                     
  3165                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3166  011634  0E58               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3167  011636  6E0A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3168  011638  0E1C               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3169  01163A  6E0B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3170  01163C  0E01               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  3171  01163E  6E0C               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  3172  011640  ECFF  F08D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3173  011644                     
  3174                           ;mcc_generated_files/eusart1.c: 107:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3175  011644  0E42               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3176  011646  6E0A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3177  011648  0E1C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3178  01164A  6E0B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3179  01164C  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  3180  01164E  6E0C               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3181  011650  ECF8  F08D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3182  011654                     
  3183                           ;mcc_generated_files/eusart1.c: 108:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3184  011654  0E48               	movlw	low _EUSART1_DefaultErrorHandler
  3185  011656  6E0A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3186  011658  0E1C               	movlw	high _EUSART1_DefaultErrorHandler
  3187  01165A  6E0B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3188  01165C  0E01               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  3189  01165E  6E0C               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)^0,c
  3190  011660  EC06  F08E         	call	_EUSART1_SetErrorHandler	;wreg free
  3191                           
  3192                           ;mcc_generated_files/eusart1.c: 110:     eusart1RxLastError.status = 0;
  3193  011664  0E00               	movlw	0
  3194  011666  6E52               	movwf	_eusart1RxLastError^0,c	;volatile
  3195                           
  3196                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxHead = 0;
  3197  011668  0E00               	movlw	0
  3198  01166A  6E55               	movwf	_eusart1RxHead^0,c	;volatile
  3199                           
  3200                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxTail = 0;
  3201  01166C  0E00               	movlw	0
  3202  01166E  6E54               	movwf	_eusart1RxTail^0,c	;volatile
  3203                           
  3204                           ;mcc_generated_files/eusart1.c: 115:     eusart1RxCount = 0;
  3205  011670  0E00               	movlw	0
  3206  011672  6E53               	movwf	_eusart1RxCount^0,c	;volatile
  3207  011674                     
  3208                           ;mcc_generated_files/eusart1.c: 118:     PIE3bits.RC1IE = 1;
  3209  011674  010E               	movlb	14	; () banked
  3210  011676  8BC0               	bsf	192,5,b	;volatile
  3211  011678                     
  3212                           ; BSR set to: 14
  3213  011678  0012               	return		;funcret
  3214  01167A                     __end_of_EUSART1_Initialize:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3218 ;; Defined at:
  3219 ;;		line 234 in file "mcc_generated_files/eusart1.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  interruptHan    3    9[COMRAM] PTR FTN()void 
  3222 ;;		 -> EUSART1_Receive_ISR(1), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3234 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;Total ram usage:        3 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 4
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_EUSART1_Initialize
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text19
  3249  011BE2                     __ptext19:
  3250                           	callstack 0
  3251  011BE2                     _EUSART1_SetRxInterruptHandler:
  3252                           	callstack 24
  3253  011BE2                     
  3254                           ;mcc_generated_files/eusart1.c: 235:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3255  011BE2  C00A  F15D         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3256  011BE6  C00B  F15E         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3257  011BEA  C00C  F15F         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  3258  011BEE  0012               	return		;funcret
  3259  011BF0                     __end_of_EUSART1_SetRxInterruptHandler:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3263 ;; Defined at:
  3264 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  interruptHan    3    9[COMRAM] PTR FTN()void 
  3267 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3279 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;Total ram usage:        3 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 4
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_EUSART1_Initialize
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text20
  3294  011BF0                     __ptext20:
  3295                           	callstack 0
  3296  011BF0                     _EUSART1_SetOverrunErrorHandler:
  3297                           	callstack 24
  3298  011BF0                     
  3299                           ;mcc_generated_files/eusart1.c: 226:     EUSART1_OverrunErrorHandler = interruptHandler;
  3300  011BF0  C00A  F157         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3301  011BF4  C00B  F158         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3302  011BF8  C00C  F159         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  3303  011BFC  0012               	return		;funcret
  3304  011BFE                     __end_of_EUSART1_SetOverrunErrorHandler:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3308 ;; Defined at:
  3309 ;;		line 221 in file "mcc_generated_files/eusart1.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  interruptHan    3    9[COMRAM] PTR FTN()void 
  3312 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3324 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;Total ram usage:        3 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 4
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_EUSART1_Initialize
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text21
  3339  011BFE                     __ptext21:
  3340                           	callstack 0
  3341  011BFE                     _EUSART1_SetFramingErrorHandler:
  3342                           	callstack 24
  3343  011BFE                     
  3344                           ;mcc_generated_files/eusart1.c: 222:     EUSART1_FramingErrorHandler = interruptHandler;
  3345  011BFE  C00A  F15A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3346  011C02  C00B  F15B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3347  011C06  C00C  F15C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  3348  011C0A  0012               	return		;funcret
  3349  011C0C                     __end_of_EUSART1_SetFramingErrorHandler:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _EUSART1_SetErrorHandler *****************
  3353 ;; Defined at:
  3354 ;;		line 229 in file "mcc_generated_files/eusart1.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  interruptHan    3    9[COMRAM] PTR FTN()void 
  3357 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3369 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;Total ram usage:        3 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 4
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_EUSART1_Initialize
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text22
  3384  011C0C                     __ptext22:
  3385                           	callstack 0
  3386  011C0C                     _EUSART1_SetErrorHandler:
  3387                           	callstack 24
  3388  011C0C                     
  3389                           ;mcc_generated_files/eusart1.c: 230:     EUSART1_ErrorHandler = interruptHandler;
  3390  011C0C  C00A  F154         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3391  011C10  C00B  F155         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3392  011C14  C00C  F156         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  3393  011C18  0012               	return		;funcret
  3394  011C1A                     __end_of_EUSART1_SetErrorHandler:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _LaySheetsOnTrays *****************
  3398 ;; Defined at:
  3399 ;;		line 605 in file "main.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  sheetCount      2  137[BANK0 ] unsigned short 
  3402 ;;  sheetSize       1  139[BANK0 ] unsigned char 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  lcd_string     16    0[BANK1 ] unsigned char [16]
  3405 ;;  totalSheetsP    2   20[BANK1 ] unsigned short 
  3406 ;;  returnCount     2   18[BANK1 ] unsigned short 
  3407 ;;  forwardCount    2   16[BANK1 ] unsigned short 
  3408 ;;  lateralCount    2    0        unsigned short 
  3409 ;;  motorNumber     1   22[BANK1 ] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3419 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Totals:         0       6      23       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;Total ram usage:       29 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 13
  3426 ;; This function calls:
  3427 ;;		_distance
  3428 ;;		_lcd_print
  3429 ;;		_lcd_set_cursor
  3430 ;;		_rmove
  3431 ;;		_sprintf
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text23
  3438  0109BE                     __ptext23:
  3439                           	callstack 0
  3440  0109BE                     _LaySheetsOnTrays:
  3441                           	callstack 17
  3442  0109BE                     
  3443                           ;main.c: 606:        uint16_t forwardCount, returnCount, lateralCount, totalSheetsPlaced
      +                          =0;
  3444  0109BE  0E00               	movlw	0
  3445  0109C0  0101               	movlb	1	; () banked
  3446  0109C2  6F75               	movwf	(LaySheetsOnTrays@totalSheetsPlaced+1)& (0+255),b
  3447  0109C4  0E00               	movlw	0
  3448  0109C6  6F74               	movwf	LaySheetsOnTrays@totalSheetsPlaced& (0+255),b
  3449  0109C8                     
  3450                           ; BSR set to: 1
  3451                           ;main.c: 607:        uint8_t motorNumber;;main.c: 608:        char lcd_string[16];;main.
      +                          c: 610:        forwardCount = distance(6);
  3452  0109C8  0E00               	movlw	0
  3453  0109CA  6E1A               	movwf	distance@inch^0,c
  3454  0109CC  0E00               	movlw	0
  3455  0109CE  6E1B               	movwf	(distance@inch+1)^0,c
  3456  0109D0  0EC0               	movlw	192
  3457  0109D2  6E1C               	movwf	(distance@inch+2)^0,c
  3458  0109D4  0E40               	movlw	64
  3459  0109D6  6E1D               	movwf	(distance@inch+3)^0,c
  3460  0109D8  EC93  F08C         	call	_distance	;wreg free
  3461  0109DC  C01A  F170         	movff	?_distance,LaySheetsOnTrays@forwardCount
  3462  0109E0  C01B  F171         	movff	?_distance+1,LaySheetsOnTrays@forwardCount+1
  3463  0109E4                     
  3464                           ;main.c: 611:        returnCount = -distance(5.75);
  3465  0109E4  0E00               	movlw	0
  3466  0109E6  6E1A               	movwf	distance@inch^0,c
  3467  0109E8  0E00               	movlw	0
  3468  0109EA  6E1B               	movwf	(distance@inch+1)^0,c
  3469  0109EC  0EB8               	movlw	184
  3470  0109EE  6E1C               	movwf	(distance@inch+2)^0,c
  3471  0109F0  0E40               	movlw	64
  3472  0109F2  6E1D               	movwf	(distance@inch+3)^0,c
  3473  0109F4  EC93  F08C         	call	_distance	;wreg free
  3474  0109F8  1E1A               	comf	?_distance^0,f,c
  3475  0109FA  1E1B               	comf	(?_distance+1)^0,f,c
  3476  0109FC  4A1A               	infsnz	?_distance^0,f,c
  3477  0109FE  2A1B               	incf	(?_distance+1)^0,f,c
  3478  010A00  C01A  F172         	movff	?_distance,LaySheetsOnTrays@returnCount
  3479  010A04  C01B  F173         	movff	?_distance+1,LaySheetsOnTrays@returnCount+1
  3480  010A08  0E00               	movlw	0
  3481  010A0A  6E1A               	movwf	distance@inch^0,c
  3482  010A0C  0E00               	movlw	0
  3483  010A0E  6E1B               	movwf	(distance@inch+1)^0,c
  3484  010A10  0E04               	movlw	4
  3485  010A12  6E1C               	movwf	(distance@inch+2)^0,c
  3486  010A14  0E41               	movlw	65
  3487  010A16  6E1D               	movwf	(distance@inch+3)^0,c
  3488  010A18  EC93  F08C         	call	_distance	;wreg free
  3489  010A1C                     
  3490                           ;main.c: 614:        lcd_set_cursor(0);
  3491  010A1C  0E00               	movlw	0
  3492  010A1E  EC7B  F08D         	call	_lcd_set_cursor
  3493  010A22                     
  3494                           ;main.c: 615:        sprintf(lcd_string,"Total Sheets %u ",0);
  3495  010A22  0E60               	movlw	low LaySheetsOnTrays@lcd_string
  3496  010A24  0100               	movlb	0	; () banked
  3497  010A26  6F7E               	movwf	sprintf@s& (0+255),b
  3498  010A28  0E01               	movlw	high LaySheetsOnTrays@lcd_string
  3499  010A2A  6F7F               	movwf	(sprintf@s+1)& (0+255),b
  3500  010A2C  0E25               	movlw	low STR_36
  3501  010A2E  6F80               	movwf	sprintf@fmt& (0+255),b
  3502  010A30  0EFF               	movlw	high STR_36
  3503  010A32  6F81               	movwf	(sprintf@fmt+1)& (0+255),b
  3504  010A34  0E00               	movlw	0
  3505  010A36  6F83               	movwf	(?_sprintf+5)& (0+255),b
  3506  010A38  0E00               	movlw	0
  3507  010A3A  6F82               	movwf	(?_sprintf+4)& (0+255),b
  3508  010A3C  ECA3  F08B         	call	_sprintf	;wreg free
  3509  010A40                     
  3510                           ;main.c: 616:        lcd_print(lcd_string);
  3511  010A40  0E60               	movlw	low LaySheetsOnTrays@lcd_string
  3512  010A42  6E14               	movwf	lcd_print@str^0,c
  3513  010A44  0E01               	movlw	high LaySheetsOnTrays@lcd_string
  3514  010A46  6E15               	movwf	(lcd_print@str+1)^0,c
  3515  010A48  EC37  F08D         	call	_lcd_print	;wreg free
  3516  010A4C                     
  3517                           ;main.c: 618:        motorNumber = 1;
  3518  010A4C  0E01               	movlw	1
  3519  010A4E  0101               	movlb	1	; () banked
  3520  010A50  6F76               	movwf	LaySheetsOnTrays@motorNumber& (0+255),b
  3521                           
  3522                           ;main.c: 620:        while(sheetCount) {
  3523  010A52  EFA7  F085         	goto	l4537
  3524  010A56                     l743:
  3525  010A56  B68E               	btfsc	142,3,c	;volatile
  3526  010A58  EF30  F085         	goto	u3841
  3527  010A5C  EF32  F085         	goto	u3840
  3528  010A60                     u3841:
  3529  010A60  EF2B  F085         	goto	l743
  3530  010A64                     u3840:
  3531  010A64                     
  3532                           ;main.c: 623:            rmove(motorNumber, 5000, -forwardCount);
  3533  010A64  0E13               	movlw	19
  3534  010A66  0100               	movlb	0	; () banked
  3535  010A68  6F94               	movwf	(rmove@speed+1)& (0+255),b
  3536  010A6A  0E88               	movlw	136
  3537  010A6C  6F93               	movwf	rmove@speed& (0+255),b
  3538  010A6E  C170  F0EC         	movff	LaySheetsOnTrays@forwardCount,??_LaySheetsOnTrays
  3539  010A72  C171  F0ED         	movff	LaySheetsOnTrays@forwardCount+1,??_LaySheetsOnTrays+1
  3540  010A76  1FEC               	comf	??_LaySheetsOnTrays& (0+255),f,b
  3541  010A78  1FED               	comf	(??_LaySheetsOnTrays+1)& (0+255),f,b
  3542  010A7A  4BEC               	infsnz	??_LaySheetsOnTrays& (0+255),f,b
  3543  010A7C  2BED               	incf	(??_LaySheetsOnTrays+1)& (0+255),f,b
  3544  010A7E  C0EC  F095         	movff	??_LaySheetsOnTrays,rmove@pos
  3545  010A82  C0ED  F096         	movff	??_LaySheetsOnTrays+1,rmove@pos+1
  3546  010A86  0101               	movlb	1	; () banked
  3547  010A88  5176               	movf	LaySheetsOnTrays@motorNumber& (0+255),w,b
  3548  010A8A  EC66  F08A         	call	_rmove
  3549  010A8E                     l4517:
  3550  010A8E  0E00               	movlw	0
  3551  010A90  0100               	movlb	0	; () banked
  3552  010A92  6FEC               	movwf	??_LaySheetsOnTrays& (0+255),b
  3553  010A94  0E00               	movlw	0
  3554  010A96  6FED               	movwf	(??_LaySheetsOnTrays+1)& (0+255),b
  3555  010A98  0E00               	movlw	0
  3556  010A9A  6FEE               	movwf	(??_LaySheetsOnTrays+2)& (0+255),b
  3557  010A9C  0E21               	movlw	33
  3558  010A9E  19EC               	xorwf	??_LaySheetsOnTrays& (0+255),w,b
  3559  010AA0  11ED               	iorwf	(??_LaySheetsOnTrays+1)& (0+255),w,b
  3560  010AA2  11EE               	iorwf	(??_LaySheetsOnTrays+2)& (0+255),w,b
  3561  010AA4  A4D8               	btfss	status,2,c
  3562  010AA6  EF57  F085         	goto	u3851
  3563  010AAA  EF59  F085         	goto	u3850
  3564  010AAE                     u3851:
  3565  010AAE  EF47  F085         	goto	l4517
  3566  010AB2                     u3850:
  3567  010AB2                     
  3568                           ; BSR set to: 0
  3569                           ;main.c: 626:            rmove(motorNumber, 5000, returnCount);
  3570  010AB2  0E13               	movlw	19
  3571  010AB4  6F94               	movwf	(rmove@speed+1)& (0+255),b
  3572  010AB6  0E88               	movlw	136
  3573  010AB8  6F93               	movwf	rmove@speed& (0+255),b
  3574  010ABA  C172  F095         	movff	LaySheetsOnTrays@returnCount,rmove@pos
  3575  010ABE  C173  F096         	movff	LaySheetsOnTrays@returnCount+1,rmove@pos+1
  3576  010AC2  0101               	movlb	1	; () banked
  3577  010AC4  5176               	movf	LaySheetsOnTrays@motorNumber& (0+255),w,b
  3578  010AC6  EC66  F08A         	call	_rmove
  3579  010ACA                     l4521:
  3580  010ACA  0E00               	movlw	0
  3581  010ACC  0100               	movlb	0	; () banked
  3582  010ACE  6FEC               	movwf	??_LaySheetsOnTrays& (0+255),b
  3583  010AD0  0E00               	movlw	0
  3584  010AD2  6FED               	movwf	(??_LaySheetsOnTrays+1)& (0+255),b
  3585  010AD4  0E00               	movlw	0
  3586  010AD6  6FEE               	movwf	(??_LaySheetsOnTrays+2)& (0+255),b
  3587  010AD8  0E21               	movlw	33
  3588  010ADA  19EC               	xorwf	??_LaySheetsOnTrays& (0+255),w,b
  3589  010ADC  11ED               	iorwf	(??_LaySheetsOnTrays+1)& (0+255),w,b
  3590  010ADE  11EE               	iorwf	(??_LaySheetsOnTrays+2)& (0+255),w,b
  3591  010AE0  A4D8               	btfss	status,2,c
  3592  010AE2  EF75  F085         	goto	u3861
  3593  010AE6  EF77  F085         	goto	u3860
  3594  010AEA                     u3861:
  3595  010AEA  EF65  F085         	goto	l4521
  3596  010AEE                     u3860:
  3597  010AEE                     
  3598                           ; BSR set to: 0
  3599                           ;main.c: 629:            if(--sheetCount <= 0)
  3600  010AEE  07E9               	decf	LaySheetsOnTrays@sheetCount& (0+255),f,b
  3601  010AF0  A0D8               	btfss	status,0,c
  3602  010AF2  07EA               	decf	(LaySheetsOnTrays@sheetCount+1)& (0+255),f,b
  3603  010AF4  51E9               	movf	LaySheetsOnTrays@sheetCount& (0+255),w,b
  3604  010AF6  11EA               	iorwf	(LaySheetsOnTrays@sheetCount+1)& (0+255),w,b
  3605  010AF8  A4D8               	btfss	status,2,c
  3606  010AFA  EF81  F085         	goto	u3871
  3607  010AFE  EF83  F085         	goto	u3870
  3608  010B02                     u3871:
  3609  010B02  EF85  F085         	goto	l4529
  3610  010B06                     u3870:
  3611  010B06  EFB1  F085         	goto	l758
  3612  010B0A                     l4529:
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;main.c: 632:                ++totalSheetsPlaced;
  3616  010B0A  0101               	movlb	1	; () banked
  3617  010B0C  4B74               	infsnz	LaySheetsOnTrays@totalSheetsPlaced& (0+255),f,b
  3618  010B0E  2B75               	incf	(LaySheetsOnTrays@totalSheetsPlaced+1)& (0+255),f,b
  3619  010B10                     
  3620                           ; BSR set to: 1
  3621                           ;main.c: 633:                lcd_set_cursor(0);
  3622  010B10  0E00               	movlw	0
  3623  010B12  EC7B  F08D         	call	_lcd_set_cursor
  3624  010B16                     
  3625                           ;main.c: 634:                sprintf(lcd_string,"Total Sheets %u ",totalSheetsPlaced);
  3626  010B16  0E60               	movlw	low LaySheetsOnTrays@lcd_string
  3627  010B18  0100               	movlb	0	; () banked
  3628  010B1A  6F7E               	movwf	sprintf@s& (0+255),b
  3629  010B1C  0E01               	movlw	high LaySheetsOnTrays@lcd_string
  3630  010B1E  6F7F               	movwf	(sprintf@s+1)& (0+255),b
  3631  010B20  0E25               	movlw	low STR_36
  3632  010B22  6F80               	movwf	sprintf@fmt& (0+255),b
  3633  010B24  0EFF               	movlw	high STR_36
  3634  010B26  6F81               	movwf	(sprintf@fmt+1)& (0+255),b
  3635  010B28  C174  F082         	movff	LaySheetsOnTrays@totalSheetsPlaced,?_sprintf+4
  3636  010B2C  C175  F083         	movff	LaySheetsOnTrays@totalSheetsPlaced+1,?_sprintf+5
  3637  010B30  ECA3  F08B         	call	_sprintf	;wreg free
  3638  010B34                     
  3639                           ;main.c: 635:                lcd_print(lcd_string);
  3640  010B34  0E60               	movlw	low LaySheetsOnTrays@lcd_string
  3641  010B36  6E14               	movwf	lcd_print@str^0,c
  3642  010B38  0E01               	movlw	high LaySheetsOnTrays@lcd_string
  3643  010B3A  6E15               	movwf	(lcd_print@str+1)^0,c
  3644  010B3C  EC37  F08D         	call	_lcd_print	;wreg free
  3645  010B40                     l755:
  3646  010B40  A68E               	btfss	142,3,c	;volatile
  3647  010B42  EFA5  F085         	goto	u3881
  3648  010B46  EFA7  F085         	goto	u3880
  3649  010B4A                     u3881:
  3650  010B4A  EFA0  F085         	goto	l755
  3651  010B4E                     u3880:
  3652  010B4E                     l4537:
  3653                           
  3654                           ;main.c: 620:        while(sheetCount) {
  3655  010B4E  0100               	movlb	0	; () banked
  3656  010B50  51E9               	movf	LaySheetsOnTrays@sheetCount& (0+255),w,b
  3657  010B52  11EA               	iorwf	(LaySheetsOnTrays@sheetCount+1)& (0+255),w,b
  3658  010B54  A4D8               	btfss	status,2,c
  3659  010B56  EFAF  F085         	goto	u3891
  3660  010B5A  EFB1  F085         	goto	u3890
  3661  010B5E                     u3891:
  3662  010B5E  EF2B  F085         	goto	l743
  3663  010B62                     u3890:
  3664  010B62                     l758:
  3665                           
  3666                           ; BSR set to: 0
  3667  010B62  0012               	return		;funcret
  3668  010B64                     __end_of_LaySheetsOnTrays:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _rmove *****************
  3672 ;; Defined at:
  3673 ;;		line 562 in file "main.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  motor           1    wreg     unsigned char 
  3676 ;;  speed           2   51[BANK0 ] unsigned short 
  3677 ;;  pos             2   53[BANK0 ] unsigned short 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  motor           1  136[BANK0 ] unsigned char 
  3680 ;;  move_buf       40   96[BANK0 ] unsigned char [40]
  3681 ;;  speed_buf      40   56[BANK0 ] unsigned char [40]
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Locals:         0      81       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Totals:         0      86       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;Total ram usage:       86 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 12
  3698 ;; This function calls:
  3699 ;;		_TX_Buffer1
  3700 ;;		_sprintf
  3701 ;;		_strlen
  3702 ;; This function is called by:
  3703 ;;		_LaySheetsOnTrays
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text24
  3708  0114CC                     __ptext24:
  3709                           	callstack 0
  3710  0114CC                     _rmove:
  3711                           	callstack 17
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;incstack = 0
  3715                           ;rmove@motor stored from wreg
  3716  0114CC  0100               	movlb	0	; () banked
  3717  0114CE  6FE8               	movwf	rmove@motor& (0+255),b
  3718  0114D0                     
  3719                           ;main.c: 563:         uint8_t speed_buf[40];;main.c: 564:         uint8_t move_buf[40];;
      +                          main.c: 565:         sprintf(speed_buf,"@%i ACCF %i\n",motor, speed);
  3720  0114D0  0E98               	movlw	low rmove@speed_buf
  3721  0114D2  0100               	movlb	0	; () banked
  3722  0114D4  6F7E               	movwf	sprintf@s& (0+255),b
  3723  0114D6  0E00               	movlw	high rmove@speed_buf
  3724  0114D8  6F7F               	movwf	(sprintf@s+1)& (0+255),b
  3725  0114DA  0EE5               	movlw	low STR_34
  3726  0114DC  6F80               	movwf	sprintf@fmt& (0+255),b
  3727  0114DE  0EFF               	movlw	high STR_34
  3728  0114E0  6F81               	movwf	(sprintf@fmt+1)& (0+255),b
  3729  0114E2  C0E8  F082         	movff	rmove@motor,?_sprintf+4
  3730  0114E6  6B83               	clrf	(?_sprintf+5)& (0+255),b
  3731  0114E8  C093  F084         	movff	rmove@speed,?_sprintf+6
  3732  0114EC  C094  F085         	movff	rmove@speed+1,?_sprintf+7
  3733  0114F0  ECA3  F08B         	call	_sprintf	;wreg free
  3734  0114F4                     
  3735                           ;main.c: 566:         TX_Buffer1(speed_buf, strlen(speed_buf));
  3736  0114F4  0E98               	movlw	low rmove@speed_buf
  3737  0114F6  6E0E               	movwf	TX_Buffer1@buff^0,c
  3738  0114F8  0E00               	movlw	high rmove@speed_buf
  3739  0114FA  6E0F               	movwf	(TX_Buffer1@buff+1)^0,c
  3740  0114FC  0E98               	movlw	low rmove@speed_buf
  3741  0114FE  6E0A               	movwf	strlen@s^0,c
  3742  011500  0E00               	movlw	high rmove@speed_buf
  3743  011502  6E0B               	movwf	(strlen@s+1)^0,c
  3744  011504  EC78  F08C         	call	_strlen	;wreg free
  3745  011508  500A               	movf	?_strlen^0,w,c
  3746  01150A  6E10               	movwf	TX_Buffer1@size^0,c
  3747  01150C  EC5A  F08C         	call	_TX_Buffer1	;wreg free
  3748  011510                     
  3749                           ;main.c: 567:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3750  011510  0E03               	movlw	3
  3751  011512  0100               	movlb	0	; () banked
  3752  011514  6F97               	movwf	??_rmove& (0+255),b
  3753  011516  0E97               	movlw	151
  3754  011518                     u4307:
  3755  011518  2EE8               	decfsz	wreg,f,c
  3756  01151A  D7FE               	bra	u4307
  3757  01151C  2F97               	decfsz	??_rmove& (0+255),f,b
  3758  01151E  D7FC               	bra	u4307
  3759  011520  D000               	nop2	
  3760  011522                     
  3761                           ;main.c: 568:         sprintf(move_buf,"@%i RMOV %i\n",motor, pos);
  3762  011522  0EC0               	movlw	low rmove@move_buf
  3763  011524  0100               	movlb	0	; () banked
  3764  011526  6F7E               	movwf	sprintf@s& (0+255),b
  3765  011528  0E00               	movlw	high rmove@move_buf
  3766  01152A  6F7F               	movwf	(sprintf@s+1)& (0+255),b
  3767  01152C  0EF2               	movlw	low STR_35
  3768  01152E  6F80               	movwf	sprintf@fmt& (0+255),b
  3769  011530  0EFF               	movlw	high STR_35
  3770  011532  6F81               	movwf	(sprintf@fmt+1)& (0+255),b
  3771  011534  C0E8  F082         	movff	rmove@motor,?_sprintf+4
  3772  011538  6B83               	clrf	(?_sprintf+5)& (0+255),b
  3773  01153A  C095  F084         	movff	rmove@pos,?_sprintf+6
  3774  01153E  C096  F085         	movff	rmove@pos+1,?_sprintf+7
  3775  011542  ECA3  F08B         	call	_sprintf	;wreg free
  3776  011546                     
  3777                           ;main.c: 569:         TX_Buffer1(move_buf, strlen(move_buf));
  3778  011546  0EC0               	movlw	low rmove@move_buf
  3779  011548  6E0E               	movwf	TX_Buffer1@buff^0,c
  3780  01154A  0E00               	movlw	high rmove@move_buf
  3781  01154C  6E0F               	movwf	(TX_Buffer1@buff+1)^0,c
  3782  01154E  0EC0               	movlw	low rmove@move_buf
  3783  011550  6E0A               	movwf	strlen@s^0,c
  3784  011552  0E00               	movlw	high rmove@move_buf
  3785  011554  6E0B               	movwf	(strlen@s+1)^0,c
  3786  011556  EC78  F08C         	call	_strlen	;wreg free
  3787  01155A  500A               	movf	?_strlen^0,w,c
  3788  01155C  6E10               	movwf	TX_Buffer1@size^0,c
  3789  01155E  EC5A  F08C         	call	_TX_Buffer1	;wreg free
  3790                           
  3791                           ;main.c: 570:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3792  011562  0E03               	movlw	3
  3793  011564  0100               	movlb	0	; () banked
  3794  011566  6F97               	movwf	??_rmove& (0+255),b
  3795  011568  0E97               	movlw	151
  3796  01156A                     u4317:
  3797  01156A  2EE8               	decfsz	wreg,f,c
  3798  01156C  D7FE               	bra	u4317
  3799  01156E  2F97               	decfsz	??_rmove& (0+255),f,b
  3800  011570  D7FC               	bra	u4317
  3801  011572  D000               	nop2	
  3802  011574  0012               	return		;funcret
  3803  011576                     __end_of_rmove:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _sprintf *****************
  3807 ;; Defined at:
  3808 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  s               2   30[BANK0 ] PTR unsigned char 
  3811 ;;		 -> LaySheetsOnTrays@lcd_string(16), rmove@move_buf(40), rmove@speed_buf(40), lcd_page_1@lcd_string(16), 
  3812 ;;		 -> lcd_show_values@lcd_string(16), lcd_GUI@lcd_string(16), 
  3813 ;;  fmt             2   32[BANK0 ] PTR const unsigned char 
  3814 ;;		 -> STR_37(17), STR_36(17), STR_35(13), STR_34(13), 
  3815 ;;		 -> STR_28(15), STR_27(16), STR_26(17), STR_17(17), 
  3816 ;;		 -> STR_16(18), STR_15(15), STR_14(15), STR_13(16), 
  3817 ;;		 -> STR_12(17), STR_11(19), STR_10(19), STR_9(21), 
  3818 ;;		 -> STR_2(16), 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  f              11   40[BANK0 ] struct _IO_FILE
  3821 ;;  ap              2   38[BANK0 ] PTR void [1]
  3822 ;;		 -> ?_sprintf(2), 
  3823 ;;  ret             2    0        int 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  2   30[BANK0 ] int 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3833 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;Total ram usage:       21 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 11
  3840 ;; This function calls:
  3841 ;;		_vfprintf
  3842 ;; This function is called by:
  3843 ;;		_lcd_GUI
  3844 ;;		_rmove
  3845 ;;		_LaySheetsOnTrays
  3846 ;;		_lcd_show_values
  3847 ;;		_lcd_page_1
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text25
  3852  011746                     __ptext25:
  3853                           	callstack 0
  3854  011746                     _sprintf:
  3855                           	callstack 18
  3856  011746  0E82               	movlw	low (?_sprintf+4)
  3857  011748  0100               	movlb	0	; () banked
  3858  01174A  6F86               	movwf	sprintf@ap& (0+255),b
  3859  01174C  0E00               	movlw	high (?_sprintf+4)
  3860  01174E  6F87               	movwf	(sprintf@ap+1)& (0+255),b
  3861  011750  C07E  F088         	movff	sprintf@s,sprintf@f
  3862  011754  C07F  F089         	movff	sprintf@s+1,sprintf@f+1
  3863  011758                     
  3864                           ; BSR set to: 0
  3865  011758  0E00               	movlw	0
  3866  01175A  6F8C               	movwf	(sprintf@f+4)& (0+255),b
  3867  01175C  0E00               	movlw	0
  3868  01175E  6F8B               	movwf	(sprintf@f+3)& (0+255),b
  3869  011760                     
  3870                           ; BSR set to: 0
  3871  011760  0E00               	movlw	0
  3872  011762  6F92               	movwf	(sprintf@f+10)& (0+255),b
  3873  011764  0E00               	movlw	0
  3874  011766  6F91               	movwf	(sprintf@f+9)& (0+255),b
  3875  011768                     
  3876                           ; BSR set to: 0
  3877  011768  0E88               	movlw	low sprintf@f
  3878  01176A  6F76               	movwf	vfprintf@fp& (0+255),b
  3879  01176C  0E00               	movlw	high sprintf@f
  3880  01176E  6F77               	movwf	(vfprintf@fp+1)& (0+255),b
  3881  011770  C080  F078         	movff	sprintf@fmt,vfprintf@fmt
  3882  011774  C081  F079         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3883  011778  0E86               	movlw	low sprintf@ap
  3884  01177A  6F7A               	movwf	vfprintf@ap& (0+255),b
  3885  01177C  0E00               	movlw	high sprintf@ap
  3886  01177E  6F7B               	movwf	(vfprintf@ap+1)& (0+255),b
  3887  011780  EC3D  F08B         	call	_vfprintf	;wreg free
  3888  011784  0100               	movlb	0	; () banked
  3889  011786  518B               	movf	(sprintf@f+3)& (0+255),w,b
  3890  011788  257E               	addwf	sprintf@s& (0+255),w,b
  3891  01178A  6ED9               	movwf	fsr2l,c
  3892  01178C  518C               	movf	(sprintf@f+4)& (0+255),w,b
  3893  01178E  217F               	addwfc	(sprintf@s+1)& (0+255),w,b
  3894  011790  6EDA               	movwf	fsr2h,c
  3895  011792  0E00               	movlw	0
  3896  011794  6EDF               	movwf	indf2,c
  3897  011796                     
  3898                           ; BSR set to: 0
  3899  011796  0012               	return		;funcret
  3900  011798                     __end_of_sprintf:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function _vfprintf *****************
  3904 ;; Defined at:
  3905 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  3908 ;;		 -> sprintf@f(11), 
  3909 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  3910 ;;		 -> STR_37(17), STR_36(17), STR_35(13), STR_34(13), 
  3911 ;;		 -> STR_28(15), STR_27(16), STR_26(17), STR_17(17), 
  3912 ;;		 -> STR_16(18), STR_15(15), STR_14(15), STR_13(16), 
  3913 ;;		 -> STR_12(17), STR_11(19), STR_10(19), STR_9(21), 
  3914 ;;		 -> STR_2(16), 
  3915 ;;  ap              2   26[BANK0 ] PTR PTR void 
  3916 ;;		 -> sprintf@ap(2), 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  cfmt            2   28[BANK0 ] PTR unsigned char 
  3919 ;;		 -> STR_37(17), STR_36(17), STR_35(13), STR_34(13), 
  3920 ;;		 -> STR_28(15), STR_27(16), STR_26(17), STR_17(17), 
  3921 ;;		 -> STR_16(18), STR_15(15), STR_14(15), STR_13(16), 
  3922 ;;		 -> STR_12(17), STR_11(19), STR_10(19), STR_9(21), 
  3923 ;;		 -> STR_2(16), 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2   22[BANK0 ] int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3933 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3937 ;;Total ram usage:        8 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 10
  3940 ;; This function calls:
  3941 ;;		_vfpfcnvrt
  3942 ;; This function is called by:
  3943 ;;		_sprintf
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text26
  3948  01167A                     __ptext26:
  3949                           	callstack 0
  3950  01167A                     _vfprintf:
  3951                           	callstack 18
  3952  01167A                     
  3953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3954  01167A  C078  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  3955  01167E  C079  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3956  011682                     
  3957                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3958  011682  0E00               	movlw	0
  3959  011684  0101               	movlb	1	; () banked
  3960  011686  6F19               	movwf	(_nout+1)& (0+255),b
  3961  011688  0E00               	movlw	0
  3962  01168A  6F18               	movwf	_nout& (0+255),b
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3965  01168C  EF5F  F08B         	goto	l4311
  3966  011690                     l4309:
  3967                           
  3968                           ; BSR set to: 1
  3969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3970  011690  C076  F060         	movff	vfprintf@fp,vfpfcnvrt@fp
  3971  011694  C077  F061         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3972  011698  0E7C               	movlw	low vfprintf@cfmt
  3973  01169A  0100               	movlb	0	; () banked
  3974  01169C  6F62               	movwf	vfpfcnvrt@fmt& (0+255),b
  3975  01169E  0E00               	movlw	high vfprintf@cfmt
  3976  0116A0  6F63               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3977  0116A2  C07A  F064         	movff	vfprintf@ap,vfpfcnvrt@ap
  3978  0116A6  C07B  F065         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3979  0116AA  EC6F  F081         	call	_vfpfcnvrt	;wreg free
  3980  0116AE  0100               	movlb	0	; () banked
  3981  0116B0  5160               	movf	?_vfpfcnvrt& (0+255),w,b
  3982  0116B2  0101               	movlb	1	; () banked
  3983  0116B4  2718               	addwf	_nout& (0+255),f,b
  3984  0116B6  0100               	movlb	0	; () banked
  3985  0116B8  5161               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3986  0116BA  0101               	movlb	1	; () banked
  3987  0116BC  2319               	addwfc	(_nout+1)& (0+255),f,b
  3988  0116BE                     l4311:
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3992  0116BE  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3993  0116C2  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3994  0116C6                     	if	0	;tblptru may be non-zero
  3995  0116C6                     	endif
  3996  0116C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3997  0116C6  0E00               	movlw	low (__mediumconst shr (0+16))
  3998  0116C8  6EF8               	movwf	tblptru,c
  3999  0116CA                     	endif
  4000  0116CA  0008               	tblrd		*
  4001  0116CC  50F5               	movf	tablat,w,c
  4002  0116CE  0900               	iorlw	0
  4003  0116D0  A4D8               	btfss	status,2,c
  4004  0116D2  EF6D  F08B         	goto	u3661
  4005  0116D6  EF6F  F08B         	goto	u3660
  4006  0116DA                     u3661:
  4007  0116DA  EF48  F08B         	goto	l4309
  4008  0116DE                     u3660:
  4009  0116DE                     
  4010                           ; BSR set to: 1
  4011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4012  0116DE  C118  F076         	movff	_nout,?_vfprintf
  4013  0116E2  C119  F077         	movff	_nout+1,?_vfprintf+1
  4014  0116E6                     
  4015                           ; BSR set to: 1
  4016  0116E6  0012               	return		;funcret
  4017  0116E8                     __end_of_vfprintf:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _vfpfcnvrt *****************
  4021 ;; Defined at:
  4022 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4025 ;;		 -> sprintf@f(11), 
  4026 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  4027 ;;		 -> vfprintf@cfmt(2), 
  4028 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4029 ;;		 -> sprintf@ap(2), 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  llu             8   14[BANK0 ] unsigned long long 
  4032 ;;  ll              8    6[BANK0 ] long long 
  4033 ;;  f               4    0        long long 
  4034 ;;  vp              3    0        PTR void 
  4035 ;;  ct              3    0        unsigned char [3]
  4036 ;;  cp              3    0        PTR unsigned char 
  4037 ;;  i               2    0        int 
  4038 ;;  done            2    0        int 
  4039 ;;  c               1    0        unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    0[BANK0 ] int 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4049 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4050 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Totals:         4      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;Total ram usage:       26 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 9
  4056 ;; This function calls:
  4057 ;;		_dtoa
  4058 ;;		_fputc
  4059 ;;		_utoa
  4060 ;; This function is called by:
  4061 ;;		_vfprintf
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text27
  4066  0102DE                     __ptext27:
  4067                           	callstack 0
  4068  0102DE                     _vfpfcnvrt:
  4069                           	callstack 18
  4070  0102DE                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4072  0102DE  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4073  0102E2  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4074  0102E6  CFDE FFF6          	movff	postinc2,tblptrl
  4075  0102EA  CFDD FFF7          	movff	postdec2,tblptrh
  4076  0102EE                     	if	0	;tblptru may be non-zero
  4077  0102EE                     	endif
  4078  0102EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4079  0102EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4080  0102F0  6EF8               	movwf	tblptru,c
  4081  0102F2                     	endif
  4082  0102F2  0008               	tblrd		*
  4083  0102F4  50F5               	movf	tablat,w,c
  4084  0102F6  0A25               	xorlw	37
  4085  0102F8  A4D8               	btfss	status,2,c
  4086  0102FA  EF81  F081         	goto	u3591
  4087  0102FE  EF83  F081         	goto	u3590
  4088  010302                     u3591:
  4089  010302  EF8E  F082         	goto	l4289
  4090  010306                     u3590:
  4091  010306                     
  4092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4093  010306  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4094  01030A  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4095  01030E  2ADE               	incf	postinc2,f,c
  4096  010310  0E00               	movlw	0
  4097  010312  22DD               	addwfc	postdec2,f,c
  4098  010314                     
  4099                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4100  010314  0E00               	movlw	0
  4101  010316  0101               	movlb	1	; () banked
  4102  010318  6F1B               	movwf	(_width+1)& (0+255),b
  4103  01031A  0E00               	movlw	0
  4104  01031C  6F1A               	movwf	_width& (0+255),b
  4105  01031E  C11A  F04F         	movff	_width,_flags
  4106  010322  C11B  F050         	movff	_width+1,_flags+1
  4107  010326                     
  4108                           ; BSR set to: 1
  4109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4110  010326  684D               	setf	_prec^0,c
  4111  010328  684E               	setf	(_prec+1)^0,c
  4112  01032A                     
  4113                           ; BSR set to: 1
  4114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4115  01032A  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4116  01032E  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4117  010332  CFDE FFF6          	movff	postinc2,tblptrl
  4118  010336  CFDD FFF7          	movff	postdec2,tblptrh
  4119  01033A                     	if	0	;tblptru may be non-zero
  4120  01033A                     	endif
  4121  01033A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4122  01033A  0E00               	movlw	low (__mediumconst shr (0+16))
  4123  01033C  6EF8               	movwf	tblptru,c
  4124  01033E                     	endif
  4125  01033E  0008               	tblrd		*
  4126  010340  50F5               	movf	tablat,w,c
  4127  010342  0A64               	xorlw	100
  4128  010344  B4D8               	btfsc	status,2,c
  4129  010346  EFA7  F081         	goto	u3601
  4130  01034A  EFA9  F081         	goto	u3600
  4131  01034E                     u3601:
  4132  01034E  EFBD  F081         	goto	l4259
  4133  010352                     u3600:
  4134  010352                     
  4135                           ; BSR set to: 1
  4136  010352  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4137  010356  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4138  01035A  CFDE FFF6          	movff	postinc2,tblptrl
  4139  01035E  CFDD FFF7          	movff	postdec2,tblptrh
  4140  010362                     	if	0	;tblptru may be non-zero
  4141  010362                     	endif
  4142  010362                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4143  010362  0E00               	movlw	low (__mediumconst shr (0+16))
  4144  010364  6EF8               	movwf	tblptru,c
  4145  010366                     	endif
  4146  010366  0008               	tblrd		*
  4147  010368  50F5               	movf	tablat,w,c
  4148  01036A  0A69               	xorlw	105
  4149  01036C  A4D8               	btfss	status,2,c
  4150  01036E  EFBB  F081         	goto	u3611
  4151  010372  EFBD  F081         	goto	u3610
  4152  010376                     u3611:
  4153  010376  EFFE  F081         	goto	l4265
  4154  01037A                     u3610:
  4155  01037A                     l4259:
  4156                           
  4157                           ; BSR set to: 1
  4158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4159  01037A  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4160  01037E  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4161  010382  2ADE               	incf	postinc2,f,c
  4162  010384  0E00               	movlw	0
  4163  010386  22DD               	addwfc	postdec2,f,c
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4166  010388  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4167  01038C  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4168  010390  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4169  010394  0E02               	movlw	2
  4170  010396  26DE               	addwf	postinc2,f,c
  4171  010398  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4172  01039C  0E00               	movlw	0
  4173  01039E  22DD               	addwfc	postdec2,f,c
  4174  0103A0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4175  0103A4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4176  0103A8  CFDE F066          	movff	postinc2,vfpfcnvrt@ll
  4177  0103AC  CFDD F067          	movff	postdec2,vfpfcnvrt@ll+1
  4178  0103B0  0100               	movlb	0	; () banked
  4179  0103B2  0E00               	movlw	0
  4180  0103B4  BF67               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4181  0103B6  0EFF               	movlw	-1
  4182  0103B8  6F68               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4183  0103BA  6F69               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4184  0103BC  6F6A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4185  0103BE  6F6B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4186  0103C0  6F6C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4187  0103C2  6F6D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4188  0103C4                     
  4189                           ; BSR set to: 0
  4190                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4191  0103C4  C060  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  4192  0103C8  C061  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4193  0103CC  C066  F027         	movff	vfpfcnvrt@ll,dtoa@d
  4194  0103D0  C067  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4195  0103D4  C068  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4196  0103D8  C069  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4197  0103DC  C06A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4198  0103E0  C06B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4199  0103E4  C06C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4200  0103E8  C06D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4201  0103EC  EC00  F080         	call	_dtoa	;wreg free
  4202  0103F0  C025  F060         	movff	?_dtoa,?_vfpfcnvrt
  4203  0103F4  C026  F061         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4204  0103F8  EFAB  F082         	goto	l1519
  4205  0103FC                     l4265:
  4206                           
  4207                           ; BSR set to: 1
  4208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4209  0103FC  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4210  010400  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4211  010404  CFDE FFF6          	movff	postinc2,tblptrl
  4212  010408  CFDD FFF7          	movff	postdec2,tblptrh
  4213  01040C                     	if	0	;tblptru may be non-zero
  4214  01040C                     	endif
  4215  01040C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4216  01040C  0E00               	movlw	low (__mediumconst shr (0+16))
  4217  01040E  6EF8               	movwf	tblptru,c
  4218  010410                     	endif
  4219  010410  0008               	tblrd		*
  4220  010412  50F5               	movf	tablat,w,c
  4221  010414  0A75               	xorlw	117
  4222  010416  A4D8               	btfss	status,2,c
  4223  010418  EF10  F082         	goto	u3621
  4224  01041C  EF12  F082         	goto	u3620
  4225  010420                     u3621:
  4226  010420  EF54  F082         	goto	l4273
  4227  010424                     u3620:
  4228  010424                     
  4229                           ; BSR set to: 1
  4230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4231  010424  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4232  010428  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4233  01042C  2ADE               	incf	postinc2,f,c
  4234  01042E  0E00               	movlw	0
  4235  010430  22DD               	addwfc	postdec2,f,c
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4238  010432  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4239  010436  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4240  01043A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4241  01043E  0E02               	movlw	2
  4242  010440  26DE               	addwf	postinc2,f,c
  4243  010442  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4244  010446  0E00               	movlw	0
  4245  010448  22DD               	addwfc	postdec2,f,c
  4246  01044A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4247  01044E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4248  010452  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4249  010456  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4250  01045A  C04B  F06E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4251  01045E  C04C  F06F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4252  010462  0100               	movlb	0	; () banked
  4253  010464  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4254  010466  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4255  010468  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4256  01046A  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4257  01046C  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4258  01046E  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4259  010470                     
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  4262  010470  C060  F025         	movff	vfpfcnvrt@fp,utoa@fp
  4263  010474  C061  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4264  010478  C06E  F027         	movff	vfpfcnvrt@llu,utoa@d
  4265  01047C  C06F  F028         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4266  010480  C070  F029         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4267  010484  C071  F02A         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4268  010488  C072  F02B         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4269  01048C  C073  F02C         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4270  010490  C074  F02D         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4271  010494  C075  F02E         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4272  010498  ECDF  F083         	call	_utoa	;wreg free
  4273  01049C  C025  F060         	movff	?_utoa,?_vfpfcnvrt
  4274  0104A0  C026  F061         	movff	?_utoa+1,?_vfpfcnvrt+1
  4275  0104A4  EFAB  F082         	goto	l1519
  4276  0104A8                     l4273:
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4280  0104A8  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4281  0104AC  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4282  0104B0  CFDE FFF6          	movff	postinc2,tblptrl
  4283  0104B4  CFDD FFF7          	movff	postdec2,tblptrh
  4284  0104B8                     	if	0	;tblptru may be non-zero
  4285  0104B8                     	endif
  4286  0104B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4287  0104B8  0E00               	movlw	low (__mediumconst shr (0+16))
  4288  0104BA  6EF8               	movwf	tblptru,c
  4289  0104BC                     	endif
  4290  0104BC  0008               	tblrd		*
  4291  0104BE  50F5               	movf	tablat,w,c
  4292  0104C0  0A25               	xorlw	37
  4293  0104C2  A4D8               	btfss	status,2,c
  4294  0104C4  EF66  F082         	goto	u3631
  4295  0104C8  EF68  F082         	goto	u3630
  4296  0104CC                     u3631:
  4297  0104CC  EF80  F082         	goto	l4283
  4298  0104D0                     u3630:
  4299  0104D0                     
  4300                           ; BSR set to: 1
  4301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4302  0104D0  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4303  0104D4  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4304  0104D8  2ADE               	incf	postinc2,f,c
  4305  0104DA  0E00               	movlw	0
  4306  0104DC  22DD               	addwfc	postdec2,f,c
  4307  0104DE                     
  4308                           ; BSR set to: 1
  4309                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4310  0104DE  0E00               	movlw	0
  4311  0104E0  6E0B               	movwf	(fputc@c+1)^0,c
  4312  0104E2  0E25               	movlw	37
  4313  0104E4  6E0A               	movwf	fputc@c^0,c
  4314  0104E6  C060  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  4315  0104EA  C061  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4316  0104EE  EC8B  F088         	call	_fputc	;wreg free
  4317  0104F2                     l4279:
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4320  0104F2  0E00               	movlw	0
  4321  0104F4  0100               	movlb	0	; () banked
  4322  0104F6  6F61               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4323  0104F8  0E01               	movlw	1
  4324  0104FA  6F60               	movwf	?_vfpfcnvrt& (0+255),b
  4325  0104FC  EFAB  F082         	goto	l1519
  4326  010500                     l4283:
  4327                           
  4328                           ; BSR set to: 1
  4329                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4330  010500  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4331  010504  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4332  010508  2ADE               	incf	postinc2,f,c
  4333  01050A  0E00               	movlw	0
  4334  01050C  22DD               	addwfc	postdec2,f,c
  4335  01050E                     
  4336                           ; BSR set to: 1
  4337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4338  01050E  0E00               	movlw	0
  4339  010510  0100               	movlb	0	; () banked
  4340  010512  6F61               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4341  010514  0E00               	movlw	0
  4342  010516  6F60               	movwf	?_vfpfcnvrt& (0+255),b
  4343  010518  EFAB  F082         	goto	l1519
  4344  01051C                     l4289:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4347  01051C  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4348  010520  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4349  010524  CFDE FFF6          	movff	postinc2,tblptrl
  4350  010528  CFDD FFF7          	movff	postdec2,tblptrh
  4351  01052C                     	if	0	;tblptru may be non-zero
  4352  01052C                     	endif
  4353  01052C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4354  01052C  0E00               	movlw	low (__mediumconst shr (0+16))
  4355  01052E  6EF8               	movwf	tblptru,c
  4356  010530                     	endif
  4357  010530  0008               	tblrd		*
  4358  010532  50F5               	movf	tablat,w,c
  4359  010534  6E0A               	movwf	fputc@c^0,c
  4360  010536  6A0B               	clrf	(fputc@c+1)^0,c
  4361  010538  C060  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  4362  01053C  C061  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4363  010540  EC8B  F088         	call	_fputc	;wreg free
  4364  010544                     
  4365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4366  010544  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4367  010548  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4368  01054C  2ADE               	incf	postinc2,f,c
  4369  01054E  0E00               	movlw	0
  4370  010550  22DD               	addwfc	postdec2,f,c
  4371  010552  EF79  F082         	goto	l4279
  4372  010556                     l1519:
  4373  010556  0012               	return		;funcret
  4374  010558                     __end_of_vfpfcnvrt:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _utoa *****************
  4378 ;; Defined at:
  4379 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  4382 ;;		 -> sprintf@f(11), 
  4383 ;;  d               8   38[COMRAM] unsigned long long 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  n               8   58[COMRAM] unsigned long long 
  4386 ;;  i               2   66[COMRAM] int 
  4387 ;;  w               2   56[COMRAM] int 
  4388 ;;  p               2   54[COMRAM] int 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  2   36[COMRAM] int 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4398 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4401 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4402 ;;Total ram usage:       32 bytes
  4403 ;; Hardware stack levels used: 1
  4404 ;; Hardware stack levels required when called: 8
  4405 ;; This function calls:
  4406 ;;		___lodiv
  4407 ;;		___lomod
  4408 ;;		_pad
  4409 ;; This function is called by:
  4410 ;;		_vfpfcnvrt
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text28
  4415  0107BE                     __ptext28:
  4416                           	callstack 0
  4417  0107BE                     _utoa:
  4418                           	callstack 18
  4419  0107BE                     
  4420                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4421  0107BE  BE4E               	btfsc	(_prec+1)^0,7,c
  4422  0107C0  EFE4  F083         	goto	u3521
  4423  0107C4  EFE6  F083         	goto	u3520
  4424  0107C8                     u3521:
  4425  0107C8  EFE7  F083         	goto	l4215
  4426  0107CC                     u3520:
  4427  0107CC                     
  4428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4429  0107CC  924F               	bcf	_flags^0,1,c
  4430  0107CE                     l4215:
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4433  0107CE  BE4E               	btfsc	(_prec+1)^0,7,c
  4434  0107D0  EFF4  F083         	goto	u3530
  4435  0107D4  504E               	movf	(_prec+1)^0,w,c
  4436  0107D6  E106               	bnz	u3531
  4437  0107D8  044D               	decf	_prec^0,w,c
  4438  0107DA  B0D8               	btfsc	status,0,c
  4439  0107DC  EFF2  F083         	goto	u3531
  4440  0107E0  EFF4  F083         	goto	u3530
  4441  0107E4                     u3531:
  4442  0107E4  EFFA  F083         	goto	l1502
  4443  0107E8                     u3530:
  4444  0107E8  0E00               	movlw	0
  4445  0107EA  6E38               	movwf	(utoa@p+1)^0,c
  4446  0107EC  0E01               	movlw	1
  4447  0107EE  6E37               	movwf	utoa@p^0,c
  4448  0107F0  EFFE  F083         	goto	l1504
  4449  0107F4                     l1502:
  4450  0107F4  C04D  F037         	movff	_prec,utoa@p
  4451  0107F8  C04E  F038         	movff	_prec+1,utoa@p+1
  4452  0107FC                     l1504:
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4455  0107FC  C11A  F039         	movff	_width,utoa@w
  4456  010800  C11B  F03A         	movff	_width+1,utoa@w+1
  4457                           
  4458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4459  010804  C027  F03B         	movff	utoa@d,utoa@n
  4460  010808  C028  F03C         	movff	utoa@d+1,utoa@n+1
  4461  01080C  C029  F03D         	movff	utoa@d+2,utoa@n+2
  4462  010810  C02A  F03E         	movff	utoa@d+3,utoa@n+3
  4463  010814  C02B  F03F         	movff	utoa@d+4,utoa@n+4
  4464  010818  C02C  F040         	movff	utoa@d+5,utoa@n+5
  4465  01081C  C02D  F041         	movff	utoa@d+6,utoa@n+6
  4466  010820  C02E  F042         	movff	utoa@d+7,utoa@n+7
  4467  010824                     
  4468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4469  010824  0E00               	movlw	0
  4470  010826  6E44               	movwf	(utoa@i+1)^0,c
  4471  010828  0E1F               	movlw	31
  4472  01082A  6E43               	movwf	utoa@i^0,c
  4473  01082C                     
  4474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4475  01082C  0E00               	movlw	0
  4476  01082E  0101               	movlb	1	; () banked
  4477  010830  6F41               	movwf	(_dbuf+31)& (0+255),b
  4478                           
  4479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4480  010832  EF91  F084         	goto	l4233
  4481  010836                     l4223:
  4482                           
  4483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  4484  010836  0643               	decf	utoa@i^0,f,c
  4485  010838  A0D8               	btfss	status,0,c
  4486  01083A  0644               	decf	(utoa@i+1)^0,f,c
  4487  01083C                     
  4488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4489  01083C  0E22               	movlw	low _dbuf
  4490  01083E  2443               	addwf	utoa@i^0,w,c
  4491  010840  6ED9               	movwf	fsr2l,c
  4492  010842  0E01               	movlw	high _dbuf
  4493  010844  2044               	addwfc	(utoa@i+1)^0,w,c
  4494  010846  6EDA               	movwf	fsr2h,c
  4495  010848  C03B  F00A         	movff	utoa@n,___lomod@dividend
  4496  01084C  C03C  F00B         	movff	utoa@n+1,___lomod@dividend+1
  4497  010850  C03D  F00C         	movff	utoa@n+2,___lomod@dividend+2
  4498  010854  C03E  F00D         	movff	utoa@n+3,___lomod@dividend+3
  4499  010858  C03F  F00E         	movff	utoa@n+4,___lomod@dividend+4
  4500  01085C  C040  F00F         	movff	utoa@n+5,___lomod@dividend+5
  4501  010860  C041  F010         	movff	utoa@n+6,___lomod@dividend+6
  4502  010864  C042  F011         	movff	utoa@n+7,___lomod@dividend+7
  4503  010868  0E0A               	movlw	10
  4504  01086A  6E12               	movwf	___lomod@divisor^0,c
  4505  01086C  0E00               	movlw	0
  4506  01086E  6E13               	movwf	(___lomod@divisor+1)^0,c
  4507  010870  0E00               	movlw	0
  4508  010872  6E14               	movwf	(___lomod@divisor+2)^0,c
  4509  010874  0E00               	movlw	0
  4510  010876  6E15               	movwf	(___lomod@divisor+3)^0,c
  4511  010878  0E00               	movlw	0
  4512  01087A  6E16               	movwf	(___lomod@divisor+4)^0,c
  4513  01087C  0E00               	movlw	0
  4514  01087E  6E17               	movwf	(___lomod@divisor+5)^0,c
  4515  010880  0E00               	movlw	0
  4516  010882  6E18               	movwf	(___lomod@divisor+6)^0,c
  4517  010884  0E00               	movlw	0
  4518  010886  6E19               	movwf	(___lomod@divisor+7)^0,c
  4519  010888  EC23  F088         	call	___lomod	;wreg free
  4520  01088C  C00A  F02F         	movff	?___lomod,??_utoa
  4521  010890  C00B  F030         	movff	?___lomod+1,??_utoa+1
  4522  010894  C00C  F031         	movff	?___lomod+2,??_utoa+2
  4523  010898  C00D  F032         	movff	?___lomod+3,??_utoa+3
  4524  01089C  C00E  F033         	movff	?___lomod+4,??_utoa+4
  4525  0108A0  C00F  F034         	movff	?___lomod+5,??_utoa+5
  4526  0108A4  C010  F035         	movff	?___lomod+6,??_utoa+6
  4527  0108A8  C011  F036         	movff	?___lomod+7,??_utoa+7
  4528  0108AC  502F               	movf	??_utoa^0,w,c
  4529  0108AE  0F30               	addlw	48
  4530  0108B0  6EDF               	movwf	indf2,c
  4531  0108B2                     
  4532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  4533  0108B2  0637               	decf	utoa@p^0,f,c
  4534  0108B4  A0D8               	btfss	status,0,c
  4535  0108B6  0638               	decf	(utoa@p+1)^0,f,c
  4536  0108B8                     
  4537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  4538  0108B8  0639               	decf	utoa@w^0,f,c
  4539  0108BA  A0D8               	btfss	status,0,c
  4540  0108BC  063A               	decf	(utoa@w+1)^0,f,c
  4541  0108BE                     
  4542                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4543  0108BE  C03B  F00A         	movff	utoa@n,___lodiv@dividend
  4544  0108C2  C03C  F00B         	movff	utoa@n+1,___lodiv@dividend+1
  4545  0108C6  C03D  F00C         	movff	utoa@n+2,___lodiv@dividend+2
  4546  0108CA  C03E  F00D         	movff	utoa@n+3,___lodiv@dividend+3
  4547  0108CE  C03F  F00E         	movff	utoa@n+4,___lodiv@dividend+4
  4548  0108D2  C040  F00F         	movff	utoa@n+5,___lodiv@dividend+5
  4549  0108D6  C041  F010         	movff	utoa@n+6,___lodiv@dividend+6
  4550  0108DA  C042  F011         	movff	utoa@n+7,___lodiv@dividend+7
  4551  0108DE  0E0A               	movlw	10
  4552  0108E0  6E12               	movwf	___lodiv@divisor^0,c
  4553  0108E2  0E00               	movlw	0
  4554  0108E4  6E13               	movwf	(___lodiv@divisor+1)^0,c
  4555  0108E6  0E00               	movlw	0
  4556  0108E8  6E14               	movwf	(___lodiv@divisor+2)^0,c
  4557  0108EA  0E00               	movlw	0
  4558  0108EC  6E15               	movwf	(___lodiv@divisor+3)^0,c
  4559  0108EE  0E00               	movlw	0
  4560  0108F0  6E16               	movwf	(___lodiv@divisor+4)^0,c
  4561  0108F2  0E00               	movlw	0
  4562  0108F4  6E17               	movwf	(___lodiv@divisor+5)^0,c
  4563  0108F6  0E00               	movlw	0
  4564  0108F8  6E18               	movwf	(___lodiv@divisor+6)^0,c
  4565  0108FA  0E00               	movlw	0
  4566  0108FC  6E19               	movwf	(___lodiv@divisor+7)^0,c
  4567  0108FE  ECAB  F087         	call	___lodiv	;wreg free
  4568  010902  C00A  F03B         	movff	?___lodiv,utoa@n
  4569  010906  C00B  F03C         	movff	?___lodiv+1,utoa@n+1
  4570  01090A  C00C  F03D         	movff	?___lodiv+2,utoa@n+2
  4571  01090E  C00D  F03E         	movff	?___lodiv+3,utoa@n+3
  4572  010912  C00E  F03F         	movff	?___lodiv+4,utoa@n+4
  4573  010916  C00F  F040         	movff	?___lodiv+5,utoa@n+5
  4574  01091A  C010  F041         	movff	?___lodiv+6,utoa@n+6
  4575  01091E  C011  F042         	movff	?___lodiv+7,utoa@n+7
  4576  010922                     l4233:
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4579  010922  5043               	movf	utoa@i^0,w,c
  4580  010924  1044               	iorwf	(utoa@i+1)^0,w,c
  4581  010926  B4D8               	btfsc	status,2,c
  4582  010928  EF98  F084         	goto	u3541
  4583  01092C  EF9A  F084         	goto	u3540
  4584  010930                     u3541:
  4585  010930  EFCA  F084         	goto	l4243
  4586  010934                     u3540:
  4587  010934  503B               	movf	utoa@n^0,w,c
  4588  010936  103C               	iorwf	(utoa@n+1)^0,w,c
  4589  010938  103D               	iorwf	(utoa@n+2)^0,w,c
  4590  01093A  103E               	iorwf	(utoa@n+3)^0,w,c
  4591  01093C  103F               	iorwf	(utoa@n+4)^0,w,c
  4592  01093E  1040               	iorwf	(utoa@n+5)^0,w,c
  4593  010940  1041               	iorwf	(utoa@n+6)^0,w,c
  4594  010942  1042               	iorwf	(utoa@n+7)^0,w,c
  4595  010944  A4D8               	btfss	status,2,c
  4596  010946  EFA7  F084         	goto	u3551
  4597  01094A  EFA9  F084         	goto	u3550
  4598  01094E                     u3551:
  4599  01094E  EF1B  F084         	goto	l4223
  4600  010952                     u3550:
  4601  010952  BE38               	btfsc	(utoa@p+1)^0,7,c
  4602  010954  EFB6  F084         	goto	u3560
  4603  010958  5038               	movf	(utoa@p+1)^0,w,c
  4604  01095A  E106               	bnz	u3561
  4605  01095C  0437               	decf	utoa@p^0,w,c
  4606  01095E  B0D8               	btfsc	status,0,c
  4607  010960  EFB4  F084         	goto	u3561
  4608  010964  EFB6  F084         	goto	u3560
  4609  010968                     u3561:
  4610  010968  EF1B  F084         	goto	l4223
  4611  01096C                     u3560:
  4612  01096C  BE3A               	btfsc	(utoa@w+1)^0,7,c
  4613  01096E  EFC1  F084         	goto	u3571
  4614  010972  503A               	movf	(utoa@w+1)^0,w,c
  4615  010974  E108               	bnz	u3570
  4616  010976  0439               	decf	utoa@w^0,w,c
  4617  010978  A0D8               	btfss	status,0,c
  4618  01097A  EFC1  F084         	goto	u3571
  4619  01097E  EFC3  F084         	goto	u3570
  4620  010982                     u3571:
  4621  010982  EFCA  F084         	goto	l4243
  4622  010986                     u3570:
  4623  010986  B24F               	btfsc	_flags^0,1,c
  4624  010988  EFC8  F084         	goto	u3581
  4625  01098C  EFCA  F084         	goto	u3580
  4626  010990                     u3581:
  4627  010990  EF1B  F084         	goto	l4223
  4628  010994                     u3580:
  4629  010994                     l4243:
  4630                           
  4631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4632  010994  C025  F01A         	movff	utoa@fp,pad@fp
  4633  010998  C026  F01B         	movff	utoa@fp+1,pad@fp+1
  4634  01099C  0E22               	movlw	low _dbuf
  4635  01099E  2443               	addwf	utoa@i^0,w,c
  4636  0109A0  6E1C               	movwf	pad@buf^0,c
  4637  0109A2  0E01               	movlw	high _dbuf
  4638  0109A4  2044               	addwfc	(utoa@i+1)^0,w,c
  4639  0109A6  6E1D               	movwf	(pad@buf+1)^0,c
  4640  0109A8  C039  F01E         	movff	utoa@w,pad@p
  4641  0109AC  C03A  F01F         	movff	utoa@w+1,pad@p+1
  4642  0109B0  ECF0  F088         	call	_pad	;wreg free
  4643  0109B4  C01A  F025         	movff	?_pad,?_utoa
  4644  0109B8  C01B  F026         	movff	?_pad+1,?_utoa+1
  4645  0109BC  0012               	return		;funcret
  4646  0109BE                     __end_of_utoa:
  4647                           	callstack 0
  4648                           
  4649 ;; *************** function ___lomod *****************
  4650 ;; Defined at:
  4651 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  dividend        8    9[COMRAM] unsigned long long 
  4654 ;;  divisor         8   17[COMRAM] unsigned long long 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  counter         1   25[COMRAM] unsigned char 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  8    9[COMRAM] unsigned long long 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4666 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;Total ram usage:       17 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 4
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_utoa
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text29
  4681  011046                     __ptext29:
  4682                           	callstack 0
  4683  011046                     ___lomod:
  4684                           	callstack 21
  4685  011046  5012               	movf	___lomod@divisor^0,w,c
  4686  011048  1013               	iorwf	(___lomod@divisor+1)^0,w,c
  4687  01104A  1014               	iorwf	(___lomod@divisor+2)^0,w,c
  4688  01104C  1015               	iorwf	(___lomod@divisor+3)^0,w,c
  4689  01104E  1016               	iorwf	(___lomod@divisor+4)^0,w,c
  4690  011050  1017               	iorwf	(___lomod@divisor+5)^0,w,c
  4691  011052  1018               	iorwf	(___lomod@divisor+6)^0,w,c
  4692  011054  1019               	iorwf	(___lomod@divisor+7)^0,w,c
  4693  011056  B4D8               	btfsc	status,2,c
  4694  011058  EF30  F088         	goto	u3291
  4695  01105C  EF32  F088         	goto	u3290
  4696  011060                     u3291:
  4697  011060  EF7A  F088         	goto	l1209
  4698  011064                     u3290:
  4699  011064  0E01               	movlw	1
  4700  011066  6E1A               	movwf	___lomod@counter^0,c
  4701  011068  EF40  F088         	goto	l4113
  4702  01106C                     l4111:
  4703  01106C  90D8               	bcf	status,0,c
  4704  01106E  3612               	rlcf	___lomod@divisor^0,f,c
  4705  011070  3613               	rlcf	(___lomod@divisor+1)^0,f,c
  4706  011072  3614               	rlcf	(___lomod@divisor+2)^0,f,c
  4707  011074  3615               	rlcf	(___lomod@divisor+3)^0,f,c
  4708  011076  3616               	rlcf	(___lomod@divisor+4)^0,f,c
  4709  011078  3617               	rlcf	(___lomod@divisor+5)^0,f,c
  4710  01107A  3618               	rlcf	(___lomod@divisor+6)^0,f,c
  4711  01107C  3619               	rlcf	(___lomod@divisor+7)^0,f,c
  4712  01107E  2A1A               	incf	___lomod@counter^0,f,c
  4713  011080                     l4113:
  4714  011080  AE19               	btfss	(___lomod@divisor+7)^0,7,c
  4715  011082  EF45  F088         	goto	u3301
  4716  011086  EF47  F088         	goto	u3300
  4717  01108A                     u3301:
  4718  01108A  EF36  F088         	goto	l4111
  4719  01108E                     u3300:
  4720  01108E                     l4115:
  4721  01108E  5012               	movf	___lomod@divisor^0,w,c
  4722  011090  5C0A               	subwf	___lomod@dividend^0,w,c
  4723  011092  5013               	movf	(___lomod@divisor+1)^0,w,c
  4724  011094  580B               	subwfb	(___lomod@dividend+1)^0,w,c
  4725  011096  5014               	movf	(___lomod@divisor+2)^0,w,c
  4726  011098  580C               	subwfb	(___lomod@dividend+2)^0,w,c
  4727  01109A  5015               	movf	(___lomod@divisor+3)^0,w,c
  4728  01109C  580D               	subwfb	(___lomod@dividend+3)^0,w,c
  4729  01109E  5016               	movf	(___lomod@divisor+4)^0,w,c
  4730  0110A0  580E               	subwfb	(___lomod@dividend+4)^0,w,c
  4731  0110A2  5017               	movf	(___lomod@divisor+5)^0,w,c
  4732  0110A4  580F               	subwfb	(___lomod@dividend+5)^0,w,c
  4733  0110A6  5018               	movf	(___lomod@divisor+6)^0,w,c
  4734  0110A8  5810               	subwfb	(___lomod@dividend+6)^0,w,c
  4735  0110AA  5019               	movf	(___lomod@divisor+7)^0,w,c
  4736  0110AC  5811               	subwfb	(___lomod@dividend+7)^0,w,c
  4737  0110AE  A0D8               	btfss	status,0,c
  4738  0110B0  EF5C  F088         	goto	u3311
  4739  0110B4  EF5E  F088         	goto	u3310
  4740  0110B8                     u3311:
  4741  0110B8  EF6E  F088         	goto	l4119
  4742  0110BC                     u3310:
  4743  0110BC  5012               	movf	___lomod@divisor^0,w,c
  4744  0110BE  5E0A               	subwf	___lomod@dividend^0,f,c
  4745  0110C0  5013               	movf	(___lomod@divisor+1)^0,w,c
  4746  0110C2  5A0B               	subwfb	(___lomod@dividend+1)^0,f,c
  4747  0110C4  5014               	movf	(___lomod@divisor+2)^0,w,c
  4748  0110C6  5A0C               	subwfb	(___lomod@dividend+2)^0,f,c
  4749  0110C8  5015               	movf	(___lomod@divisor+3)^0,w,c
  4750  0110CA  5A0D               	subwfb	(___lomod@dividend+3)^0,f,c
  4751  0110CC  5016               	movf	(___lomod@divisor+4)^0,w,c
  4752  0110CE  5A0E               	subwfb	(___lomod@dividend+4)^0,f,c
  4753  0110D0  5017               	movf	(___lomod@divisor+5)^0,w,c
  4754  0110D2  5A0F               	subwfb	(___lomod@dividend+5)^0,f,c
  4755  0110D4  5018               	movf	(___lomod@divisor+6)^0,w,c
  4756  0110D6  5A10               	subwfb	(___lomod@dividend+6)^0,f,c
  4757  0110D8  5019               	movf	(___lomod@divisor+7)^0,w,c
  4758  0110DA  5A11               	subwfb	(___lomod@dividend+7)^0,f,c
  4759  0110DC                     l4119:
  4760  0110DC  90D8               	bcf	status,0,c
  4761  0110DE  3219               	rrcf	(___lomod@divisor+7)^0,f,c
  4762  0110E0  3218               	rrcf	(___lomod@divisor+6)^0,f,c
  4763  0110E2  3217               	rrcf	(___lomod@divisor+5)^0,f,c
  4764  0110E4  3216               	rrcf	(___lomod@divisor+4)^0,f,c
  4765  0110E6  3215               	rrcf	(___lomod@divisor+3)^0,f,c
  4766  0110E8  3214               	rrcf	(___lomod@divisor+2)^0,f,c
  4767  0110EA  3213               	rrcf	(___lomod@divisor+1)^0,f,c
  4768  0110EC  3212               	rrcf	___lomod@divisor^0,f,c
  4769  0110EE  2E1A               	decfsz	___lomod@counter^0,f,c
  4770  0110F0  EF47  F088         	goto	l4115
  4771  0110F4                     l1209:
  4772  0110F4  C00A  F00A         	movff	___lomod@dividend,?___lomod
  4773  0110F8  C00B  F00B         	movff	___lomod@dividend+1,?___lomod+1
  4774  0110FC  C00C  F00C         	movff	___lomod@dividend+2,?___lomod+2
  4775  011100  C00D  F00D         	movff	___lomod@dividend+3,?___lomod+3
  4776  011104  C00E  F00E         	movff	___lomod@dividend+4,?___lomod+4
  4777  011108  C00F  F00F         	movff	___lomod@dividend+5,?___lomod+5
  4778  01110C  C010  F010         	movff	___lomod@dividend+6,?___lomod+6
  4779  011110  C011  F011         	movff	___lomod@dividend+7,?___lomod+7
  4780  011114  0012               	return		;funcret
  4781  011116                     __end_of___lomod:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function ___lodiv *****************
  4785 ;; Defined at:
  4786 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  dividend        8    9[COMRAM] unsigned long long 
  4789 ;;  divisor         8   17[COMRAM] unsigned long long 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  quotient        8   25[COMRAM] unsigned long long 
  4792 ;;  counter         1   33[COMRAM] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  8    9[COMRAM] unsigned long long 
  4795 ;; Registers used:
  4796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4802 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;Total ram usage:       25 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 4
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_utoa
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text30
  4817  010F56                     __ptext30:
  4818                           	callstack 0
  4819  010F56                     ___lodiv:
  4820                           	callstack 21
  4821  010F56  EE20  F01A         	lfsr	2,___lodiv@quotient
  4822  010F5A  0E07               	movlw	7
  4823  010F5C                     u3251:
  4824  010F5C  6ADE               	clrf	postinc2,c
  4825  010F5E  06E8               	decf	wreg,f,c
  4826  010F60  E2FD               	bc	u3251
  4827  010F62  5012               	movf	___lodiv@divisor^0,w,c
  4828  010F64  1013               	iorwf	(___lodiv@divisor+1)^0,w,c
  4829  010F66  1014               	iorwf	(___lodiv@divisor+2)^0,w,c
  4830  010F68  1015               	iorwf	(___lodiv@divisor+3)^0,w,c
  4831  010F6A  1016               	iorwf	(___lodiv@divisor+4)^0,w,c
  4832  010F6C  1017               	iorwf	(___lodiv@divisor+5)^0,w,c
  4833  010F6E  1018               	iorwf	(___lodiv@divisor+6)^0,w,c
  4834  010F70  1019               	iorwf	(___lodiv@divisor+7)^0,w,c
  4835  010F72  B4D8               	btfsc	status,2,c
  4836  010F74  EFBE  F087         	goto	u3261
  4837  010F78  EFC0  F087         	goto	u3260
  4838  010F7C                     u3261:
  4839  010F7C  EF12  F088         	goto	l1199
  4840  010F80                     u3260:
  4841  010F80  0E01               	movlw	1
  4842  010F82  6E22               	movwf	___lodiv@counter^0,c
  4843  010F84  EFCE  F087         	goto	l4093
  4844  010F88                     l4091:
  4845  010F88  90D8               	bcf	status,0,c
  4846  010F8A  3612               	rlcf	___lodiv@divisor^0,f,c
  4847  010F8C  3613               	rlcf	(___lodiv@divisor+1)^0,f,c
  4848  010F8E  3614               	rlcf	(___lodiv@divisor+2)^0,f,c
  4849  010F90  3615               	rlcf	(___lodiv@divisor+3)^0,f,c
  4850  010F92  3616               	rlcf	(___lodiv@divisor+4)^0,f,c
  4851  010F94  3617               	rlcf	(___lodiv@divisor+5)^0,f,c
  4852  010F96  3618               	rlcf	(___lodiv@divisor+6)^0,f,c
  4853  010F98  3619               	rlcf	(___lodiv@divisor+7)^0,f,c
  4854  010F9A  2A22               	incf	___lodiv@counter^0,f,c
  4855  010F9C                     l4093:
  4856  010F9C  AE19               	btfss	(___lodiv@divisor+7)^0,7,c
  4857  010F9E  EFD3  F087         	goto	u3271
  4858  010FA2  EFD5  F087         	goto	u3270
  4859  010FA6                     u3271:
  4860  010FA6  EFC4  F087         	goto	l4091
  4861  010FAA                     u3270:
  4862  010FAA                     l4095:
  4863  010FAA  90D8               	bcf	status,0,c
  4864  010FAC  361A               	rlcf	___lodiv@quotient^0,f,c
  4865  010FAE  361B               	rlcf	(___lodiv@quotient+1)^0,f,c
  4866  010FB0  361C               	rlcf	(___lodiv@quotient+2)^0,f,c
  4867  010FB2  361D               	rlcf	(___lodiv@quotient+3)^0,f,c
  4868  010FB4  361E               	rlcf	(___lodiv@quotient+4)^0,f,c
  4869  010FB6  361F               	rlcf	(___lodiv@quotient+5)^0,f,c
  4870  010FB8  3620               	rlcf	(___lodiv@quotient+6)^0,f,c
  4871  010FBA  3621               	rlcf	(___lodiv@quotient+7)^0,f,c
  4872  010FBC  5012               	movf	___lodiv@divisor^0,w,c
  4873  010FBE  5C0A               	subwf	___lodiv@dividend^0,w,c
  4874  010FC0  5013               	movf	(___lodiv@divisor+1)^0,w,c
  4875  010FC2  580B               	subwfb	(___lodiv@dividend+1)^0,w,c
  4876  010FC4  5014               	movf	(___lodiv@divisor+2)^0,w,c
  4877  010FC6  580C               	subwfb	(___lodiv@dividend+2)^0,w,c
  4878  010FC8  5015               	movf	(___lodiv@divisor+3)^0,w,c
  4879  010FCA  580D               	subwfb	(___lodiv@dividend+3)^0,w,c
  4880  010FCC  5016               	movf	(___lodiv@divisor+4)^0,w,c
  4881  010FCE  580E               	subwfb	(___lodiv@dividend+4)^0,w,c
  4882  010FD0  5017               	movf	(___lodiv@divisor+5)^0,w,c
  4883  010FD2  580F               	subwfb	(___lodiv@dividend+5)^0,w,c
  4884  010FD4  5018               	movf	(___lodiv@divisor+6)^0,w,c
  4885  010FD6  5810               	subwfb	(___lodiv@dividend+6)^0,w,c
  4886  010FD8  5019               	movf	(___lodiv@divisor+7)^0,w,c
  4887  010FDA  5811               	subwfb	(___lodiv@dividend+7)^0,w,c
  4888  010FDC  A0D8               	btfss	status,0,c
  4889  010FDE  EFF3  F087         	goto	u3281
  4890  010FE2  EFF5  F087         	goto	u3280
  4891  010FE6                     u3281:
  4892  010FE6  EF06  F088         	goto	l4103
  4893  010FEA                     u3280:
  4894  010FEA  5012               	movf	___lodiv@divisor^0,w,c
  4895  010FEC  5E0A               	subwf	___lodiv@dividend^0,f,c
  4896  010FEE  5013               	movf	(___lodiv@divisor+1)^0,w,c
  4897  010FF0  5A0B               	subwfb	(___lodiv@dividend+1)^0,f,c
  4898  010FF2  5014               	movf	(___lodiv@divisor+2)^0,w,c
  4899  010FF4  5A0C               	subwfb	(___lodiv@dividend+2)^0,f,c
  4900  010FF6  5015               	movf	(___lodiv@divisor+3)^0,w,c
  4901  010FF8  5A0D               	subwfb	(___lodiv@dividend+3)^0,f,c
  4902  010FFA  5016               	movf	(___lodiv@divisor+4)^0,w,c
  4903  010FFC  5A0E               	subwfb	(___lodiv@dividend+4)^0,f,c
  4904  010FFE  5017               	movf	(___lodiv@divisor+5)^0,w,c
  4905  011000  5A0F               	subwfb	(___lodiv@dividend+5)^0,f,c
  4906  011002  5018               	movf	(___lodiv@divisor+6)^0,w,c
  4907  011004  5A10               	subwfb	(___lodiv@dividend+6)^0,f,c
  4908  011006  5019               	movf	(___lodiv@divisor+7)^0,w,c
  4909  011008  5A11               	subwfb	(___lodiv@dividend+7)^0,f,c
  4910  01100A  801A               	bsf	___lodiv@quotient^0,0,c
  4911  01100C                     l4103:
  4912  01100C  90D8               	bcf	status,0,c
  4913  01100E  3219               	rrcf	(___lodiv@divisor+7)^0,f,c
  4914  011010  3218               	rrcf	(___lodiv@divisor+6)^0,f,c
  4915  011012  3217               	rrcf	(___lodiv@divisor+5)^0,f,c
  4916  011014  3216               	rrcf	(___lodiv@divisor+4)^0,f,c
  4917  011016  3215               	rrcf	(___lodiv@divisor+3)^0,f,c
  4918  011018  3214               	rrcf	(___lodiv@divisor+2)^0,f,c
  4919  01101A  3213               	rrcf	(___lodiv@divisor+1)^0,f,c
  4920  01101C  3212               	rrcf	___lodiv@divisor^0,f,c
  4921  01101E  2E22               	decfsz	___lodiv@counter^0,f,c
  4922  011020  EFD5  F087         	goto	l4095
  4923  011024                     l1199:
  4924  011024  C01A  F00A         	movff	___lodiv@quotient,?___lodiv
  4925  011028  C01B  F00B         	movff	___lodiv@quotient+1,?___lodiv+1
  4926  01102C  C01C  F00C         	movff	___lodiv@quotient+2,?___lodiv+2
  4927  011030  C01D  F00D         	movff	___lodiv@quotient+3,?___lodiv+3
  4928  011034  C01E  F00E         	movff	___lodiv@quotient+4,?___lodiv+4
  4929  011038  C01F  F00F         	movff	___lodiv@quotient+5,?___lodiv+5
  4930  01103C  C020  F010         	movff	___lodiv@quotient+6,?___lodiv+6
  4931  011040  C021  F011         	movff	___lodiv@quotient+7,?___lodiv+7
  4932  011044  0012               	return		;funcret
  4933  011046                     __end_of___lodiv:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _dtoa *****************
  4937 ;; Defined at:
  4938 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  4941 ;;		 -> sprintf@f(11), 
  4942 ;;  d               8   38[COMRAM] long long 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  n               8   62[COMRAM] long long 
  4945 ;;  i               2   70[COMRAM] int 
  4946 ;;  s               2   60[COMRAM] int 
  4947 ;;  w               2   58[COMRAM] int 
  4948 ;;  p               2   56[COMRAM] int 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  2   36[COMRAM] int 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4958 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;Total ram usage:       36 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 8
  4965 ;; This function calls:
  4966 ;;		___aodiv
  4967 ;;		___aomod
  4968 ;;		_abs
  4969 ;;		_pad
  4970 ;; This function is called by:
  4971 ;;		_vfpfcnvrt
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text31
  4976  010000                     __ptext31:
  4977                           	callstack 0
  4978  010000                     _dtoa:
  4979                           	callstack 18
  4980  010000                     
  4981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4982  010000  C027  F03F         	movff	dtoa@d,dtoa@n
  4983  010004  C028  F040         	movff	dtoa@d+1,dtoa@n+1
  4984  010008  C029  F041         	movff	dtoa@d+2,dtoa@n+2
  4985  01000C  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
  4986  010010  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
  4987  010014  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
  4988  010018  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
  4989  01001C  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
  4990  010020                     
  4991                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4992  010020  BE46               	btfsc	(dtoa@n+7)^0,7,c
  4993  010022  EF15  F080         	goto	u3371
  4994  010026  EF18  F080         	goto	u3370
  4995  01002A                     u3371:
  4996  01002A  0E01               	movlw	1
  4997  01002C  EF19  F080         	goto	u3380
  4998  010030                     u3370:
  4999  010030  0E00               	movlw	0
  5000  010032                     u3380:
  5001  010032  6E3D               	movwf	dtoa@s^0,c
  5002  010034  6A3E               	clrf	(dtoa@s+1)^0,c
  5003                           
  5004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5005  010036  503D               	movf	dtoa@s^0,w,c
  5006  010038  103E               	iorwf	(dtoa@s+1)^0,w,c
  5007  01003A  B4D8               	btfsc	status,2,c
  5008  01003C  EF22  F080         	goto	u3391
  5009  010040  EF24  F080         	goto	u3390
  5010  010044                     u3391:
  5011  010044  EF34  F080         	goto	l4155
  5012  010048                     u3390:
  5013  010048                     
  5014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5015  010048  1E46               	comf	(dtoa@n+7)^0,f,c
  5016  01004A  1E45               	comf	(dtoa@n+6)^0,f,c
  5017  01004C  1E44               	comf	(dtoa@n+5)^0,f,c
  5018  01004E  1E43               	comf	(dtoa@n+4)^0,f,c
  5019  010050  1E42               	comf	(dtoa@n+3)^0,f,c
  5020  010052  1E41               	comf	(dtoa@n+2)^0,f,c
  5021  010054  1E40               	comf	(dtoa@n+1)^0,f,c
  5022  010056  6C3F               	negf	dtoa@n^0,c
  5023  010058  0E00               	movlw	0
  5024  01005A  2240               	addwfc	(dtoa@n+1)^0,f,c
  5025  01005C  2241               	addwfc	(dtoa@n+2)^0,f,c
  5026  01005E  2242               	addwfc	(dtoa@n+3)^0,f,c
  5027  010060  2243               	addwfc	(dtoa@n+4)^0,f,c
  5028  010062  2244               	addwfc	(dtoa@n+5)^0,f,c
  5029  010064  2245               	addwfc	(dtoa@n+6)^0,f,c
  5030  010066  2246               	addwfc	(dtoa@n+7)^0,f,c
  5031  010068                     l4155:
  5032                           
  5033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5034  010068  BE4E               	btfsc	(_prec+1)^0,7,c
  5035  01006A  EF39  F080         	goto	u3401
  5036  01006E  EF3B  F080         	goto	u3400
  5037  010072                     u3401:
  5038  010072  EF3C  F080         	goto	l4159
  5039  010076                     u3400:
  5040  010076                     
  5041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5042  010076  924F               	bcf	_flags^0,1,c
  5043  010078                     l4159:
  5044                           
  5045                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5046  010078  BE4E               	btfsc	(_prec+1)^0,7,c
  5047  01007A  EF49  F080         	goto	u3410
  5048  01007E  504E               	movf	(_prec+1)^0,w,c
  5049  010080  E106               	bnz	u3411
  5050  010082  044D               	decf	_prec^0,w,c
  5051  010084  B0D8               	btfsc	status,0,c
  5052  010086  EF47  F080         	goto	u3411
  5053  01008A  EF49  F080         	goto	u3410
  5054  01008E                     u3411:
  5055  01008E  EF4F  F080         	goto	l1477
  5056  010092                     u3410:
  5057  010092  0E00               	movlw	0
  5058  010094  6E3A               	movwf	(dtoa@p+1)^0,c
  5059  010096  0E01               	movlw	1
  5060  010098  6E39               	movwf	dtoa@p^0,c
  5061  01009A  EF53  F080         	goto	l1479
  5062  01009E                     l1477:
  5063  01009E  C04D  F039         	movff	_prec,dtoa@p
  5064  0100A2  C04E  F03A         	movff	_prec+1,dtoa@p+1
  5065  0100A6                     l1479:
  5066                           
  5067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5068  0100A6  C11A  F03B         	movff	_width,dtoa@w
  5069  0100AA  C11B  F03C         	movff	_width+1,dtoa@w+1
  5070  0100AE                     
  5071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5072  0100AE  503D               	movf	dtoa@s^0,w,c
  5073  0100B0  103E               	iorwf	(dtoa@s+1)^0,w,c
  5074  0100B2  A4D8               	btfss	status,2,c
  5075  0100B4  EF5E  F080         	goto	u3421
  5076  0100B8  EF60  F080         	goto	u3420
  5077  0100BC                     u3421:
  5078  0100BC  EF67  F080         	goto	l4167
  5079  0100C0                     u3420:
  5080  0100C0  A44F               	btfss	_flags^0,2,c
  5081  0100C2  EF65  F080         	goto	u3431
  5082  0100C6  EF67  F080         	goto	u3430
  5083  0100CA                     u3431:
  5084  0100CA  EF6A  F080         	goto	l4169
  5085  0100CE                     u3430:
  5086  0100CE                     l4167:
  5087                           
  5088                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  5089  0100CE  063B               	decf	dtoa@w^0,f,c
  5090  0100D0  A0D8               	btfss	status,0,c
  5091  0100D2  063C               	decf	(dtoa@w+1)^0,f,c
  5092  0100D4                     l4169:
  5093                           
  5094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5095  0100D4  0E00               	movlw	0
  5096  0100D6  6E48               	movwf	(dtoa@i+1)^0,c
  5097  0100D8  0E1F               	movlw	31
  5098  0100DA  6E47               	movwf	dtoa@i^0,c
  5099  0100DC                     
  5100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5101  0100DC  0E00               	movlw	0
  5102  0100DE  0101               	movlb	1	; () banked
  5103  0100E0  6F41               	movwf	(_dbuf+31)& (0+255),b
  5104                           
  5105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5106  0100E2  EFEF  F080         	goto	l4183
  5107  0100E6                     l4173:
  5108                           
  5109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  5110  0100E6  0647               	decf	dtoa@i^0,f,c
  5111  0100E8  A0D8               	btfss	status,0,c
  5112  0100EA  0648               	decf	(dtoa@i+1)^0,f,c
  5113  0100EC                     
  5114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5115  0100EC  0E22               	movlw	low _dbuf
  5116  0100EE  2447               	addwf	dtoa@i^0,w,c
  5117  0100F0  6ED9               	movwf	fsr2l,c
  5118  0100F2  0E01               	movlw	high _dbuf
  5119  0100F4  2048               	addwfc	(dtoa@i+1)^0,w,c
  5120  0100F6  6EDA               	movwf	fsr2h,c
  5121  0100F8  C03F  F00A         	movff	dtoa@n,___aomod@dividend
  5122  0100FC  C040  F00B         	movff	dtoa@n+1,___aomod@dividend+1
  5123  010100  C041  F00C         	movff	dtoa@n+2,___aomod@dividend+2
  5124  010104  C042  F00D         	movff	dtoa@n+3,___aomod@dividend+3
  5125  010108  C043  F00E         	movff	dtoa@n+4,___aomod@dividend+4
  5126  01010C  C044  F00F         	movff	dtoa@n+5,___aomod@dividend+5
  5127  010110  C045  F010         	movff	dtoa@n+6,___aomod@dividend+6
  5128  010114  C046  F011         	movff	dtoa@n+7,___aomod@dividend+7
  5129  010118  0E0A               	movlw	10
  5130  01011A  6E12               	movwf	___aomod@divisor^0,c
  5131  01011C  0E00               	movlw	0
  5132  01011E  6E13               	movwf	(___aomod@divisor+1)^0,c
  5133  010120  0E00               	movlw	0
  5134  010122  6E14               	movwf	(___aomod@divisor+2)^0,c
  5135  010124  0E00               	movlw	0
  5136  010126  6E15               	movwf	(___aomod@divisor+3)^0,c
  5137  010128  0E00               	movlw	0
  5138  01012A  6E16               	movwf	(___aomod@divisor+4)^0,c
  5139  01012C  0E00               	movlw	0
  5140  01012E  6E17               	movwf	(___aomod@divisor+5)^0,c
  5141  010130  0E00               	movlw	0
  5142  010132  6E18               	movwf	(___aomod@divisor+6)^0,c
  5143  010134  0E00               	movlw	0
  5144  010136  6E19               	movwf	(___aomod@divisor+7)^0,c
  5145  010138  EC76  F086         	call	___aomod	;wreg free
  5146  01013C  C00A  F02F         	movff	?___aomod,??_dtoa
  5147  010140  C00B  F030         	movff	?___aomod+1,??_dtoa+1
  5148  010144  C00C  F031         	movff	?___aomod+2,??_dtoa+2
  5149  010148  C00D  F032         	movff	?___aomod+3,??_dtoa+3
  5150  01014C  C00E  F033         	movff	?___aomod+4,??_dtoa+4
  5151  010150  C00F  F034         	movff	?___aomod+5,??_dtoa+5
  5152  010154  C010  F035         	movff	?___aomod+6,??_dtoa+6
  5153  010158  C011  F036         	movff	?___aomod+7,??_dtoa+7
  5154  01015C  C02F  F01C         	movff	??_dtoa,abs@a
  5155  010160  C031  F01D         	movff	??_dtoa+2,abs@a+1
  5156  010164  EC3A  F08C         	call	_abs	;wreg free
  5157  010168  501C               	movf	?_abs^0,w,c
  5158  01016A  0F30               	addlw	48
  5159  01016C  6EDF               	movwf	indf2,c
  5160  01016E                     
  5161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  5162  01016E  0639               	decf	dtoa@p^0,f,c
  5163  010170  A0D8               	btfss	status,0,c
  5164  010172  063A               	decf	(dtoa@p+1)^0,f,c
  5165  010174                     
  5166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  5167  010174  063B               	decf	dtoa@w^0,f,c
  5168  010176  A0D8               	btfss	status,0,c
  5169  010178  063C               	decf	(dtoa@w+1)^0,f,c
  5170  01017A                     
  5171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5172  01017A  C03F  F00A         	movff	dtoa@n,___aodiv@dividend
  5173  01017E  C040  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
  5174  010182  C041  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
  5175  010186  C042  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
  5176  01018A  C043  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
  5177  01018E  C044  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
  5178  010192  C045  F010         	movff	dtoa@n+6,___aodiv@dividend+6
  5179  010196  C046  F011         	movff	dtoa@n+7,___aodiv@dividend+7
  5180  01019A  0E0A               	movlw	10
  5181  01019C  6E12               	movwf	___aodiv@divisor^0,c
  5182  01019E  0E00               	movlw	0
  5183  0101A0  6E13               	movwf	(___aodiv@divisor+1)^0,c
  5184  0101A2  0E00               	movlw	0
  5185  0101A4  6E14               	movwf	(___aodiv@divisor+2)^0,c
  5186  0101A6  0E00               	movlw	0
  5187  0101A8  6E15               	movwf	(___aodiv@divisor+3)^0,c
  5188  0101AA  0E00               	movlw	0
  5189  0101AC  6E16               	movwf	(___aodiv@divisor+4)^0,c
  5190  0101AE  0E00               	movlw	0
  5191  0101B0  6E17               	movwf	(___aodiv@divisor+5)^0,c
  5192  0101B2  0E00               	movlw	0
  5193  0101B4  6E18               	movwf	(___aodiv@divisor+6)^0,c
  5194  0101B6  0E00               	movlw	0
  5195  0101B8  6E19               	movwf	(___aodiv@divisor+7)^0,c
  5196  0101BA  ECB2  F085         	call	___aodiv	;wreg free
  5197  0101BE  C00A  F03F         	movff	?___aodiv,dtoa@n
  5198  0101C2  C00B  F040         	movff	?___aodiv+1,dtoa@n+1
  5199  0101C6  C00C  F041         	movff	?___aodiv+2,dtoa@n+2
  5200  0101CA  C00D  F042         	movff	?___aodiv+3,dtoa@n+3
  5201  0101CE  C00E  F043         	movff	?___aodiv+4,dtoa@n+4
  5202  0101D2  C00F  F044         	movff	?___aodiv+5,dtoa@n+5
  5203  0101D6  C010  F045         	movff	?___aodiv+6,dtoa@n+6
  5204  0101DA  C011  F046         	movff	?___aodiv+7,dtoa@n+7
  5205  0101DE                     l4183:
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5208  0101DE  BE48               	btfsc	(dtoa@i+1)^0,7,c
  5209  0101E0  EFFA  F080         	goto	u3441
  5210  0101E4  5048               	movf	(dtoa@i+1)^0,w,c
  5211  0101E6  E108               	bnz	u3440
  5212  0101E8  0447               	decf	dtoa@i^0,w,c
  5213  0101EA  A0D8               	btfss	status,0,c
  5214  0101EC  EFFA  F080         	goto	u3441
  5215  0101F0  EFFC  F080         	goto	u3440
  5216  0101F4                     u3441:
  5217  0101F4  EF2C  F081         	goto	l4193
  5218  0101F8                     u3440:
  5219  0101F8  503F               	movf	dtoa@n^0,w,c
  5220  0101FA  1040               	iorwf	(dtoa@n+1)^0,w,c
  5221  0101FC  1041               	iorwf	(dtoa@n+2)^0,w,c
  5222  0101FE  1042               	iorwf	(dtoa@n+3)^0,w,c
  5223  010200  1043               	iorwf	(dtoa@n+4)^0,w,c
  5224  010202  1044               	iorwf	(dtoa@n+5)^0,w,c
  5225  010204  1045               	iorwf	(dtoa@n+6)^0,w,c
  5226  010206  1046               	iorwf	(dtoa@n+7)^0,w,c
  5227  010208  A4D8               	btfss	status,2,c
  5228  01020A  EF09  F081         	goto	u3451
  5229  01020E  EF0B  F081         	goto	u3450
  5230  010212                     u3451:
  5231  010212  EF73  F080         	goto	l4173
  5232  010216                     u3450:
  5233  010216  BE3A               	btfsc	(dtoa@p+1)^0,7,c
  5234  010218  EF18  F081         	goto	u3460
  5235  01021C  503A               	movf	(dtoa@p+1)^0,w,c
  5236  01021E  E106               	bnz	u3461
  5237  010220  0439               	decf	dtoa@p^0,w,c
  5238  010222  B0D8               	btfsc	status,0,c
  5239  010224  EF16  F081         	goto	u3461
  5240  010228  EF18  F081         	goto	u3460
  5241  01022C                     u3461:
  5242  01022C  EF73  F080         	goto	l4173
  5243  010230                     u3460:
  5244  010230  BE3C               	btfsc	(dtoa@w+1)^0,7,c
  5245  010232  EF23  F081         	goto	u3471
  5246  010236  503C               	movf	(dtoa@w+1)^0,w,c
  5247  010238  E108               	bnz	u3470
  5248  01023A  043B               	decf	dtoa@w^0,w,c
  5249  01023C  A0D8               	btfss	status,0,c
  5250  01023E  EF23  F081         	goto	u3471
  5251  010242  EF25  F081         	goto	u3470
  5252  010246                     u3471:
  5253  010246  EF2C  F081         	goto	l4193
  5254  01024A                     u3470:
  5255  01024A  B24F               	btfsc	_flags^0,1,c
  5256  01024C  EF2A  F081         	goto	u3481
  5257  010250  EF2C  F081         	goto	u3480
  5258  010254                     u3481:
  5259  010254  EF73  F080         	goto	l4173
  5260  010258                     u3480:
  5261  010258                     l4193:
  5262                           
  5263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5264  010258  503D               	movf	dtoa@s^0,w,c
  5265  01025A  103E               	iorwf	(dtoa@s+1)^0,w,c
  5266  01025C  A4D8               	btfss	status,2,c
  5267  01025E  EF33  F081         	goto	u3491
  5268  010262  EF35  F081         	goto	u3490
  5269  010266                     u3491:
  5270  010266  EF3C  F081         	goto	l4197
  5271  01026A                     u3490:
  5272  01026A  A44F               	btfss	_flags^0,2,c
  5273  01026C  EF3A  F081         	goto	u3501
  5274  010270  EF3C  F081         	goto	u3500
  5275  010274                     u3501:
  5276  010274  EF5A  F081         	goto	l4207
  5277  010278                     u3500:
  5278  010278                     l4197:
  5279                           
  5280                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  5281  010278  0647               	decf	dtoa@i^0,f,c
  5282  01027A  A0D8               	btfss	status,0,c
  5283  01027C  0648               	decf	(dtoa@i+1)^0,f,c
  5284  01027E                     
  5285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5286  01027E  503D               	movf	dtoa@s^0,w,c
  5287  010280  103E               	iorwf	(dtoa@s+1)^0,w,c
  5288  010282  A4D8               	btfss	status,2,c
  5289  010284  EF46  F081         	goto	u3511
  5290  010288  EF48  F081         	goto	u3510
  5291  01028C                     u3511:
  5292  01028C  EF4E  F081         	goto	l4203
  5293  010290                     u3510:
  5294  010290  0E00               	movlw	0
  5295  010292  6E38               	movwf	(_dtoa$1694+1)^0,c
  5296  010294  0E2B               	movlw	43
  5297  010296  6E37               	movwf	_dtoa$1694^0,c
  5298  010298  EF52  F081         	goto	l4205
  5299  01029C                     l4203:
  5300  01029C  0E00               	movlw	0
  5301  01029E  6E38               	movwf	(_dtoa$1694+1)^0,c
  5302  0102A0  0E2D               	movlw	45
  5303  0102A2  6E37               	movwf	_dtoa$1694^0,c
  5304  0102A4                     l4205:
  5305  0102A4  0E22               	movlw	low _dbuf
  5306  0102A6  2447               	addwf	dtoa@i^0,w,c
  5307  0102A8  6ED9               	movwf	fsr2l,c
  5308  0102AA  0E01               	movlw	high _dbuf
  5309  0102AC  2048               	addwfc	(dtoa@i+1)^0,w,c
  5310  0102AE  6EDA               	movwf	fsr2h,c
  5311  0102B0  C037  FFDF         	movff	_dtoa$1694,indf2
  5312  0102B4                     l4207:
  5313                           
  5314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5315  0102B4  C025  F01A         	movff	dtoa@fp,pad@fp
  5316  0102B8  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
  5317  0102BC  0E22               	movlw	low _dbuf
  5318  0102BE  2447               	addwf	dtoa@i^0,w,c
  5319  0102C0  6E1C               	movwf	pad@buf^0,c
  5320  0102C2  0E01               	movlw	high _dbuf
  5321  0102C4  2048               	addwfc	(dtoa@i+1)^0,w,c
  5322  0102C6  6E1D               	movwf	(pad@buf+1)^0,c
  5323  0102C8  C03B  F01E         	movff	dtoa@w,pad@p
  5324  0102CC  C03C  F01F         	movff	dtoa@w+1,pad@p+1
  5325  0102D0  ECF0  F088         	call	_pad	;wreg free
  5326  0102D4  C01A  F025         	movff	?_pad,?_dtoa
  5327  0102D8  C01B  F026         	movff	?_pad+1,?_dtoa+1
  5328  0102DC  0012               	return		;funcret
  5329  0102DE                     __end_of_dtoa:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _pad *****************
  5333 ;; Defined at:
  5334 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  5337 ;;		 -> sprintf@f(11), 
  5338 ;;  buf             2   27[COMRAM] PTR unsigned char 
  5339 ;;		 -> dbuf(32), 
  5340 ;;  p               2   29[COMRAM] int 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  w               2   34[COMRAM] int 
  5343 ;;  i               2   32[COMRAM] int 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  2   25[COMRAM] int 
  5346 ;; Registers used:
  5347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5353 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5356 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;Total ram usage:       11 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 7
  5360 ;; This function calls:
  5361 ;;		_fputc
  5362 ;;		_fputs
  5363 ;;		_strlen
  5364 ;; This function is called by:
  5365 ;;		_dtoa
  5366 ;;		_utoa
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text32
  5371  0111E0                     __ptext32:
  5372                           	callstack 0
  5373  0111E0                     _pad:
  5374                           	callstack 18
  5375  0111E0                     
  5376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5377  0111E0  A04F               	btfss	_flags^0,0,c
  5378  0111E2  EFF5  F088         	goto	u3321
  5379  0111E6  EFF7  F088         	goto	u3320
  5380  0111EA                     u3321:
  5381  0111EA  EF01  F089         	goto	l4127
  5382  0111EE                     u3320:
  5383  0111EE                     
  5384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5385  0111EE  C01C  F013         	movff	pad@buf,fputs@s
  5386  0111F2  C01D  F014         	movff	pad@buf+1,fputs@s+1
  5387  0111F6  C01A  F015         	movff	pad@fp,fputs@fp
  5388  0111FA  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  5389  0111FE  EC18  F08C         	call	_fputs	;wreg free
  5390  011202                     l4127:
  5391                           
  5392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5393  011202  BE1F               	btfsc	(pad@p+1)^0,7,c
  5394  011204  EF06  F089         	goto	u3331
  5395  011208  EF08  F089         	goto	u3330
  5396  01120C                     u3331:
  5397  01120C  EF0E  F089         	goto	l4131
  5398  011210                     u3330:
  5399  011210  C01E  F023         	movff	pad@p,pad@w
  5400  011214  C01F  F024         	movff	pad@p+1,pad@w+1
  5401  011218  EF12  F089         	goto	l1466
  5402  01121C                     l4131:
  5403  01121C  0E00               	movlw	0
  5404  01121E  6E24               	movwf	(pad@w+1)^0,c
  5405  011220  0E00               	movlw	0
  5406  011222  6E23               	movwf	pad@w^0,c
  5407  011224                     l1466:
  5408                           
  5409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5410  011224  0E00               	movlw	0
  5411  011226  6E22               	movwf	(pad@i+1)^0,c
  5412  011228  0E00               	movlw	0
  5413  01122A  6E21               	movwf	pad@i^0,c
  5414                           
  5415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5416  01122C  EF24  F089         	goto	l4137
  5417  011230                     l4133:
  5418                           
  5419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5420  011230  0E00               	movlw	0
  5421  011232  6E0B               	movwf	(fputc@c+1)^0,c
  5422  011234  0E20               	movlw	32
  5423  011236  6E0A               	movwf	fputc@c^0,c
  5424  011238  C01A  F00C         	movff	pad@fp,fputc@fp
  5425  01123C  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  5426  011240  EC8B  F088         	call	_fputc	;wreg free
  5427  011244                     
  5428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5429  011244  4A21               	infsnz	pad@i^0,f,c
  5430  011246  2A22               	incf	(pad@i+1)^0,f,c
  5431  011248                     l4137:
  5432                           
  5433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5434  011248  5023               	movf	pad@w^0,w,c
  5435  01124A  5C21               	subwf	pad@i^0,w,c
  5436  01124C  5022               	movf	(pad@i+1)^0,w,c
  5437  01124E  0A80               	xorlw	128
  5438  011250  6E20               	movwf	??_pad^0,c
  5439  011252  5024               	movf	(pad@w+1)^0,w,c
  5440  011254  0A80               	xorlw	128
  5441  011256  5820               	subwfb	??_pad^0,w,c
  5442  011258  A0D8               	btfss	status,0,c
  5443  01125A  EF31  F089         	goto	u3341
  5444  01125E  EF33  F089         	goto	u3340
  5445  011262                     u3341:
  5446  011262  EF18  F089         	goto	l4133
  5447  011266                     u3340:
  5448  011266                     
  5449                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5450  011266  B04F               	btfsc	_flags^0,0,c
  5451  011268  EF38  F089         	goto	u3351
  5452  01126C  EF3A  F089         	goto	u3350
  5453  011270                     u3351:
  5454  011270  EF44  F089         	goto	l4141
  5455  011274                     u3350:
  5456  011274                     
  5457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5458  011274  C01C  F013         	movff	pad@buf,fputs@s
  5459  011278  C01D  F014         	movff	pad@buf+1,fputs@s+1
  5460  01127C  C01A  F015         	movff	pad@fp,fputs@fp
  5461  011280  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  5462  011284  EC18  F08C         	call	_fputs	;wreg free
  5463  011288                     l4141:
  5464                           
  5465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5466  011288  C01C  F00A         	movff	pad@buf,strlen@s
  5467  01128C  C01D  F00B         	movff	pad@buf+1,strlen@s+1
  5468  011290  EC78  F08C         	call	_strlen	;wreg free
  5469  011294  5023               	movf	pad@w^0,w,c
  5470  011296  240A               	addwf	?_strlen^0,w,c
  5471  011298  6E1A               	movwf	?_pad^0,c
  5472  01129A  5024               	movf	(pad@w+1)^0,w,c
  5473  01129C  200B               	addwfc	(?_strlen+1)^0,w,c
  5474  01129E  6E1B               	movwf	(?_pad+1)^0,c
  5475  0112A0  0012               	return		;funcret
  5476  0112A2                     __end_of_pad:
  5477                           	callstack 0
  5478                           
  5479 ;; *************** function _strlen *****************
  5480 ;; Defined at:
  5481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5484 ;;		 -> dbuf(32), rmove@move_buf(40), rmove@speed_buf(40), 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  a               2   11[COMRAM] PTR const unsigned char 
  5487 ;;		 -> dbuf(32), rmove@move_buf(40), rmove@speed_buf(40), 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  2    9[COMRAM] unsigned int 
  5490 ;; Registers used:
  5491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;Total ram usage:        4 bytes
  5502 ;; Hardware stack levels used: 1
  5503 ;; Hardware stack levels required when called: 4
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_rmove
  5508 ;;		_pad
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text33
  5513  0118F0                     __ptext33:
  5514                           	callstack 0
  5515  0118F0                     _strlen:
  5516                           	callstack 20
  5517  0118F0  C00A  F00C         	movff	strlen@s,strlen@a
  5518  0118F4  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  5519  0118F8  EF80  F08C         	goto	l3991
  5520  0118FC                     l3989:
  5521  0118FC  4A0A               	infsnz	strlen@s^0,f,c
  5522  0118FE  2A0B               	incf	(strlen@s+1)^0,f,c
  5523  011900                     l3991:
  5524  011900  C00A  FFD9         	movff	strlen@s,fsr2l
  5525  011904  C00B  FFDA         	movff	strlen@s+1,fsr2h
  5526  011908  50DF               	movf	indf2,w,c
  5527  01190A  A4D8               	btfss	status,2,c
  5528  01190C  EF8A  F08C         	goto	u3101
  5529  011910  EF8C  F08C         	goto	u3100
  5530  011914                     u3101:
  5531  011914  EF7E  F08C         	goto	l3989
  5532  011918                     u3100:
  5533  011918  500C               	movf	strlen@a^0,w,c
  5534  01191A  5C0A               	subwf	strlen@s^0,w,c
  5535  01191C  6E0A               	movwf	?_strlen^0,c
  5536  01191E  500D               	movf	(strlen@a+1)^0,w,c
  5537  011920  580B               	subwfb	(strlen@s+1)^0,w,c
  5538  011922  6E0B               	movwf	(?_strlen+1)^0,c
  5539  011924  0012               	return		;funcret
  5540  011926                     __end_of_strlen:
  5541                           	callstack 0
  5542                           
  5543 ;; *************** function _fputs *****************
  5544 ;; Defined at:
  5545 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  s               2   18[COMRAM] PTR const unsigned char 
  5548 ;;		 -> dbuf(32), 
  5549 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5550 ;;		 -> sprintf@f(11), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  i               2   23[COMRAM] int 
  5553 ;;  c               1   22[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  2   18[COMRAM] int 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5564 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;Total ram usage:        7 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 6
  5570 ;; This function calls:
  5571 ;;		_fputc
  5572 ;; This function is called by:
  5573 ;;		_pad
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text34
  5578  011830                     __ptext34:
  5579                           	callstack 0
  5580  011830                     _fputs:
  5581                           	callstack 18
  5582  011830  0E00               	movlw	0
  5583  011832  6E19               	movwf	(fputs@i+1)^0,c
  5584  011834  0E00               	movlw	0
  5585  011836  6E18               	movwf	fputs@i^0,c
  5586  011838  EF29  F08C         	goto	l4003
  5587  01183C                     l3999:
  5588  01183C  C017  F00A         	movff	fputs@c,fputc@c
  5589  011840  6A0B               	clrf	(fputc@c+1)^0,c
  5590  011842  C015  F00C         	movff	fputs@fp,fputc@fp
  5591  011846  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  5592  01184A  EC8B  F088         	call	_fputc	;wreg free
  5593  01184E  4A18               	infsnz	fputs@i^0,f,c
  5594  011850  2A19               	incf	(fputs@i+1)^0,f,c
  5595  011852                     l4003:
  5596  011852  5018               	movf	fputs@i^0,w,c
  5597  011854  2413               	addwf	fputs@s^0,w,c
  5598  011856  6ED9               	movwf	fsr2l,c
  5599  011858  5019               	movf	(fputs@i+1)^0,w,c
  5600  01185A  2014               	addwfc	(fputs@s+1)^0,w,c
  5601  01185C  6EDA               	movwf	fsr2h,c
  5602  01185E  50DF               	movf	indf2,w,c
  5603  011860  6E17               	movwf	fputs@c^0,c
  5604  011862  5017               	movf	fputs@c^0,w,c
  5605  011864  A4D8               	btfss	status,2,c
  5606  011866  EF37  F08C         	goto	u3111
  5607  01186A  EF39  F08C         	goto	u3110
  5608  01186E                     u3111:
  5609  01186E  EF1E  F08C         	goto	l3999
  5610  011872                     u3110:
  5611  011872  0012               	return		;funcret
  5612  011874                     __end_of_fputs:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _fputc *****************
  5616 ;; Defined at:
  5617 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  c               2    9[COMRAM] int 
  5620 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5621 ;;		 -> sprintf@f(11), 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  2    9[COMRAM] int 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;Total ram usage:        9 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 5
  5640 ;; This function calls:
  5641 ;;		_putch
  5642 ;; This function is called by:
  5643 ;;		_pad
  5644 ;;		_vfpfcnvrt
  5645 ;;		_fputs
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text35
  5650  011116                     __ptext35:
  5651                           	callstack 0
  5652  011116                     _fputc:
  5653                           	callstack 18
  5654  011116  500C               	movf	fputc@fp^0,w,c
  5655  011118  100D               	iorwf	(fputc@fp+1)^0,w,c
  5656  01111A  B4D8               	btfsc	status,2,c
  5657  01111C  EF92  F088         	goto	u3061
  5658  011120  EF94  F088         	goto	u3060
  5659  011124                     u3061:
  5660  011124  EF9D  F088         	goto	l3977
  5661  011128                     u3060:
  5662  011128  500C               	movf	fputc@fp^0,w,c
  5663  01112A  100D               	iorwf	(fputc@fp+1)^0,w,c
  5664  01112C  A4D8               	btfss	status,2,c
  5665  01112E  EF9B  F088         	goto	u3071
  5666  011132  EF9D  F088         	goto	u3070
  5667  011136                     u3071:
  5668  011136  EFA2  F088         	goto	l3979
  5669  01113A                     u3070:
  5670  01113A                     l3977:
  5671  01113A  500A               	movf	fputc@c^0,w,c
  5672  01113C  EC29  F08E         	call	_putch
  5673  011140  EFEF  F088         	goto	l1546
  5674  011144                     l3979:
  5675  011144  EE20 F009          	lfsr	2,9
  5676  011148  500C               	movf	fputc@fp^0,w,c
  5677  01114A  26D9               	addwf	fsr2l,f,c
  5678  01114C  500D               	movf	(fputc@fp+1)^0,w,c
  5679  01114E  22DA               	addwfc	fsr2h,f,c
  5680  011150  50DE               	movf	postinc2,w,c
  5681  011152  10DE               	iorwf	postinc2,w,c
  5682  011154  B4D8               	btfsc	status,2,c
  5683  011156  EFAF  F088         	goto	u3081
  5684  01115A  EFB1  F088         	goto	u3080
  5685  01115E                     u3081:
  5686  01115E  EFCC  F088         	goto	l3983
  5687  011162                     u3080:
  5688  011162  EE20 F009          	lfsr	2,9
  5689  011166  500C               	movf	fputc@fp^0,w,c
  5690  011168  26D9               	addwf	fsr2l,f,c
  5691  01116A  500D               	movf	(fputc@fp+1)^0,w,c
  5692  01116C  22DA               	addwfc	fsr2h,f,c
  5693  01116E  EE10 F003          	lfsr	1,3
  5694  011172  500C               	movf	fputc@fp^0,w,c
  5695  011174  26E1               	addwf	fsr1l,f,c
  5696  011176  500D               	movf	(fputc@fp+1)^0,w,c
  5697  011178  22E2               	addwfc	fsr1h,f,c
  5698  01117A  50DE               	movf	postinc2,w,c
  5699  01117C  5CE6               	subwf	postinc1,w,c
  5700  01117E  50E6               	movf	postinc1,w,c
  5701  011180  0A80               	xorlw	128
  5702  011182  6E12               	movwf	(??_fputc+4)^0,c
  5703  011184  50DE               	movf	postinc2,w,c
  5704  011186  0A80               	xorlw	128
  5705  011188  5812               	subwfb	(??_fputc+4)^0,w,c
  5706  01118A  B0D8               	btfsc	status,0,c
  5707  01118C  EFCA  F088         	goto	u3091
  5708  011190  EFCC  F088         	goto	u3090
  5709  011194                     u3091:
  5710  011194  EFEF  F088         	goto	l1546
  5711  011198                     u3090:
  5712  011198                     l3983:
  5713  011198  EE20 F003          	lfsr	2,3
  5714  01119C  500C               	movf	fputc@fp^0,w,c
  5715  01119E  26D9               	addwf	fsr2l,f,c
  5716  0111A0  500D               	movf	(fputc@fp+1)^0,w,c
  5717  0111A2  22DA               	addwfc	fsr2h,f,c
  5718  0111A4  CFDE F00E          	movff	postinc2,??_fputc
  5719  0111A8  CFDD F00F          	movff	postdec2,??_fputc+1
  5720  0111AC  C00C  FFD9         	movff	fputc@fp,fsr2l
  5721  0111B0  C00D  FFDA         	movff	fputc@fp+1,fsr2h
  5722  0111B4  CFDE F010          	movff	postinc2,??_fputc+2
  5723  0111B8  CFDD F011          	movff	postdec2,??_fputc+3
  5724  0111BC  500E               	movf	??_fputc^0,w,c
  5725  0111BE  2410               	addwf	(??_fputc+2)^0,w,c
  5726  0111C0  6ED9               	movwf	fsr2l,c
  5727  0111C2  500F               	movf	(??_fputc+1)^0,w,c
  5728  0111C4  2011               	addwfc	(??_fputc+3)^0,w,c
  5729  0111C6  6EDA               	movwf	fsr2h,c
  5730  0111C8  C00A  FFDF         	movff	fputc@c,indf2
  5731  0111CC  EE20 F003          	lfsr	2,3
  5732  0111D0  500C               	movf	fputc@fp^0,w,c
  5733  0111D2  26D9               	addwf	fsr2l,f,c
  5734  0111D4  500D               	movf	(fputc@fp+1)^0,w,c
  5735  0111D6  22DA               	addwfc	fsr2h,f,c
  5736  0111D8  2ADE               	incf	postinc2,f,c
  5737  0111DA  0E00               	movlw	0
  5738  0111DC  22DD               	addwfc	postdec2,f,c
  5739  0111DE                     l1546:
  5740  0111DE  0012               	return		;funcret
  5741  0111E0                     __end_of_fputc:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _putch *****************
  5745 ;; Defined at:
  5746 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  c               1    wreg     unsigned char 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  c               1    0[COMRAM] unsigned char 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 4
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_fputc
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text36
  5775  011C52                     __ptext36:
  5776                           	callstack 0
  5777  011C52                     _putch:
  5778                           	callstack 18
  5779  011C52  0012               	return		;funcret
  5780  011C54                     __end_of_putch:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _abs *****************
  5784 ;; Defined at:
  5785 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  a               2   27[COMRAM] int 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  2   27[COMRAM] int 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5803 ;;Total ram usage:        4 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; Hardware stack levels required when called: 4
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_dtoa
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text37
  5814  011874                     __ptext37:
  5815                           	callstack 0
  5816  011874                     _abs:
  5817                           	callstack 21
  5818  011874  BE1D               	btfsc	(abs@a+1)^0,7,c
  5819  011876  EF47  F08C         	goto	u3360
  5820  01187A  501D               	movf	(abs@a+1)^0,w,c
  5821  01187C  E106               	bnz	u3361
  5822  01187E  041C               	decf	abs@a^0,w,c
  5823  011880  B0D8               	btfsc	status,0,c
  5824  011882  EF45  F08C         	goto	u3361
  5825  011886  EF47  F08C         	goto	u3360
  5826  01188A                     u3361:
  5827  01188A  EF55  F08C         	goto	l1531
  5828  01188E                     u3360:
  5829  01188E  C01C  F01E         	movff	abs@a,??_abs
  5830  011892  C01D  F01F         	movff	abs@a+1,??_abs+1
  5831  011896  1E1E               	comf	??_abs^0,f,c
  5832  011898  1E1F               	comf	(??_abs+1)^0,f,c
  5833  01189A  4A1E               	infsnz	??_abs^0,f,c
  5834  01189C  2A1F               	incf	(??_abs+1)^0,f,c
  5835  01189E  C01E  F01C         	movff	??_abs,?_abs
  5836  0118A2  C01F  F01D         	movff	??_abs+1,?_abs+1
  5837  0118A6  EF59  F08C         	goto	l1534
  5838  0118AA                     l1531:
  5839  0118AA  C01C  F01C         	movff	abs@a,?_abs
  5840  0118AE  C01D  F01D         	movff	abs@a+1,?_abs+1
  5841  0118B2                     l1534:
  5842  0118B2  0012               	return		;funcret
  5843  0118B4                     __end_of_abs:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function ___aomod *****************
  5847 ;; Defined at:
  5848 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  dividend        8    9[COMRAM] long long 
  5851 ;;  divisor         8   17[COMRAM] long long 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  sign            1   26[COMRAM] unsigned char 
  5854 ;;  counter         1   25[COMRAM] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  8    9[COMRAM] long long 
  5857 ;; Registers used:
  5858 ;;		wreg, status,2, status,0
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5864 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;Total ram usage:       18 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 4
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_dtoa
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text38
  5879  010CEC                     __ptext38:
  5880                           	callstack 0
  5881  010CEC                     ___aomod:
  5882                           	callstack 21
  5883  010CEC  0E00               	movlw	0
  5884  010CEE  6E1B               	movwf	___aomod@sign^0,c
  5885  010CF0  BE11               	btfsc	(___aomod@dividend+7)^0,7,c
  5886  010CF2  EF7F  F086         	goto	u3190
  5887  010CF6  EF7D  F086         	goto	u3191
  5888  010CFA                     u3191:
  5889  010CFA  EF91  F086         	goto	l4057
  5890  010CFE                     u3190:
  5891  010CFE  1E11               	comf	(___aomod@dividend+7)^0,f,c
  5892  010D00  1E10               	comf	(___aomod@dividend+6)^0,f,c
  5893  010D02  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  5894  010D04  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  5895  010D06  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  5896  010D08  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  5897  010D0A  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  5898  010D0C  6C0A               	negf	___aomod@dividend^0,c
  5899  010D0E  0E00               	movlw	0
  5900  010D10  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  5901  010D12  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  5902  010D14  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  5903  010D16  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  5904  010D18  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  5905  010D1A  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  5906  010D1C  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  5907  010D1E  0E01               	movlw	1
  5908  010D20  6E1B               	movwf	___aomod@sign^0,c
  5909  010D22                     l4057:
  5910  010D22  BE19               	btfsc	(___aomod@divisor+7)^0,7,c
  5911  010D24  EF98  F086         	goto	u3200
  5912  010D28  EF96  F086         	goto	u3201
  5913  010D2C                     u3201:
  5914  010D2C  EFA8  F086         	goto	l4061
  5915  010D30                     u3200:
  5916  010D30  1E19               	comf	(___aomod@divisor+7)^0,f,c
  5917  010D32  1E18               	comf	(___aomod@divisor+6)^0,f,c
  5918  010D34  1E17               	comf	(___aomod@divisor+5)^0,f,c
  5919  010D36  1E16               	comf	(___aomod@divisor+4)^0,f,c
  5920  010D38  1E15               	comf	(___aomod@divisor+3)^0,f,c
  5921  010D3A  1E14               	comf	(___aomod@divisor+2)^0,f,c
  5922  010D3C  1E13               	comf	(___aomod@divisor+1)^0,f,c
  5923  010D3E  6C12               	negf	___aomod@divisor^0,c
  5924  010D40  0E00               	movlw	0
  5925  010D42  2213               	addwfc	(___aomod@divisor+1)^0,f,c
  5926  010D44  2214               	addwfc	(___aomod@divisor+2)^0,f,c
  5927  010D46  2215               	addwfc	(___aomod@divisor+3)^0,f,c
  5928  010D48  2216               	addwfc	(___aomod@divisor+4)^0,f,c
  5929  010D4A  2217               	addwfc	(___aomod@divisor+5)^0,f,c
  5930  010D4C  2218               	addwfc	(___aomod@divisor+6)^0,f,c
  5931  010D4E  2219               	addwfc	(___aomod@divisor+7)^0,f,c
  5932  010D50                     l4061:
  5933  010D50  5012               	movf	___aomod@divisor^0,w,c
  5934  010D52  1013               	iorwf	(___aomod@divisor+1)^0,w,c
  5935  010D54  1014               	iorwf	(___aomod@divisor+2)^0,w,c
  5936  010D56  1015               	iorwf	(___aomod@divisor+3)^0,w,c
  5937  010D58  1016               	iorwf	(___aomod@divisor+4)^0,w,c
  5938  010D5A  1017               	iorwf	(___aomod@divisor+5)^0,w,c
  5939  010D5C  1018               	iorwf	(___aomod@divisor+6)^0,w,c
  5940  010D5E  1019               	iorwf	(___aomod@divisor+7)^0,w,c
  5941  010D60  B4D8               	btfsc	status,2,c
  5942  010D62  EFB5  F086         	goto	u3211
  5943  010D66  EFB7  F086         	goto	u3210
  5944  010D6A                     u3211:
  5945  010D6A  EFFF  F086         	goto	l4077
  5946  010D6E                     u3210:
  5947  010D6E  0E01               	movlw	1
  5948  010D70  6E1A               	movwf	___aomod@counter^0,c
  5949  010D72  EFC5  F086         	goto	l4067
  5950  010D76                     l4065:
  5951  010D76  90D8               	bcf	status,0,c
  5952  010D78  3612               	rlcf	___aomod@divisor^0,f,c
  5953  010D7A  3613               	rlcf	(___aomod@divisor+1)^0,f,c
  5954  010D7C  3614               	rlcf	(___aomod@divisor+2)^0,f,c
  5955  010D7E  3615               	rlcf	(___aomod@divisor+3)^0,f,c
  5956  010D80  3616               	rlcf	(___aomod@divisor+4)^0,f,c
  5957  010D82  3617               	rlcf	(___aomod@divisor+5)^0,f,c
  5958  010D84  3618               	rlcf	(___aomod@divisor+6)^0,f,c
  5959  010D86  3619               	rlcf	(___aomod@divisor+7)^0,f,c
  5960  010D88  2A1A               	incf	___aomod@counter^0,f,c
  5961  010D8A                     l4067:
  5962  010D8A  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  5963  010D8C  EFCA  F086         	goto	u3221
  5964  010D90  EFCC  F086         	goto	u3220
  5965  010D94                     u3221:
  5966  010D94  EFBB  F086         	goto	l4065
  5967  010D98                     u3220:
  5968  010D98                     l4069:
  5969  010D98  5012               	movf	___aomod@divisor^0,w,c
  5970  010D9A  5C0A               	subwf	___aomod@dividend^0,w,c
  5971  010D9C  5013               	movf	(___aomod@divisor+1)^0,w,c
  5972  010D9E  580B               	subwfb	(___aomod@dividend+1)^0,w,c
  5973  010DA0  5014               	movf	(___aomod@divisor+2)^0,w,c
  5974  010DA2  580C               	subwfb	(___aomod@dividend+2)^0,w,c
  5975  010DA4  5015               	movf	(___aomod@divisor+3)^0,w,c
  5976  010DA6  580D               	subwfb	(___aomod@dividend+3)^0,w,c
  5977  010DA8  5016               	movf	(___aomod@divisor+4)^0,w,c
  5978  010DAA  580E               	subwfb	(___aomod@dividend+4)^0,w,c
  5979  010DAC  5017               	movf	(___aomod@divisor+5)^0,w,c
  5980  010DAE  580F               	subwfb	(___aomod@dividend+5)^0,w,c
  5981  010DB0  5018               	movf	(___aomod@divisor+6)^0,w,c
  5982  010DB2  5810               	subwfb	(___aomod@dividend+6)^0,w,c
  5983  010DB4  5019               	movf	(___aomod@divisor+7)^0,w,c
  5984  010DB6  5811               	subwfb	(___aomod@dividend+7)^0,w,c
  5985  010DB8  A0D8               	btfss	status,0,c
  5986  010DBA  EFE1  F086         	goto	u3231
  5987  010DBE  EFE3  F086         	goto	u3230
  5988  010DC2                     u3231:
  5989  010DC2  EFF3  F086         	goto	l4073
  5990  010DC6                     u3230:
  5991  010DC6  5012               	movf	___aomod@divisor^0,w,c
  5992  010DC8  5E0A               	subwf	___aomod@dividend^0,f,c
  5993  010DCA  5013               	movf	(___aomod@divisor+1)^0,w,c
  5994  010DCC  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
  5995  010DCE  5014               	movf	(___aomod@divisor+2)^0,w,c
  5996  010DD0  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
  5997  010DD2  5015               	movf	(___aomod@divisor+3)^0,w,c
  5998  010DD4  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
  5999  010DD6  5016               	movf	(___aomod@divisor+4)^0,w,c
  6000  010DD8  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
  6001  010DDA  5017               	movf	(___aomod@divisor+5)^0,w,c
  6002  010DDC  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
  6003  010DDE  5018               	movf	(___aomod@divisor+6)^0,w,c
  6004  010DE0  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
  6005  010DE2  5019               	movf	(___aomod@divisor+7)^0,w,c
  6006  010DE4  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
  6007  010DE6                     l4073:
  6008  010DE6  90D8               	bcf	status,0,c
  6009  010DE8  3219               	rrcf	(___aomod@divisor+7)^0,f,c
  6010  010DEA  3218               	rrcf	(___aomod@divisor+6)^0,f,c
  6011  010DEC  3217               	rrcf	(___aomod@divisor+5)^0,f,c
  6012  010DEE  3216               	rrcf	(___aomod@divisor+4)^0,f,c
  6013  010DF0  3215               	rrcf	(___aomod@divisor+3)^0,f,c
  6014  010DF2  3214               	rrcf	(___aomod@divisor+2)^0,f,c
  6015  010DF4  3213               	rrcf	(___aomod@divisor+1)^0,f,c
  6016  010DF6  3212               	rrcf	___aomod@divisor^0,f,c
  6017  010DF8  2E1A               	decfsz	___aomod@counter^0,f,c
  6018  010DFA  EFCC  F086         	goto	l4069
  6019  010DFE                     l4077:
  6020  010DFE  501B               	movf	___aomod@sign^0,w,c
  6021  010E00  B4D8               	btfsc	status,2,c
  6022  010E02  EF05  F087         	goto	u3241
  6023  010E06  EF07  F087         	goto	u3240
  6024  010E0A                     u3241:
  6025  010E0A  EF17  F087         	goto	l4081
  6026  010E0E                     u3240:
  6027  010E0E  1E11               	comf	(___aomod@dividend+7)^0,f,c
  6028  010E10  1E10               	comf	(___aomod@dividend+6)^0,f,c
  6029  010E12  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  6030  010E14  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  6031  010E16  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  6032  010E18  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  6033  010E1A  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  6034  010E1C  6C0A               	negf	___aomod@dividend^0,c
  6035  010E1E  0E00               	movlw	0
  6036  010E20  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  6037  010E22  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  6038  010E24  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  6039  010E26  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  6040  010E28  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  6041  010E2A  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  6042  010E2C  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  6043  010E2E                     l4081:
  6044  010E2E  C00A  F00A         	movff	___aomod@dividend,?___aomod
  6045  010E32  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
  6046  010E36  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
  6047  010E3A  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
  6048  010E3E  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
  6049  010E42  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
  6050  010E46  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
  6051  010E4A  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
  6052  010E4E  0012               	return		;funcret
  6053  010E50                     __end_of___aomod:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function ___aodiv *****************
  6057 ;; Defined at:
  6058 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  dividend        8    9[COMRAM] long long 
  6061 ;;  divisor         8   17[COMRAM] long long 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  quotient        8   27[COMRAM] long long 
  6064 ;;  sign            1   26[COMRAM] unsigned char 
  6065 ;;  counter         1   25[COMRAM] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  8    9[COMRAM] long long 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6075 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6078 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6079 ;;Total ram usage:       26 bytes
  6080 ;; Hardware stack levels used: 1
  6081 ;; Hardware stack levels required when called: 4
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_dtoa
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text39
  6090  010B64                     __ptext39:
  6091                           	callstack 0
  6092  010B64                     ___aodiv:
  6093                           	callstack 21
  6094  010B64  0E00               	movlw	0
  6095  010B66  6E1B               	movwf	___aodiv@sign^0,c
  6096  010B68  BE19               	btfsc	(___aodiv@divisor+7)^0,7,c
  6097  010B6A  EFBB  F085         	goto	u3120
  6098  010B6E  EFB9  F085         	goto	u3121
  6099  010B72                     u3121:
  6100  010B72  EFCD  F085         	goto	l4013
  6101  010B76                     u3120:
  6102  010B76  1E19               	comf	(___aodiv@divisor+7)^0,f,c
  6103  010B78  1E18               	comf	(___aodiv@divisor+6)^0,f,c
  6104  010B7A  1E17               	comf	(___aodiv@divisor+5)^0,f,c
  6105  010B7C  1E16               	comf	(___aodiv@divisor+4)^0,f,c
  6106  010B7E  1E15               	comf	(___aodiv@divisor+3)^0,f,c
  6107  010B80  1E14               	comf	(___aodiv@divisor+2)^0,f,c
  6108  010B82  1E13               	comf	(___aodiv@divisor+1)^0,f,c
  6109  010B84  6C12               	negf	___aodiv@divisor^0,c
  6110  010B86  0E00               	movlw	0
  6111  010B88  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
  6112  010B8A  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
  6113  010B8C  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
  6114  010B8E  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
  6115  010B90  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
  6116  010B92  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
  6117  010B94  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
  6118  010B96  0E01               	movlw	1
  6119  010B98  6E1B               	movwf	___aodiv@sign^0,c
  6120  010B9A                     l4013:
  6121  010B9A  BE11               	btfsc	(___aodiv@dividend+7)^0,7,c
  6122  010B9C  EFD4  F085         	goto	u3130
  6123  010BA0  EFD2  F085         	goto	u3131
  6124  010BA4                     u3131:
  6125  010BA4  EFE6  F085         	goto	l4019
  6126  010BA8                     u3130:
  6127  010BA8  1E11               	comf	(___aodiv@dividend+7)^0,f,c
  6128  010BAA  1E10               	comf	(___aodiv@dividend+6)^0,f,c
  6129  010BAC  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
  6130  010BAE  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
  6131  010BB0  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
  6132  010BB2  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
  6133  010BB4  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
  6134  010BB6  6C0A               	negf	___aodiv@dividend^0,c
  6135  010BB8  0E00               	movlw	0
  6136  010BBA  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
  6137  010BBC  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
  6138  010BBE  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
  6139  010BC0  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
  6140  010BC2  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
  6141  010BC4  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
  6142  010BC6  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
  6143  010BC8  0E01               	movlw	1
  6144  010BCA  1A1B               	xorwf	___aodiv@sign^0,f,c
  6145  010BCC                     l4019:
  6146  010BCC  EE20  F01C         	lfsr	2,___aodiv@quotient
  6147  010BD0  0E07               	movlw	7
  6148  010BD2                     u3141:
  6149  010BD2  6ADE               	clrf	postinc2,c
  6150  010BD4  06E8               	decf	wreg,f,c
  6151  010BD6  E2FD               	bc	u3141
  6152  010BD8  5012               	movf	___aodiv@divisor^0,w,c
  6153  010BDA  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
  6154  010BDC  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
  6155  010BDE  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
  6156  010BE0  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
  6157  010BE2  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
  6158  010BE4  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
  6159  010BE6  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
  6160  010BE8  B4D8               	btfsc	status,2,c
  6161  010BEA  EFF9  F085         	goto	u3151
  6162  010BEE  EFFB  F085         	goto	u3150
  6163  010BF2                     u3151:
  6164  010BF2  EF4D  F086         	goto	l4041
  6165  010BF6                     u3150:
  6166  010BF6  0E01               	movlw	1
  6167  010BF8  6E1A               	movwf	___aodiv@counter^0,c
  6168  010BFA  EF09  F086         	goto	l4027
  6169  010BFE                     l4025:
  6170  010BFE  90D8               	bcf	status,0,c
  6171  010C00  3612               	rlcf	___aodiv@divisor^0,f,c
  6172  010C02  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
  6173  010C04  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
  6174  010C06  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
  6175  010C08  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
  6176  010C0A  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
  6177  010C0C  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
  6178  010C0E  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
  6179  010C10  2A1A               	incf	___aodiv@counter^0,f,c
  6180  010C12                     l4027:
  6181  010C12  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  6182  010C14  EF0E  F086         	goto	u3161
  6183  010C18  EF10  F086         	goto	u3160
  6184  010C1C                     u3161:
  6185  010C1C  EFFF  F085         	goto	l4025
  6186  010C20                     u3160:
  6187  010C20                     l4029:
  6188  010C20  90D8               	bcf	status,0,c
  6189  010C22  361C               	rlcf	___aodiv@quotient^0,f,c
  6190  010C24  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
  6191  010C26  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
  6192  010C28  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
  6193  010C2A  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
  6194  010C2C  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
  6195  010C2E  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
  6196  010C30  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
  6197  010C32  5012               	movf	___aodiv@divisor^0,w,c
  6198  010C34  5C0A               	subwf	___aodiv@dividend^0,w,c
  6199  010C36  5013               	movf	(___aodiv@divisor+1)^0,w,c
  6200  010C38  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
  6201  010C3A  5014               	movf	(___aodiv@divisor+2)^0,w,c
  6202  010C3C  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
  6203  010C3E  5015               	movf	(___aodiv@divisor+3)^0,w,c
  6204  010C40  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
  6205  010C42  5016               	movf	(___aodiv@divisor+4)^0,w,c
  6206  010C44  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
  6207  010C46  5017               	movf	(___aodiv@divisor+5)^0,w,c
  6208  010C48  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
  6209  010C4A  5018               	movf	(___aodiv@divisor+6)^0,w,c
  6210  010C4C  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
  6211  010C4E  5019               	movf	(___aodiv@divisor+7)^0,w,c
  6212  010C50  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
  6213  010C52  A0D8               	btfss	status,0,c
  6214  010C54  EF2E  F086         	goto	u3171
  6215  010C58  EF30  F086         	goto	u3170
  6216  010C5C                     u3171:
  6217  010C5C  EF41  F086         	goto	l4037
  6218  010C60                     u3170:
  6219  010C60  5012               	movf	___aodiv@divisor^0,w,c
  6220  010C62  5E0A               	subwf	___aodiv@dividend^0,f,c
  6221  010C64  5013               	movf	(___aodiv@divisor+1)^0,w,c
  6222  010C66  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
  6223  010C68  5014               	movf	(___aodiv@divisor+2)^0,w,c
  6224  010C6A  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
  6225  010C6C  5015               	movf	(___aodiv@divisor+3)^0,w,c
  6226  010C6E  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
  6227  010C70  5016               	movf	(___aodiv@divisor+4)^0,w,c
  6228  010C72  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
  6229  010C74  5017               	movf	(___aodiv@divisor+5)^0,w,c
  6230  010C76  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
  6231  010C78  5018               	movf	(___aodiv@divisor+6)^0,w,c
  6232  010C7A  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
  6233  010C7C  5019               	movf	(___aodiv@divisor+7)^0,w,c
  6234  010C7E  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
  6235  010C80  801C               	bsf	___aodiv@quotient^0,0,c
  6236  010C82                     l4037:
  6237  010C82  90D8               	bcf	status,0,c
  6238  010C84  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
  6239  010C86  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
  6240  010C88  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
  6241  010C8A  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
  6242  010C8C  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
  6243  010C8E  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
  6244  010C90  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
  6245  010C92  3212               	rrcf	___aodiv@divisor^0,f,c
  6246  010C94  2E1A               	decfsz	___aodiv@counter^0,f,c
  6247  010C96  EF10  F086         	goto	l4029
  6248  010C9A                     l4041:
  6249  010C9A  501B               	movf	___aodiv@sign^0,w,c
  6250  010C9C  B4D8               	btfsc	status,2,c
  6251  010C9E  EF53  F086         	goto	u3181
  6252  010CA2  EF55  F086         	goto	u3180
  6253  010CA6                     u3181:
  6254  010CA6  EF65  F086         	goto	l4045
  6255  010CAA                     u3180:
  6256  010CAA  1E23               	comf	(___aodiv@quotient+7)^0,f,c
  6257  010CAC  1E22               	comf	(___aodiv@quotient+6)^0,f,c
  6258  010CAE  1E21               	comf	(___aodiv@quotient+5)^0,f,c
  6259  010CB0  1E20               	comf	(___aodiv@quotient+4)^0,f,c
  6260  010CB2  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
  6261  010CB4  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
  6262  010CB6  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
  6263  010CB8  6C1C               	negf	___aodiv@quotient^0,c
  6264  010CBA  0E00               	movlw	0
  6265  010CBC  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
  6266  010CBE  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
  6267  010CC0  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
  6268  010CC2  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
  6269  010CC4  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
  6270  010CC6  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
  6271  010CC8  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
  6272  010CCA                     l4045:
  6273  010CCA  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
  6274  010CCE  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
  6275  010CD2  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
  6276  010CD6  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
  6277  010CDA  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
  6278  010CDE  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
  6279  010CE2  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
  6280  010CE6  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
  6281  010CEA  0012               	return		;funcret
  6282  010CEC                     __end_of___aodiv:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function _TX_Buffer1 *****************
  6286 ;; Defined at:
  6287 ;;		line 586 in file "main.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  buff            2   13[COMRAM] PTR unsigned char 
  6290 ;;		 -> rmove@move_buf(40), rmove@speed_buf(40), 
  6291 ;;  size            1   15[COMRAM] unsigned char 
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;  i               1   16[COMRAM] unsigned char 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;Total ram usage:        4 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 5
  6310 ;; This function calls:
  6311 ;;		_EUSART1_Write
  6312 ;; This function is called by:
  6313 ;;		_rmove
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text40
  6318  0118B4                     __ptext40:
  6319                           	callstack 0
  6320  0118B4                     _TX_Buffer1:
  6321                           	callstack 23
  6322  0118B4                     
  6323                           ;main.c: 587:         uint8_t i;;main.c: 589:         for(i=0; i<size; i++)
  6324  0118B4  0E00               	movlw	0
  6325  0118B6  6E11               	movwf	TX_Buffer1@i^0,c
  6326  0118B8  EF68  F08C         	goto	l4343
  6327  0118BC                     l4339:
  6328                           
  6329                           ;main.c: 590:             EUSART1_Write(buff[i]);
  6330  0118BC  5011               	movf	TX_Buffer1@i^0,w,c
  6331  0118BE  240E               	addwf	TX_Buffer1@buff^0,w,c
  6332  0118C0  6ED9               	movwf	fsr2l,c
  6333  0118C2  0E00               	movlw	0
  6334  0118C4  200F               	addwfc	(TX_Buffer1@buff+1)^0,w,c
  6335  0118C6  6EDA               	movwf	fsr2h,c
  6336  0118C8  50DF               	movf	indf2,w,c
  6337  0118CA  ECA4  F08D         	call	_EUSART1_Write
  6338  0118CE  2A11               	incf	TX_Buffer1@i^0,f,c
  6339  0118D0                     l4343:
  6340  0118D0  5010               	movf	TX_Buffer1@size^0,w,c
  6341  0118D2  5C11               	subwf	TX_Buffer1@i^0,w,c
  6342  0118D4  A0D8               	btfss	status,0,c
  6343  0118D6  EF6F  F08C         	goto	u3701
  6344  0118DA  EF71  F08C         	goto	u3700
  6345  0118DE                     u3701:
  6346  0118DE  EF5E  F08C         	goto	l4339
  6347  0118E2                     u3700:
  6348  0118E2                     
  6349                           ;main.c: 591:        EUSART1_Write(0x0A);
  6350  0118E2  0E0A               	movlw	10
  6351  0118E4  ECA4  F08D         	call	_EUSART1_Write
  6352                           
  6353                           ;main.c: 592:        EUSART1_Write(0x0D);
  6354  0118E8  0E0D               	movlw	13
  6355  0118EA  ECA4  F08D         	call	_EUSART1_Write
  6356  0118EE  0012               	return		;funcret
  6357  0118F0                     __end_of_TX_Buffer1:
  6358                           	callstack 0
  6359                           
  6360 ;; *************** function _EUSART1_Write *****************
  6361 ;; Defined at:
  6362 ;;		line 162 in file "mcc_generated_files/eusart1.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  txData          1    wreg     unsigned char 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  txData          1    9[COMRAM] unsigned char 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6380 ;;Total ram usage:        1 bytes
  6381 ;; Hardware stack levels used: 1
  6382 ;; Hardware stack levels required when called: 4
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_TX_Buffer1
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text41
  6391  011B48                     __ptext41:
  6392                           	callstack 0
  6393  011B48                     _EUSART1_Write:
  6394                           	callstack 23
  6395                           
  6396                           ;incstack = 0
  6397                           ;EUSART1_Write@txData stored from wreg
  6398  011B48  6E0A               	movwf	EUSART1_Write@txData^0,c
  6399  011B4A                     l177:
  6400                           
  6401                           ;mcc_generated_files/eusart1.c: 164:     while(0 == PIR3bits.TX1IF)
  6402  011B4A  010E               	movlb	14	; () banked
  6403  011B4C  A9C8               	btfss	200,4,b	;volatile
  6404  011B4E  EFAB  F08D         	goto	u3641
  6405  011B52  EFAD  F08D         	goto	u3640
  6406  011B56                     u3641:
  6407  011B56  EFA5  F08D         	goto	l177
  6408  011B5A                     u3640:
  6409  011B5A                     
  6410                           ; BSR set to: 14
  6411                           ;mcc_generated_files/eusart1.c: 168:     TX1REG = txData;
  6412  011B5A  C00A  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  6413  011B5E                     
  6414                           ; BSR set to: 14
  6415  011B5E  0012               	return		;funcret
  6416  011B60                     __end_of_EUSART1_Write:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _lcd_set_cursor *****************
  6420 ;; Defined at:
  6421 ;;		line 554 in file "main.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  pos             1    wreg     unsigned char 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  pos             1   10[COMRAM] unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6439 ;;Total ram usage:        1 bytes
  6440 ;; Hardware stack levels used: 1
  6441 ;; Hardware stack levels required when called: 5
  6442 ;; This function calls:
  6443 ;;		_EUSART2_Write
  6444 ;; This function is called by:
  6445 ;;		_main
  6446 ;;		_lcd_GUI
  6447 ;;		_LaySheetsOnTrays
  6448 ;;		_lcd_show_values
  6449 ;;		_lcd_page_home
  6450 ;;		_lcd_default_setup
  6451 ;;		_lcd_page_1
  6452 ;;		_lcd_page_2
  6453 ;;		_lcd_page_3
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text42
  6458  011AF6                     __ptext42:
  6459                           	callstack 0
  6460  011AF6                     _lcd_set_cursor:
  6461                           	callstack 25
  6462                           
  6463                           ; BSR set to: 14
  6464                           ;incstack = 0
  6465                           ;lcd_set_cursor@pos stored from wreg
  6466  011AF6  6E0B               	movwf	lcd_set_cursor@pos^0,c
  6467  011AF8                     
  6468                           ;main.c: 555:         EUSART2_Write(0xfe);
  6469  011AF8  0EFE               	movlw	254
  6470  011AFA  ECB0  F08D         	call	_EUSART2_Write
  6471                           
  6472                           ;main.c: 556:         EUSART2_Write(0x45);
  6473  011AFE  0E45               	movlw	69
  6474  011B00  ECB0  F08D         	call	_EUSART2_Write
  6475  011B04                     
  6476                           ;main.c: 557:         EUSART2_Write(pos);
  6477  011B04  500B               	movf	lcd_set_cursor@pos^0,w,c
  6478  011B06  ECB0  F08D         	call	_EUSART2_Write
  6479  011B0A                     
  6480                           ;main.c: 558:         _delay((unsigned long)((200)*(8000000/4000000.0)));
  6481  011B0A  0E85               	movlw	133
  6482  011B0C                     u4327:
  6483  011B0C  2EE8               	decfsz	wreg,f,c
  6484  011B0E  D7FE               	bra	u4327
  6485  011B10  F000               	nop	
  6486  011B12  0012               	return		;funcret
  6487  011B14                     __end_of_lcd_set_cursor:
  6488                           	callstack 0
  6489                           
  6490 ;; *************** function _lcd_print *****************
  6491 ;; Defined at:
  6492 ;;		line 530 in file "main.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  str             2   19[COMRAM] PTR unsigned char 
  6495 ;;		 -> LaySheetsOnTrays@lcd_string(16), STR_33(17), STR_32(17), STR_31(17), 
  6496 ;;		 -> STR_30(17), STR_29(16), lcd_page_1@lcd_string(16), STR_25(17), 
  6497 ;;		 -> STR_24(17), STR_23(17), STR_22(16), STR_21(17), 
  6498 ;;		 -> STR_20(17), STR_19(18), STR_18(17), lcd_show_values@lcd_string(16), 
  6499 ;;		 -> STR_8(16), STR_7(18), STR_6(18), STR_5(18), 
  6500 ;;		 -> STR_4(18), STR_3(18), lcd_GUI@lcd_string(16), STR_1(17), 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  Buffer         16   21[COMRAM] unsigned char [16]
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;Total ram usage:       18 bytes
  6517 ;; Hardware stack levels used: 1
  6518 ;; Hardware stack levels required when called: 6
  6519 ;; This function calls:
  6520 ;;		_TX_Buffer2
  6521 ;;		_strcpy
  6522 ;; This function is called by:
  6523 ;;		_main
  6524 ;;		_lcd_GUI
  6525 ;;		_LaySheetsOnTrays
  6526 ;;		_lcd_show_values
  6527 ;;		_lcd_page_home
  6528 ;;		_lcd_default_setup
  6529 ;;		_lcd_page_1
  6530 ;;		_lcd_page_2
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text43
  6535  011A6E                     __ptext43:
  6536                           	callstack 0
  6537  011A6E                     _lcd_print:
  6538                           	callstack 24
  6539  011A6E                     
  6540                           ;main.c: 531:        char Buffer[16];;main.c: 532:        strcpy(Buffer,str);
  6541  011A6E  0E16               	movlw	low lcd_print@Buffer
  6542  011A70  6E0A               	movwf	strcpy@dest^0,c
  6543  011A72  0E00               	movlw	high lcd_print@Buffer
  6544  011A74  6E0B               	movwf	(strcpy@dest+1)^0,c
  6545  011A76  C014  F00C         	movff	lcd_print@str,strcpy@src
  6546  011A7A  C015  F00D         	movff	lcd_print@str+1,strcpy@src+1
  6547  011A7E  EC74  F08B         	call	_strcpy	;wreg free
  6548  011A82                     
  6549                           ;main.c: 533:        TX_Buffer2(Buffer, 15);
  6550  011A82  0E16               	movlw	low lcd_print@Buffer
  6551  011A84  6E0B               	movwf	TX_Buffer2@buff^0,c
  6552  011A86  0E00               	movlw	high lcd_print@Buffer
  6553  011A88  6E0C               	movwf	(TX_Buffer2@buff+1)^0,c
  6554  011A8A  0E0F               	movlw	15
  6555  011A8C  6E0D               	movwf	TX_Buffer2@size^0,c
  6556  011A8E  ECF7  F08C         	call	_TX_Buffer2	;wreg free
  6557  011A92  0012               	return		;funcret
  6558  011A94                     __end_of_lcd_print:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function _strcpy *****************
  6562 ;; Defined at:
  6563 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  dest            2    9[COMRAM] PTR unsigned char 
  6566 ;;		 -> lcd_print@Buffer(16), 
  6567 ;;  src             2   11[COMRAM] PTR const unsigned char 
  6568 ;;		 -> LaySheetsOnTrays@lcd_string(16), STR_33(17), STR_32(17), STR_31(17), 
  6569 ;;		 -> STR_30(17), STR_29(16), lcd_page_1@lcd_string(16), STR_25(17), 
  6570 ;;		 -> STR_24(17), STR_23(17), STR_22(16), STR_21(17), 
  6571 ;;		 -> STR_20(17), STR_19(18), STR_18(17), lcd_show_values@lcd_string(16), 
  6572 ;;		 -> STR_8(16), STR_7(18), STR_6(18), STR_5(18), 
  6573 ;;		 -> STR_4(18), STR_3(18), lcd_GUI@lcd_string(16), STR_1(17), 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  d               2   17[COMRAM] PTR unsigned char 
  6576 ;;		 -> lcd_print@Buffer(16), 
  6577 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6578 ;;		 -> LaySheetsOnTrays@lcd_string(16), STR_33(17), STR_32(17), STR_31(17), 
  6579 ;;		 -> STR_30(17), STR_29(16), lcd_page_1@lcd_string(16), STR_25(17), 
  6580 ;;		 -> STR_24(17), STR_23(17), STR_22(16), STR_21(17), 
  6581 ;;		 -> STR_20(17), STR_19(18), STR_18(17), lcd_show_values@lcd_string(16), 
  6582 ;;		 -> STR_8(16), STR_7(18), STR_6(18), STR_5(18), 
  6583 ;;		 -> STR_4(18), STR_3(18), lcd_GUI@lcd_string(16), STR_1(17), 
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  2    9[COMRAM] PTR unsigned char 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6594 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6596 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6597 ;;Total ram usage:       10 bytes
  6598 ;; Hardware stack levels used: 1
  6599 ;; Hardware stack levels required when called: 4
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_lcd_print
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text44
  6608  0116E8                     __ptext44:
  6609                           	callstack 0
  6610  0116E8                     _strcpy:
  6611                           	callstack 25
  6612  0116E8  C00C  F010         	movff	strcpy@src,strcpy@s
  6613  0116EC  C00D  F011         	movff	strcpy@src+1,strcpy@s+1
  6614  0116F0  C00A  F012         	movff	strcpy@dest,strcpy@d
  6615  0116F4  C00B  F013         	movff	strcpy@dest+1,strcpy@d+1
  6616  0116F8                     l4327:
  6617  0116F8  5010               	movf	strcpy@s^0,w,c
  6618  0116FA  6E0E               	movwf	??_strcpy^0,c
  6619  0116FC  5011               	movf	(strcpy@s+1)^0,w,c
  6620  0116FE  6E0F               	movwf	(??_strcpy+1)^0,c
  6621  011700  4A10               	infsnz	strcpy@s^0,f,c
  6622  011702  2A11               	incf	(strcpy@s+1)^0,f,c
  6623  011704  C00E  FFF6         	movff	??_strcpy,tblptrl
  6624  011708  C00F  FFF7         	movff	??_strcpy+1,tblptrh
  6625  01170C  0E00               	movlw	low (__mediumconst shr (0+16))
  6626  01170E  6EF8               	movwf	tblptru,c
  6627  011710  C012  FFD9         	movff	strcpy@d,fsr2l
  6628  011714  C013  FFDA         	movff	strcpy@d+1,fsr2h
  6629  011718  4A12               	infsnz	strcpy@d^0,f,c
  6630  01171A  2A13               	incf	(strcpy@d+1)^0,f,c
  6631  01171C  0E0E               	movlw	(high __ramtop+-1)
  6632  01171E  64F7               	cpfsgt	tblptrh,c
  6633  011720  D003               	bra	u3677
  6634  011722  0008               	tblrd		*
  6635  011724  50F5               	movf	tablat,w,c
  6636  011726  D005               	bra	u3670
  6637  011728                     u3677:
  6638  011728  CFF6 FFE9          	movff	tblptrl,fsr0l
  6639  01172C  CFF7 FFEA          	movff	tblptrh,fsr0h
  6640  011730  50EF               	movf	indf0,w,c
  6641  011732                     u3670:
  6642  011732  6EDF               	movwf	indf2,c
  6643  011734  50DF               	movf	indf2,w,c
  6644  011736  A4D8               	btfss	status,2,c
  6645  011738  EFA0  F08B         	goto	u3681
  6646  01173C  EFA2  F08B         	goto	u3680
  6647  011740                     u3681:
  6648  011740  EF7C  F08B         	goto	l4327
  6649  011744                     u3680:
  6650  011744  0012               	return		;funcret
  6651  011746                     __end_of_strcpy:
  6652                           	callstack 0
  6653                           
  6654 ;; *************** function _TX_Buffer2 *****************
  6655 ;; Defined at:
  6656 ;;		line 594 in file "main.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  buff            2   10[COMRAM] PTR unsigned char 
  6659 ;;		 -> lcd_print@Buffer(16), 
  6660 ;;  size            1   12[COMRAM] unsigned char 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  i               1   13[COMRAM] unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6672 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;Total ram usage:        4 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; Hardware stack levels required when called: 5
  6679 ;; This function calls:
  6680 ;;		_EUSART2_Write
  6681 ;; This function is called by:
  6682 ;;		_lcd_print
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text45
  6687  0119EE                     __ptext45:
  6688                           	callstack 0
  6689  0119EE                     _TX_Buffer2:
  6690                           	callstack 24
  6691  0119EE                     
  6692                           ;main.c: 595:         uint8_t i;;main.c: 597:         for(i=0; i<size; i++)
  6693  0119EE  0E00               	movlw	0
  6694  0119F0  6E0E               	movwf	TX_Buffer2@i^0,c
  6695  0119F2  EF05  F08D         	goto	l4335
  6696  0119F6                     l4331:
  6697                           
  6698                           ;main.c: 598:             EUSART2_Write(buff[i]);
  6699  0119F6  500E               	movf	TX_Buffer2@i^0,w,c
  6700  0119F8  240B               	addwf	TX_Buffer2@buff^0,w,c
  6701  0119FA  6ED9               	movwf	fsr2l,c
  6702  0119FC  0E00               	movlw	0
  6703  0119FE  200C               	addwfc	(TX_Buffer2@buff+1)^0,w,c
  6704  011A00  6EDA               	movwf	fsr2h,c
  6705  011A02  50DF               	movf	indf2,w,c
  6706  011A04  ECB0  F08D         	call	_EUSART2_Write
  6707  011A08  2A0E               	incf	TX_Buffer2@i^0,f,c
  6708  011A0A                     l4335:
  6709  011A0A  500D               	movf	TX_Buffer2@size^0,w,c
  6710  011A0C  5C0E               	subwf	TX_Buffer2@i^0,w,c
  6711  011A0E  A0D8               	btfss	status,0,c
  6712  011A10  EF0C  F08D         	goto	u3691
  6713  011A14  EF0E  F08D         	goto	u3690
  6714  011A18                     u3691:
  6715  011A18  EFFB  F08C         	goto	l4331
  6716  011A1C                     u3690:
  6717  011A1C  0012               	return		;funcret
  6718  011A1E                     __end_of_TX_Buffer2:
  6719                           	callstack 0
  6720                           
  6721 ;; *************** function _EUSART2_Write *****************
  6722 ;; Defined at:
  6723 ;;		line 132 in file "mcc_generated_files/eusart2.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  txData          1    wreg     unsigned char 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  txData          1    9[COMRAM] unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;Total ram usage:        1 bytes
  6742 ;; Hardware stack levels used: 1
  6743 ;; Hardware stack levels required when called: 4
  6744 ;; This function calls:
  6745 ;;		Nothing
  6746 ;; This function is called by:
  6747 ;;		_lcd_clear
  6748 ;;		_lcd_set_cursor
  6749 ;;		_TX_Buffer2
  6750 ;;		_lcd_turn_on
  6751 ;;		_lcd_set_brightness
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text46
  6756  011B60                     __ptext46:
  6757                           	callstack 0
  6758  011B60                     _EUSART2_Write:
  6759                           	callstack 25
  6760                           
  6761                           ;incstack = 0
  6762                           ;EUSART2_Write@txData stored from wreg
  6763  011B60  6E0A               	movwf	EUSART2_Write@txData^0,c
  6764  011B62                     l360:
  6765                           
  6766                           ;mcc_generated_files/eusart2.c: 134:     while(0 == PIR3bits.TX2IF)
  6767  011B62  010E               	movlb	14	; () banked
  6768  011B64  ADC8               	btfss	200,6,b	;volatile
  6769  011B66  EFB7  F08D         	goto	u3651
  6770  011B6A  EFB9  F08D         	goto	u3650
  6771  011B6E                     u3651:
  6772  011B6E  EFB1  F08D         	goto	l360
  6773  011B72                     u3650:
  6774  011B72                     
  6775                           ; BSR set to: 14
  6776                           ;mcc_generated_files/eusart2.c: 138:     TX2REG = txData;
  6777  011B72  C00A  FE95         	movff	EUSART2_Write@txData,3733	;volatile
  6778  011B76                     
  6779                           ; BSR set to: 14
  6780  011B76  0012               	return		;funcret
  6781  011B78                     __end_of_EUSART2_Write:
  6782                           	callstack 0
  6783                           
  6784 ;; *************** function _distance *****************
  6785 ;; Defined at:
  6786 ;;		line 601 in file "main.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  inch            4   25[COMRAM] float 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  2   25[COMRAM] unsigned int 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;Total ram usage:        4 bytes
  6805 ;; Hardware stack levels used: 1
  6806 ;; Hardware stack levels required when called: 5
  6807 ;; This function calls:
  6808 ;;		___fltol
  6809 ;;		___wmul
  6810 ;; This function is called by:
  6811 ;;		_LaySheetsOnTrays
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text47
  6816  011926                     __ptext47:
  6817                           	callstack 0
  6818  011926                     _distance:
  6819                           	callstack 24
  6820  011926                     
  6821                           ;main.c: 602:        return (uint16_t)inch*4064;
  6822  011926  C01A  F00A         	movff	distance@inch,___fltol@f1
  6823  01192A  C01B  F00B         	movff	distance@inch+1,___fltol@f1+1
  6824  01192E  C01C  F00C         	movff	distance@inch+2,___fltol@f1+2
  6825  011932  C01D  F00D         	movff	distance@inch+3,___fltol@f1+3
  6826  011936  EC28  F087         	call	___fltol	;wreg free
  6827  01193A  C00A  F014         	movff	?___fltol,___wmul@multiplier
  6828  01193E  C00B  F015         	movff	?___fltol+1,___wmul@multiplier+1
  6829  011942  0E0F               	movlw	15
  6830  011944  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  6831  011946  0EE0               	movlw	224
  6832  011948  6E16               	movwf	___wmul@multiplicand^0,c
  6833  01194A  EC4A  F08D         	call	___wmul	;wreg free
  6834  01194E  C014  F01A         	movff	?___wmul,?_distance
  6835  011952  C015  F01B         	movff	?___wmul+1,?_distance+1
  6836  011956  0012               	return		;funcret
  6837  011958                     __end_of_distance:
  6838                           	callstack 0
  6839                           
  6840 ;; *************** function ___wmul *****************
  6841 ;; Defined at:
  6842 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  multiplier      2   19[COMRAM] unsigned int 
  6845 ;;  multiplicand    2   21[COMRAM] unsigned int 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;  product         2   23[COMRAM] unsigned int 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2   19[COMRAM] unsigned int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0, prodl, prodh
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;Total ram usage:        6 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 4
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_distance
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text48
  6872  011A94                     __ptext48:
  6873                           	callstack 0
  6874  011A94                     ___wmul:
  6875                           	callstack 24
  6876  011A94  5014               	movf	___wmul@multiplier^0,w,c
  6877  011A96  0216               	mulwf	___wmul@multiplicand^0,c
  6878  011A98  CFF3 F018          	movff	prodl,___wmul@product
  6879  011A9C  CFF4 F019          	movff	prodh,___wmul@product+1
  6880  011AA0  5014               	movf	___wmul@multiplier^0,w,c
  6881  011AA2  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  6882  011AA4  50F3               	movf	243,w,c
  6883  011AA6  2619               	addwf	(___wmul@product+1)^0,f,c
  6884  011AA8  5015               	movf	(___wmul@multiplier+1)^0,w,c
  6885  011AAA  0216               	mulwf	___wmul@multiplicand^0,c
  6886  011AAC  50F3               	movf	243,w,c
  6887  011AAE  2619               	addwf	(___wmul@product+1)^0,f,c
  6888  011AB0  C018  F014         	movff	___wmul@product,?___wmul
  6889  011AB4  C019  F015         	movff	___wmul@product+1,?___wmul+1
  6890  011AB8  0012               	return		;funcret
  6891  011ABA                     __end_of___wmul:
  6892                           	callstack 0
  6893                           
  6894 ;; *************** function ___fltol *****************
  6895 ;; Defined at:
  6896 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  f1              4    9[COMRAM] unsigned int 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  exp1            1   18[COMRAM] unsigned char 
  6901 ;;  sign1           1   17[COMRAM] unsigned char 
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  4    9[COMRAM] long 
  6904 ;; Registers used:
  6905 ;;		wreg, status,2, status,0
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;Total ram usage:       10 bytes
  6916 ;; Hardware stack levels used: 1
  6917 ;; Hardware stack levels required when called: 4
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_distance
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text49
  6926  010E50                     __ptext49:
  6927                           	callstack 0
  6928  010E50                     ___fltol:
  6929                           	callstack 24
  6930  010E50  340C               	rlcf	(___fltol@f1+2)^0,w,c
  6931  010E52  340D               	rlcf	(___fltol@f1+3)^0,w,c
  6932  010E54  6E13               	movwf	___fltol@exp1^0,c
  6933  010E56  5013               	movf	___fltol@exp1^0,w,c
  6934  010E58  A4D8               	btfss	status,2,c
  6935  010E5A  EF31  F087         	goto	u3711
  6936  010E5E  EF33  F087         	goto	u3710
  6937  010E62                     u3711:
  6938  010E62  EF3D  F087         	goto	l4359
  6939  010E66                     u3710:
  6940  010E66                     l4355:
  6941  010E66  0E00               	movlw	0
  6942  010E68  6E0A               	movwf	?___fltol^0,c
  6943  010E6A  0E00               	movlw	0
  6944  010E6C  6E0B               	movwf	(?___fltol+1)^0,c
  6945  010E6E  0E00               	movlw	0
  6946  010E70  6E0C               	movwf	(?___fltol+2)^0,c
  6947  010E72  0E00               	movlw	0
  6948  010E74  6E0D               	movwf	(?___fltol+3)^0,c
  6949  010E76  EFAA  F087         	goto	l1058
  6950  010E7A                     l4359:
  6951  010E7A  C00A  F00E         	movff	___fltol@f1,??___fltol
  6952  010E7E  C00B  F00F         	movff	___fltol@f1+1,??___fltol+1
  6953  010E82  C00C  F010         	movff	___fltol@f1+2,??___fltol+2
  6954  010E86  C00D  F011         	movff	___fltol@f1+3,??___fltol+3
  6955  010E8A  0E20               	movlw	32
  6956  010E8C  EF4D  F087         	goto	u3720
  6957  010E90                     u3725:
  6958  010E90  90D8               	bcf	status,0,c
  6959  010E92  3211               	rrcf	(??___fltol+3)^0,f,c
  6960  010E94  3210               	rrcf	(??___fltol+2)^0,f,c
  6961  010E96  320F               	rrcf	(??___fltol+1)^0,f,c
  6962  010E98  320E               	rrcf	??___fltol^0,f,c
  6963  010E9A                     u3720:
  6964  010E9A  2EE8               	decfsz	wreg,f,c
  6965  010E9C  EF48  F087         	goto	u3725
  6966  010EA0  500E               	movf	??___fltol^0,w,c
  6967  010EA2  6E12               	movwf	___fltol@sign1^0,c
  6968  010EA4  8E0C               	bsf	(___fltol@f1+2)^0,7,c
  6969  010EA6  0EFF               	movlw	255
  6970  010EA8  160A               	andwf	___fltol@f1^0,f,c
  6971  010EAA  0EFF               	movlw	255
  6972  010EAC  160B               	andwf	(___fltol@f1+1)^0,f,c
  6973  010EAE  0EFF               	movlw	255
  6974  010EB0  160C               	andwf	(___fltol@f1+2)^0,f,c
  6975  010EB2  0E00               	movlw	0
  6976  010EB4  160D               	andwf	(___fltol@f1+3)^0,f,c
  6977  010EB6  0E96               	movlw	150
  6978  010EB8  5E13               	subwf	___fltol@exp1^0,f,c
  6979  010EBA  BE13               	btfsc	___fltol@exp1^0,7,c
  6980  010EBC  EF64  F087         	goto	u3730
  6981  010EC0  EF62  F087         	goto	u3731
  6982  010EC4                     u3731:
  6983  010EC4  EF7A  F087         	goto	l4379
  6984  010EC8                     u3730:
  6985  010EC8  5013               	movf	___fltol@exp1^0,w,c
  6986  010ECA  0A80               	xorlw	128
  6987  010ECC  0F97               	addlw	151
  6988  010ECE  B0D8               	btfsc	status,0,c
  6989  010ED0  EF6C  F087         	goto	u3741
  6990  010ED4  EF6E  F087         	goto	u3740
  6991  010ED8                     u3741:
  6992  010ED8  EF70  F087         	goto	l4375
  6993  010EDC                     u3740:
  6994  010EDC  EF33  F087         	goto	l4355
  6995  010EE0                     l4375:
  6996  010EE0  90D8               	bcf	status,0,c
  6997  010EE2  320D               	rrcf	(___fltol@f1+3)^0,f,c
  6998  010EE4  320C               	rrcf	(___fltol@f1+2)^0,f,c
  6999  010EE6  320B               	rrcf	(___fltol@f1+1)^0,f,c
  7000  010EE8  320A               	rrcf	___fltol@f1^0,f,c
  7001  010EEA  3E13               	incfsz	___fltol@exp1^0,f,c
  7002  010EEC  EF70  F087         	goto	l4375
  7003  010EF0  EF92  F087         	goto	l4389
  7004  010EF4                     l4379:
  7005  010EF4  0E1F               	movlw	31
  7006  010EF6  6413               	cpfsgt	___fltol@exp1^0,c
  7007  010EF8  EF80  F087         	goto	u3751
  7008  010EFC  EF82  F087         	goto	u3750
  7009  010F00                     u3751:
  7010  010F00  EF8A  F087         	goto	l4387
  7011  010F04                     u3750:
  7012  010F04  EF33  F087         	goto	l4355
  7013  010F08                     l4385:
  7014  010F08  90D8               	bcf	status,0,c
  7015  010F0A  360A               	rlcf	___fltol@f1^0,f,c
  7016  010F0C  360B               	rlcf	(___fltol@f1+1)^0,f,c
  7017  010F0E  360C               	rlcf	(___fltol@f1+2)^0,f,c
  7018  010F10  360D               	rlcf	(___fltol@f1+3)^0,f,c
  7019  010F12  0613               	decf	___fltol@exp1^0,f,c
  7020  010F14                     l4387:
  7021  010F14  5013               	movf	___fltol@exp1^0,w,c
  7022  010F16  A4D8               	btfss	status,2,c
  7023  010F18  EF90  F087         	goto	u3761
  7024  010F1C  EF92  F087         	goto	u3760
  7025  010F20                     u3761:
  7026  010F20  EF84  F087         	goto	l4385
  7027  010F24                     u3760:
  7028  010F24                     l4389:
  7029  010F24  5012               	movf	___fltol@sign1^0,w,c
  7030  010F26  B4D8               	btfsc	status,2,c
  7031  010F28  EF98  F087         	goto	u3771
  7032  010F2C  EF9A  F087         	goto	u3770
  7033  010F30                     u3771:
  7034  010F30  EFA2  F087         	goto	l4393
  7035  010F34                     u3770:
  7036  010F34  1E0D               	comf	(___fltol@f1+3)^0,f,c
  7037  010F36  1E0C               	comf	(___fltol@f1+2)^0,f,c
  7038  010F38  1E0B               	comf	(___fltol@f1+1)^0,f,c
  7039  010F3A  6C0A               	negf	___fltol@f1^0,c
  7040  010F3C  0E00               	movlw	0
  7041  010F3E  220B               	addwfc	(___fltol@f1+1)^0,f,c
  7042  010F40  220C               	addwfc	(___fltol@f1+2)^0,f,c
  7043  010F42  220D               	addwfc	(___fltol@f1+3)^0,f,c
  7044  010F44                     l4393:
  7045  010F44  C00A  F00A         	movff	___fltol@f1,?___fltol
  7046  010F48  C00B  F00B         	movff	___fltol@f1+1,?___fltol+1
  7047  010F4C  C00C  F00C         	movff	___fltol@f1+2,?___fltol+2
  7048  010F50  C00D  F00D         	movff	___fltol@f1+3,?___fltol+3
  7049  010F54                     l1058:
  7050  010F54  0012               	return		;funcret
  7051  010F56                     __end_of___fltol:
  7052                           	callstack 0
  7053                           
  7054 ;; *************** function _INTERRUPT_InterruptManager *****************
  7055 ;; Defined at:
  7056 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7072 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7074 ;;Total ram usage:        4 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; Hardware stack levels required when called: 3
  7077 ;; This function calls:
  7078 ;;		Absolute function
  7079 ;;		_EUSART1_Receive_ISR
  7080 ;;		_INT0_ISR
  7081 ;;		_INT1_ISR
  7082 ;;		_INT2_ISR
  7083 ;; This function is called by:
  7084 ;;		Interrupt level 2
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           	psect	intcode
  7089  000008                     __pintcode:
  7090                           	callstack 0
  7091  000008                     _INTERRUPT_InterruptManager:
  7092                           	callstack 17
  7093                           
  7094                           ;incstack = 0
  7095  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7096  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  7097  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7098  000012  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7099  000016  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7100  00001A                     
  7101                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.INT0IE == 1 && PIR0bits.IN
      +                          T0IF == 1)
  7102  00001A  010E               	movlb	14	; () banked
  7103  00001C  A1BD               	btfss	189,0,b	;volatile
  7104  00001E  EF13  F000         	goto	i2u280_41
  7105  000022  EF15  F000         	goto	i2u280_40
  7106  000026                     i2u280_41:
  7107  000026  EF20  F000         	goto	i2l407
  7108  00002A                     i2u280_40:
  7109  00002A                     
  7110                           ; BSR set to: 14
  7111  00002A  A1C5               	btfss	197,0,b	;volatile
  7112  00002C  EF1A  F000         	goto	i2u281_41
  7113  000030  EF1C  F000         	goto	i2u281_40
  7114  000034                     i2u281_41:
  7115  000034  EF20  F000         	goto	i2l407
  7116  000038                     i2u281_40:
  7117  000038                     
  7118                           ; BSR set to: 14
  7119                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  7120  000038  EC1C  F08E         	call	_INT0_ISR	;wreg free
  7121                           
  7122                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  7123  00003C  EF69  F000         	goto	i2l417
  7124  000040                     i2l407:
  7125                           
  7126                           ; BSR set to: 14
  7127  000040  A3BD               	btfss	189,1,b	;volatile
  7128  000042  EF25  F000         	goto	i2u282_41
  7129  000046  EF27  F000         	goto	i2u282_40
  7130  00004A                     i2u282_41:
  7131  00004A  EF32  F000         	goto	i2l409
  7132  00004E                     i2u282_40:
  7133  00004E                     
  7134                           ; BSR set to: 14
  7135  00004E  A3C5               	btfss	197,1,b	;volatile
  7136  000050  EF2C  F000         	goto	i2u283_41
  7137  000054  EF2E  F000         	goto	i2u283_40
  7138  000058                     i2u283_41:
  7139  000058  EF32  F000         	goto	i2l409
  7140  00005C                     i2u283_40:
  7141  00005C                     
  7142                           ; BSR set to: 14
  7143                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         INT1_ISR();
  7144  00005C  EC17  F08E         	call	_INT1_ISR	;wreg free
  7145                           
  7146                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  7147  000060  EF69  F000         	goto	i2l417
  7148  000064                     i2l409:
  7149                           
  7150                           ; BSR set to: 14
  7151  000064  A5BD               	btfss	189,2,b	;volatile
  7152  000066  EF37  F000         	goto	i2u284_41
  7153  00006A  EF39  F000         	goto	i2u284_40
  7154  00006E                     i2u284_41:
  7155  00006E  EF44  F000         	goto	i2l411
  7156  000072                     i2u284_40:
  7157  000072                     
  7158                           ; BSR set to: 14
  7159  000072  A5C5               	btfss	197,2,b	;volatile
  7160  000074  EF3E  F000         	goto	i2u285_41
  7161  000078  EF40  F000         	goto	i2u285_40
  7162  00007C                     i2u285_41:
  7163  00007C  EF44  F000         	goto	i2l411
  7164  000080                     i2u285_40:
  7165  000080                     
  7166                           ; BSR set to: 14
  7167                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         INT2_ISR();
  7168  000080  EC12  F08E         	call	_INT2_ISR	;wreg free
  7169                           
  7170                           ;mcc_generated_files/interrupt_manager.c: 72:     }
  7171  000084  EF69  F000         	goto	i2l417
  7172  000088                     i2l411:
  7173                           
  7174                           ; BSR set to: 14
  7175  000088  ACF2               	btfss	242,6,c	;volatile
  7176  00008A  EF49  F000         	goto	i2u286_41
  7177  00008E  EF4B  F000         	goto	i2u286_40
  7178  000092                     i2u286_41:
  7179  000092  EF69  F000         	goto	i2l412
  7180  000096                     i2u286_40:
  7181  000096                     
  7182                           ; BSR set to: 14
  7183                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         if(PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1)
  7184  000096  ABC0               	btfss	192,5,b	;volatile
  7185  000098  EF50  F000         	goto	i2u287_41
  7186  00009C  EF52  F000         	goto	i2u287_40
  7187  0000A0                     i2u287_41:
  7188  0000A0  EF69  F000         	goto	i2l412
  7189  0000A4                     i2u287_40:
  7190  0000A4                     
  7191                           ; BSR set to: 14
  7192  0000A4  ABC8               	btfss	200,5,b	;volatile
  7193  0000A6  EF57  F000         	goto	i2u288_41
  7194  0000AA  EF59  F000         	goto	i2u288_40
  7195  0000AE                     i2u288_41:
  7196  0000AE  EF69  F000         	goto	i2l412
  7197  0000B2                     i2u288_40:
  7198  0000B2                     
  7199                           ; BSR set to: 14
  7200                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  7201  0000B2  D802               	call	i2u289_48
  7202  0000B4  EF67  F000         	goto	i2u289_49
  7203  0000B8                     i2u289_48:
  7204  0000B8  0005               	push	
  7205  0000BA  6EFA               	movwf	pclath,c
  7206  0000BC  0101               	movlb	1	; () banked
  7207  0000BE  515D               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  7208  0000C0  6EFD               	movwf	tosl,c
  7209  0000C2  515E               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  7210  0000C4  6EFE               	movwf	tosh,c
  7211  0000C6  515F               	movf	(_EUSART1_RxDefaultInterruptHandler+2)& (0+255),w,b
  7212  0000C8  6EFF               	movwf	tosu,c
  7213  0000CA  50FA               	movf	pclath,w,c
  7214  0000CC  0012               	return		;indir
  7215  0000CE                     i2u289_49:
  7216                           
  7217                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  7218  0000CE  EF69  F000         	goto	i2l417
  7219  0000D2                     i2l412:
  7220  0000D2                     i2l417:
  7221  0000D2  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  7222  0000D6  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  7223  0000DA  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7224  0000DE  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7225  0000E2  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7226  0000E4  0011               	retfie		f
  7227  0000E6                     __end_of_INTERRUPT_InterruptManager:
  7228                           	callstack 0
  7229                           
  7230 ;; *************** function _INT2_ISR *****************
  7231 ;; Defined at:
  7232 ;;		line 130 in file "mcc_generated_files/ext_int.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; Hardware stack levels required when called: 2
  7253 ;; This function calls:
  7254 ;;		_INT2_CallBack
  7255 ;; This function is called by:
  7256 ;;		_INTERRUPT_InterruptManager
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text51
  7261  011C24                     __ptext51:
  7262                           	callstack 0
  7263  011C24                     _INT2_ISR:
  7264                           	callstack 17
  7265  011C24                     
  7266                           ;mcc_generated_files/ext_int.c: 132:     (PIR0bits.INT2IF = 0);
  7267  011C24  010E               	movlb	14	; () banked
  7268  011C26  95C5               	bcf	197,2,b	;volatile
  7269  011C28                     
  7270                           ; BSR set to: 14
  7271                           ;mcc_generated_files/ext_int.c: 135:     INT2_CallBack();
  7272  011C28  ECAC  F08C         	call	_INT2_CallBack	;wreg free
  7273  011C2C  0012               	return		;funcret
  7274  011C2E                     __end_of_INT2_ISR:
  7275                           	callstack 0
  7276                           
  7277 ;; *************** function _INT2_CallBack *****************
  7278 ;; Defined at:
  7279 ;;		line 139 in file "mcc_generated_files/ext_int.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;		None
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;		None
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7297 ;;Total ram usage:        0 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; Hardware stack levels required when called: 1
  7300 ;; This function calls:
  7301 ;;		Absolute function
  7302 ;;		_INT2_DefaultInterruptHandler
  7303 ;; This function is called by:
  7304 ;;		_INT2_ISR
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text52
  7309  011958                     __ptext52:
  7310                           	callstack 0
  7311  011958                     _INT2_CallBack:
  7312                           	callstack 17
  7313  011958                     
  7314                           ;mcc_generated_files/ext_int.c: 142:     if(INT2_InterruptHandler)
  7315  011958  0101               	movlb	1	; () banked
  7316  01195A  514B               	movf	_INT2_InterruptHandler& (0+255),w,b
  7317  01195C  114C               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  7318  01195E  114D               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
  7319  011960  B4D8               	btfsc	status,2,c
  7320  011962  EFB5  F08C         	goto	i2u242_41
  7321  011966  EFB7  F08C         	goto	i2u242_40
  7322  01196A                     i2u242_41:
  7323  01196A  EFC4  F08C         	goto	i2l284
  7324  01196E                     i2u242_40:
  7325  01196E                     
  7326                           ; BSR set to: 1
  7327                           ;mcc_generated_files/ext_int.c: 143:     {;mcc_generated_files/ext_int.c: 144:         I
      +                          NT2_InterruptHandler();
  7328  01196E  D802               	call	i2u243_48
  7329  011970  EFC4  F08C         	goto	i2u243_49
  7330  011974                     i2u243_48:
  7331  011974  0005               	push	
  7332  011976  6EFA               	movwf	pclath,c
  7333  011978  514B               	movf	_INT2_InterruptHandler& (0+255),w,b
  7334  01197A  6EFD               	movwf	tosl,c
  7335  01197C  514C               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  7336  01197E  6EFE               	movwf	tosh,c
  7337  011980  514D               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
  7338  011982  6EFF               	movwf	tosu,c
  7339  011984  50FA               	movf	pclath,w,c
  7340  011986  0012               	return		;indir
  7341  011988                     i2u243_49:
  7342  011988                     i2l284:
  7343  011988  0012               	return		;funcret
  7344  01198A                     __end_of_INT2_CallBack:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function _INT2_DefaultInterruptHandler *****************
  7348 ;; Defined at:
  7349 ;;		line 152 in file "mcc_generated_files/ext_int.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		None
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7367 ;;Total ram usage:        0 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_EXT_INT_Initialize
  7373 ;;		_INT2_CallBack
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text53
  7378  011C54                     __ptext53:
  7379                           	callstack 0
  7380  011C54                     _INT2_DefaultInterruptHandler:
  7381                           	callstack 17
  7382  011C54  0012               	return		;funcret
  7383  011C56                     __end_of_INT2_DefaultInterruptHandler:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function _INT1_ISR *****************
  7387 ;; Defined at:
  7388 ;;		line 104 in file "mcc_generated_files/ext_int.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used: 1
  7408 ;; Hardware stack levels required when called: 2
  7409 ;; This function calls:
  7410 ;;		_INT1_CallBack
  7411 ;; This function is called by:
  7412 ;;		_INTERRUPT_InterruptManager
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text54
  7417  011C2E                     __ptext54:
  7418                           	callstack 0
  7419  011C2E                     _INT1_ISR:
  7420                           	callstack 17
  7421  011C2E                     
  7422                           ;mcc_generated_files/ext_int.c: 106:     (PIR0bits.INT1IF = 0);
  7423  011C2E  010E               	movlb	14	; () banked
  7424  011C30  93C5               	bcf	197,1,b	;volatile
  7425  011C32                     
  7426                           ; BSR set to: 14
  7427                           ;mcc_generated_files/ext_int.c: 109:     INT1_CallBack();
  7428  011C32  ECC5  F08C         	call	_INT1_CallBack	;wreg free
  7429  011C36  0012               	return		;funcret
  7430  011C38                     __end_of_INT1_ISR:
  7431                           	callstack 0
  7432                           
  7433 ;; *************** function _INT1_CallBack *****************
  7434 ;; Defined at:
  7435 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;		None
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1    wreg      void 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;Total ram usage:        0 bytes
  7454 ;; Hardware stack levels used: 1
  7455 ;; Hardware stack levels required when called: 1
  7456 ;; This function calls:
  7457 ;;		Absolute function
  7458 ;;		_INT1_DefaultInterruptHandler
  7459 ;; This function is called by:
  7460 ;;		_INT1_ISR
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text55
  7465  01198A                     __ptext55:
  7466                           	callstack 0
  7467  01198A                     _INT1_CallBack:
  7468                           	callstack 17
  7469  01198A                     
  7470                           ;mcc_generated_files/ext_int.c: 116:     if(INT1_InterruptHandler)
  7471  01198A  0101               	movlb	1	; () banked
  7472  01198C  514E               	movf	_INT1_InterruptHandler& (0+255),w,b
  7473  01198E  114F               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  7474  011990  1150               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
  7475  011992  B4D8               	btfsc	status,2,c
  7476  011994  EFCE  F08C         	goto	i2u240_41
  7477  011998  EFD0  F08C         	goto	i2u240_40
  7478  01199C                     i2u240_41:
  7479  01199C  EFDD  F08C         	goto	i2l271
  7480  0119A0                     i2u240_40:
  7481  0119A0                     
  7482                           ; BSR set to: 1
  7483                           ;mcc_generated_files/ext_int.c: 117:     {;mcc_generated_files/ext_int.c: 118:         I
      +                          NT1_InterruptHandler();
  7484  0119A0  D802               	call	i2u241_48
  7485  0119A2  EFDD  F08C         	goto	i2u241_49
  7486  0119A6                     i2u241_48:
  7487  0119A6  0005               	push	
  7488  0119A8  6EFA               	movwf	pclath,c
  7489  0119AA  514E               	movf	_INT1_InterruptHandler& (0+255),w,b
  7490  0119AC  6EFD               	movwf	tosl,c
  7491  0119AE  514F               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  7492  0119B0  6EFE               	movwf	tosh,c
  7493  0119B2  5150               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
  7494  0119B4  6EFF               	movwf	tosu,c
  7495  0119B6  50FA               	movf	pclath,w,c
  7496  0119B8  0012               	return		;indir
  7497  0119BA                     i2u241_49:
  7498  0119BA                     i2l271:
  7499  0119BA  0012               	return		;funcret
  7500  0119BC                     __end_of_INT1_CallBack:
  7501                           	callstack 0
  7502                           
  7503 ;; *************** function _INT1_DefaultInterruptHandler *****************
  7504 ;; Defined at:
  7505 ;;		line 126 in file "mcc_generated_files/ext_int.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		None
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_EXT_INT_Initialize
  7529 ;;		_INT1_CallBack
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text56
  7534  011C56                     __ptext56:
  7535                           	callstack 0
  7536  011C56                     _INT1_DefaultInterruptHandler:
  7537                           	callstack 17
  7538  011C56  0012               	return		;funcret
  7539  011C58                     __end_of_INT1_DefaultInterruptHandler:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _INT0_ISR *****************
  7543 ;; Defined at:
  7544 ;;		line 46 in file "mcc_generated_files/ext_int.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used: 1
  7564 ;; Hardware stack levels required when called: 2
  7565 ;; This function calls:
  7566 ;;		_INT0_CallBack
  7567 ;; This function is called by:
  7568 ;;		_INTERRUPT_InterruptManager
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text57
  7573  011C38                     __ptext57:
  7574                           	callstack 0
  7575  011C38                     _INT0_ISR:
  7576                           	callstack 17
  7577  011C38                     
  7578                           ;mcc_generated_files/ext_int.c: 48:     (PIR0bits.INT0IF = 0);
  7579  011C38  010E               	movlb	14	; () banked
  7580  011C3A  91C5               	bcf	197,0,b	;volatile
  7581  011C3C                     
  7582                           ; BSR set to: 14
  7583                           ;mcc_generated_files/ext_int.c: 51:     INT0_CallBack();
  7584  011C3C  ECDE  F08C         	call	_INT0_CallBack	;wreg free
  7585  011C40  0012               	return		;funcret
  7586  011C42                     __end_of_INT0_ISR:
  7587                           	callstack 0
  7588                           
  7589 ;; *************** function _INT0_CallBack *****************
  7590 ;; Defined at:
  7591 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;		None
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;		None
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  1    wreg      void 
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7609 ;;Total ram usage:        0 bytes
  7610 ;; Hardware stack levels used: 1
  7611 ;; Hardware stack levels required when called: 1
  7612 ;; This function calls:
  7613 ;;		Absolute function
  7614 ;;		_INT0_DefaultInterruptHandler
  7615 ;; This function is called by:
  7616 ;;		_INT0_ISR
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           	psect	text58
  7621  0119BC                     __ptext58:
  7622                           	callstack 0
  7623  0119BC                     _INT0_CallBack:
  7624                           	callstack 17
  7625  0119BC                     
  7626                           ;mcc_generated_files/ext_int.c: 58:     if(INT0_InterruptHandler)
  7627  0119BC  0101               	movlb	1	; () banked
  7628  0119BE  5151               	movf	_INT0_InterruptHandler& (0+255),w,b
  7629  0119C0  1152               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
  7630  0119C2  1153               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
  7631  0119C4  B4D8               	btfsc	status,2,c
  7632  0119C6  EFE7  F08C         	goto	i2u238_41
  7633  0119CA  EFE9  F08C         	goto	i2u238_40
  7634  0119CE                     i2u238_41:
  7635  0119CE  EFF6  F08C         	goto	i2l245
  7636  0119D2                     i2u238_40:
  7637  0119D2                     
  7638                           ; BSR set to: 1
  7639                           ;mcc_generated_files/ext_int.c: 59:     {;mcc_generated_files/ext_int.c: 60:         INT
      +                          0_InterruptHandler();
  7640  0119D2  D802               	call	i2u239_48
  7641  0119D4  EFF6  F08C         	goto	i2u239_49
  7642  0119D8                     i2u239_48:
  7643  0119D8  0005               	push	
  7644  0119DA  6EFA               	movwf	pclath,c
  7645  0119DC  5151               	movf	_INT0_InterruptHandler& (0+255),w,b
  7646  0119DE  6EFD               	movwf	tosl,c
  7647  0119E0  5152               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
  7648  0119E2  6EFE               	movwf	tosh,c
  7649  0119E4  5153               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
  7650  0119E6  6EFF               	movwf	tosu,c
  7651  0119E8  50FA               	movf	pclath,w,c
  7652  0119EA  0012               	return		;indir
  7653  0119EC                     i2u239_49:
  7654  0119EC                     i2l245:
  7655  0119EC  0012               	return		;funcret
  7656  0119EE                     __end_of_INT0_CallBack:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _INT0_DefaultInterruptHandler *****************
  7660 ;; Defined at:
  7661 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;Total ram usage:        5 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_EXT_INT_Initialize
  7685 ;;		_INT0_CallBack
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text59
  7690  011364                     __ptext59:
  7691                           	callstack 0
  7692  011364                     _INT0_DefaultInterruptHandler:
  7693                           	callstack 17
  7694  011364                     
  7695                           ;mcc_generated_files/ext_int.c: 72:     if(PORTCbits.RC0==0)
  7696  011364  B08E               	btfsc	142,0,c	;volatile
  7697  011366  EFB7  F089         	goto	i2u223_41
  7698  01136A  EFB9  F089         	goto	i2u223_40
  7699  01136E                     i2u223_41:
  7700  01136E  EFC4  F089         	goto	i2l3207
  7701  011372                     i2u223_40:
  7702  011372                     
  7703                           ;mcc_generated_files/ext_int.c: 73:         count--;
  7704  011372  0EFF               	movlw	255
  7705  011374  0101               	movlb	1	; () banked
  7706  011376  2714               	addwf	_count& (0+255),f,b
  7707  011378  0EFF               	movlw	255
  7708  01137A  2315               	addwfc	(_count+1)& (0+255),f,b
  7709  01137C  0EFF               	movlw	255
  7710  01137E  2316               	addwfc	(_count+2)& (0+255),f,b
  7711  011380  0EFF               	movlw	255
  7712  011382  2317               	addwfc	(_count+3)& (0+255),f,b
  7713  011384  EFCB  F089         	goto	i2l252
  7714  011388                     i2l3207:
  7715                           
  7716                           ;mcc_generated_files/ext_int.c: 75:         count++;
  7717  011388  0E01               	movlw	1
  7718  01138A  0101               	movlb	1	; () banked
  7719  01138C  2714               	addwf	_count& (0+255),f,b
  7720  01138E  0E00               	movlw	0
  7721  011390  2315               	addwfc	(_count+1)& (0+255),f,b
  7722  011392  2316               	addwfc	(_count+2)& (0+255),f,b
  7723  011394  2317               	addwfc	(_count+3)& (0+255),f,b
  7724  011396                     i2l252:
  7725                           
  7726                           ; BSR set to: 1
  7727                           ;mcc_generated_files/ext_int.c: 76:     if(count<0)
  7728  011396  BF17               	btfsc	(_count+3)& (0+255),7,b
  7729  011398  EFD2  F089         	goto	i2u224_40
  7730  01139C  EFD0  F089         	goto	i2u224_41
  7731  0113A0                     i2u224_41:
  7732  0113A0  EFDA  F089         	goto	i2l3211
  7733  0113A4                     i2u224_40:
  7734  0113A4                     
  7735                           ; BSR set to: 1
  7736                           ;mcc_generated_files/ext_int.c: 77:         count = 0;
  7737  0113A4  0E00               	movlw	0
  7738  0113A6  6F14               	movwf	_count& (0+255),b
  7739  0113A8  0E00               	movlw	0
  7740  0113AA  6F15               	movwf	(_count+1)& (0+255),b
  7741  0113AC  0E00               	movlw	0
  7742  0113AE  6F16               	movwf	(_count+2)& (0+255),b
  7743  0113B0  0E00               	movlw	0
  7744  0113B2  6F17               	movwf	(_count+3)& (0+255),b
  7745  0113B4                     i2l3211:
  7746                           
  7747                           ; BSR set to: 1
  7748                           ;mcc_generated_files/ext_int.c: 78:     if(count>16000)
  7749  0113B4  BF17               	btfsc	(_count+3)& (0+255),7,b
  7750  0113B6  EFE9  F089         	goto	i2u225_41
  7751  0113BA  5117               	movf	(_count+3)& (0+255),w,b
  7752  0113BC  1116               	iorwf	(_count+2)& (0+255),w,b
  7753  0113BE  E10B               	bnz	i2u225_40
  7754  0113C0  0E81               	movlw	129
  7755  0113C2  5D14               	subwf	_count& (0+255),w,b
  7756  0113C4  0E3E               	movlw	62
  7757  0113C6  5915               	subwfb	(_count+1)& (0+255),w,b
  7758  0113C8  A0D8               	btfss	status,0,c
  7759  0113CA  EFE9  F089         	goto	i2u225_41
  7760  0113CE  EFEB  F089         	goto	i2u225_40
  7761  0113D2                     i2u225_41:
  7762  0113D2  EFF3  F089         	goto	i2l3215
  7763  0113D6                     i2u225_40:
  7764  0113D6                     
  7765                           ; BSR set to: 1
  7766                           ;mcc_generated_files/ext_int.c: 79:         count = 16000;
  7767  0113D6  0E80               	movlw	128
  7768  0113D8  6F14               	movwf	_count& (0+255),b
  7769  0113DA  0E3E               	movlw	62
  7770  0113DC  6F15               	movwf	(_count+1)& (0+255),b
  7771  0113DE  0E00               	movlw	0
  7772  0113E0  6F16               	movwf	(_count+2)& (0+255),b
  7773  0113E2  0E00               	movlw	0
  7774  0113E4  6F17               	movwf	(_count+3)& (0+255),b
  7775  0113E6                     i2l3215:
  7776                           
  7777                           ; BSR set to: 1
  7778                           ;mcc_generated_files/ext_int.c: 81:     scaledValue = count>>5;
  7779  0113E6  0E05               	movlw	5
  7780  0113E8  6E01               	movwf	??_INT0_DefaultInterruptHandler^0,c
  7781  0113EA  C114  F002         	movff	_count,??_INT0_DefaultInterruptHandler+1
  7782  0113EE  C115  F003         	movff	_count+1,??_INT0_DefaultInterruptHandler+2
  7783  0113F2  C116  F004         	movff	_count+2,??_INT0_DefaultInterruptHandler+3
  7784  0113F6  C117  F005         	movff	_count+3,??_INT0_DefaultInterruptHandler+4
  7785  0113FA                     i2u226_45:
  7786  0113FA  6601               	tstfsz	??_INT0_DefaultInterruptHandler^0,c
  7787  0113FC  EF02  F08A         	goto	i2u226_46
  7788  011400  EF0A  F08A         	goto	i2u226_47
  7789  011404                     i2u226_46:
  7790  011404  3405               	rlcf	(??_INT0_DefaultInterruptHandler+4)^0,w,c
  7791  011406  3205               	rrcf	(??_INT0_DefaultInterruptHandler+4)^0,f,c
  7792  011408  3204               	rrcf	(??_INT0_DefaultInterruptHandler+3)^0,f,c
  7793  01140A  3203               	rrcf	(??_INT0_DefaultInterruptHandler+2)^0,f,c
  7794  01140C  3202               	rrcf	(??_INT0_DefaultInterruptHandler+1)^0,f,c
  7795  01140E  2E01               	decfsz	??_INT0_DefaultInterruptHandler^0,f,c
  7796  011410  EFFD  F089         	goto	i2u226_45
  7797  011414                     i2u226_47:
  7798  011414  C002  F11E         	movff	??_INT0_DefaultInterruptHandler+1,_scaledValue
  7799  011418  C003  F11F         	movff	??_INT0_DefaultInterruptHandler+2,_scaledValue+1
  7800  01141C  0012               	return		;funcret
  7801  01141E                     __end_of_INT0_DefaultInterruptHandler:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function _EUSART1_Receive_ISR *****************
  7805 ;; Defined at:
  7806 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 2
  7827 ;; This function calls:
  7828 ;;		Absolute function
  7829 ;;		_EUSART1_DefaultErrorHandler
  7830 ;;		_EUSART1_DefaultFramingErrorHandler
  7831 ;;		_EUSART1_DefaultOverrunErrorHandler
  7832 ;;		_EUSART1_RxDataHandler
  7833 ;; This function is called by:
  7834 ;;		_EUSART1_Initialize
  7835 ;;		_INTERRUPT_InterruptManager
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839                           	psect	text60
  7840  0112A2                     __ptext60:
  7841                           	callstack 0
  7842  0112A2                     _EUSART1_Receive_ISR:
  7843                           	callstack 17
  7844  0112A2                     
  7845                           ;mcc_generated_files/eusart1.c: 176:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  7846  0112A2  0E00               	movlw	low _eusart1RxStatusBuffer
  7847  0112A4  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  7848  0112A6  6ED9               	movwf	fsr2l,c
  7849  0112A8  6ADA               	clrf	fsr2h,c
  7850  0112AA  0E01               	movlw	high _eusart1RxStatusBuffer
  7851  0112AC  22DA               	addwfc	fsr2h,f,c
  7852  0112AE  0E00               	movlw	0
  7853  0112B0  6EDF               	movwf	indf2,c
  7854  0112B2                     
  7855                           ;mcc_generated_files/eusart1.c: 178:     if(RC1STAbits.FERR){
  7856  0112B2  A49C               	btfss	156,2,c	;volatile
  7857  0112B4  EF5E  F089         	goto	i2u244_41
  7858  0112B8  EF60  F089         	goto	i2u244_40
  7859  0112BC                     i2u244_41:
  7860  0112BC  EF75  F089         	goto	i2l3455
  7861  0112C0                     i2u244_40:
  7862  0112C0                     
  7863                           ;mcc_generated_files/eusart1.c: 179:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  7864  0112C0  0E00               	movlw	low _eusart1RxStatusBuffer
  7865  0112C2  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  7866  0112C4  6ED9               	movwf	fsr2l,c
  7867  0112C6  6ADA               	clrf	fsr2h,c
  7868  0112C8  0E01               	movlw	high _eusart1RxStatusBuffer
  7869  0112CA  22DA               	addwfc	fsr2h,f,c
  7870  0112CC  0101               	movlb	1	; () banked
  7871  0112CE  82DF               	bsf	indf2,1,c
  7872  0112D0                     
  7873                           ; BSR set to: 1
  7874                           ;mcc_generated_files/eusart1.c: 180:         EUSART1_FramingErrorHandler();
  7875  0112D0  D802               	call	i2u245_48
  7876  0112D2  EF75  F089         	goto	i2u245_49
  7877  0112D6                     i2u245_48:
  7878  0112D6  0005               	push	
  7879  0112D8  6EFA               	movwf	pclath,c
  7880  0112DA  515A               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  7881  0112DC  6EFD               	movwf	tosl,c
  7882  0112DE  515B               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  7883  0112E0  6EFE               	movwf	tosh,c
  7884  0112E2  515C               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  7885  0112E4  6EFF               	movwf	tosu,c
  7886  0112E6  50FA               	movf	pclath,w,c
  7887  0112E8  0012               	return		;indir
  7888  0112EA                     i2u245_49:
  7889  0112EA                     i2l3455:
  7890                           
  7891                           ;mcc_generated_files/eusart1.c: 183:     if(RC1STAbits.OERR){
  7892  0112EA  A29C               	btfss	156,1,c	;volatile
  7893  0112EC  EF7A  F089         	goto	i2u246_41
  7894  0112F0  EF7C  F089         	goto	i2u246_40
  7895  0112F4                     i2u246_41:
  7896  0112F4  EF91  F089         	goto	i2l3461
  7897  0112F8                     i2u246_40:
  7898  0112F8                     
  7899                           ;mcc_generated_files/eusart1.c: 184:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  7900  0112F8  0E00               	movlw	low _eusart1RxStatusBuffer
  7901  0112FA  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  7902  0112FC  6ED9               	movwf	fsr2l,c
  7903  0112FE  6ADA               	clrf	fsr2h,c
  7904  011300  0E01               	movlw	high _eusart1RxStatusBuffer
  7905  011302  22DA               	addwfc	fsr2h,f,c
  7906  011304  0101               	movlb	1	; () banked
  7907  011306  84DF               	bsf	indf2,2,c
  7908  011308                     
  7909                           ; BSR set to: 1
  7910                           ;mcc_generated_files/eusart1.c: 185:         EUSART1_OverrunErrorHandler();
  7911  011308  D802               	call	i2u247_48
  7912  01130A  EF91  F089         	goto	i2u247_49
  7913  01130E                     i2u247_48:
  7914  01130E  0005               	push	
  7915  011310  6EFA               	movwf	pclath,c
  7916  011312  5157               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  7917  011314  6EFD               	movwf	tosl,c
  7918  011316  5158               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  7919  011318  6EFE               	movwf	tosh,c
  7920  01131A  5159               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  7921  01131C  6EFF               	movwf	tosu,c
  7922  01131E  50FA               	movf	pclath,w,c
  7923  011320  0012               	return		;indir
  7924  011322                     i2u247_49:
  7925  011322                     i2l3461:
  7926                           
  7927                           ;mcc_generated_files/eusart1.c: 188:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  7928  011322  0E00               	movlw	low _eusart1RxStatusBuffer
  7929  011324  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  7930  011326  6ED9               	movwf	fsr2l,c
  7931  011328  6ADA               	clrf	fsr2h,c
  7932  01132A  0E01               	movlw	high _eusart1RxStatusBuffer
  7933  01132C  22DA               	addwfc	fsr2h,f,c
  7934  01132E  50DF               	movf	indf2,w,c
  7935  011330  B4D8               	btfsc	status,2,c
  7936  011332  EF9D  F089         	goto	i2u248_41
  7937  011336  EF9F  F089         	goto	i2u248_40
  7938  01133A                     i2u248_41:
  7939  01133A  EFAF  F089         	goto	i2l3465
  7940  01133E                     i2u248_40:
  7941  01133E                     
  7942                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_ErrorHandler();
  7943  01133E  D802               	call	i2u249_48
  7944  011340  EFAD  F089         	goto	i2u249_49
  7945  011344                     i2u249_48:
  7946  011344  0005               	push	
  7947  011346  6EFA               	movwf	pclath,c
  7948  011348  0101               	movlb	1	; () banked
  7949  01134A  5154               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  7950  01134C  6EFD               	movwf	tosl,c
  7951  01134E  5155               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  7952  011350  6EFE               	movwf	tosh,c
  7953  011352  5156               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  7954  011354  6EFF               	movwf	tosu,c
  7955  011356  50FA               	movf	pclath,w,c
  7956  011358  0012               	return		;indir
  7957  01135A                     i2u249_49:
  7958                           
  7959                           ;mcc_generated_files/eusart1.c: 190:     } else {
  7960  01135A  EFB1  F089         	goto	i2l187
  7961  01135E                     i2l3465:
  7962                           
  7963                           ;mcc_generated_files/eusart1.c: 191:         EUSART1_RxDataHandler();
  7964  01135E  EC0F  F08D         	call	_EUSART1_RxDataHandler	;wreg free
  7965  011362                     i2l187:
  7966  011362  0012               	return		;funcret
  7967  011364                     __end_of_EUSART1_Receive_ISR:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7971 ;; Defined at:
  7972 ;;		line 209 in file "mcc_generated_files/eusart1.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;		None
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		None
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;Total ram usage:        0 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_EUSART1_Initialize
  7996 ;;		_EUSART1_Receive_ISR
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text61
  8001  011C42                     __ptext61:
  8002                           	callstack 0
  8003  011C42                     _EUSART1_DefaultOverrunErrorHandler:
  8004                           	callstack 18
  8005  011C42                     
  8006                           ;mcc_generated_files/eusart1.c: 212:     RC1STAbits.CREN = 0;
  8007  011C42  989C               	bcf	156,4,c	;volatile
  8008                           
  8009                           ;mcc_generated_files/eusart1.c: 213:     RC1STAbits.CREN = 1;
  8010  011C44  889C               	bsf	156,4,c	;volatile
  8011  011C46  0012               	return		;funcret
  8012  011C48                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  8016 ;; Defined at:
  8017 ;;		line 207 in file "mcc_generated_files/eusart1.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;		None
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		None
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8035 ;;Total ram usage:        0 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_EUSART1_Initialize
  8041 ;;		_EUSART1_Receive_ISR
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text62
  8046  011C58                     __ptext62:
  8047                           	callstack 0
  8048  011C58                     _EUSART1_DefaultFramingErrorHandler:
  8049                           	callstack 18
  8050  011C58  0012               	return		;funcret
  8051  011C5A                     __end_of_EUSART1_DefaultFramingErrorHandler:
  8052                           	callstack 0
  8053                           
  8054 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  8055 ;; Defined at:
  8056 ;;		line 217 in file "mcc_generated_files/eusart1.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;		None
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used: 1
  8076 ;; Hardware stack levels required when called: 1
  8077 ;; This function calls:
  8078 ;;		_EUSART1_RxDataHandler
  8079 ;; This function is called by:
  8080 ;;		_EUSART1_Initialize
  8081 ;;		_EUSART1_Receive_ISR
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text63
  8086  011C48                     __ptext63:
  8087                           	callstack 0
  8088  011C48                     _EUSART1_DefaultErrorHandler:
  8089                           	callstack 17
  8090  011C48                     
  8091                           ;mcc_generated_files/eusart1.c: 218:     EUSART1_RxDataHandler();
  8092  011C48  EC0F  F08D         	call	_EUSART1_RxDataHandler	;wreg free
  8093  011C4C  0012               	return		;funcret
  8094  011C4E                     __end_of_EUSART1_DefaultErrorHandler:
  8095                           	callstack 0
  8096                           
  8097 ;; *************** function _EUSART1_RxDataHandler *****************
  8098 ;; Defined at:
  8099 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;Total ram usage:        0 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; This function calls:
  8120 ;;		Nothing
  8121 ;; This function is called by:
  8122 ;;		_EUSART1_Receive_ISR
  8123 ;;		_EUSART1_DefaultErrorHandler
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text64
  8128  011A1E                     __ptext64:
  8129                           	callstack 0
  8130  011A1E                     _EUSART1_RxDataHandler:
  8131                           	callstack 18
  8132  011A1E                     
  8133                           ;mcc_generated_files/eusart1.c: 199:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  8134  011A1E  0E08               	movlw	low _eusart1RxBuffer
  8135  011A20  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  8136  011A22  6ED9               	movwf	fsr2l,c
  8137  011A24  6ADA               	clrf	fsr2h,c
  8138  011A26  0E01               	movlw	high _eusart1RxBuffer
  8139  011A28  22DA               	addwfc	fsr2h,f,c
  8140  011A2A  CF98 FFDF          	movff	3992,indf2	;volatile
  8141  011A2E  2A55               	incf	_eusart1RxHead^0,f,c	;volatile
  8142  011A30                     
  8143                           ;mcc_generated_files/eusart1.c: 200:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  8144  011A30  0E07               	movlw	7
  8145  011A32  6455               	cpfsgt	_eusart1RxHead^0,c	;volatile
  8146  011A34  EF1E  F08D         	goto	i2u222_41
  8147  011A38  EF20  F08D         	goto	i2u222_40
  8148  011A3C                     i2u222_41:
  8149  011A3C  EF22  F08D         	goto	i2l3199
  8150  011A40                     i2u222_40:
  8151  011A40                     
  8152                           ;mcc_generated_files/eusart1.c: 201:     {;mcc_generated_files/eusart1.c: 202:         e
      +                          usart1RxHead = 0;
  8153  011A40  0E00               	movlw	0
  8154  011A42  6E55               	movwf	_eusart1RxHead^0,c	;volatile
  8155  011A44                     i2l3199:
  8156                           
  8157                           ;mcc_generated_files/eusart1.c: 204:     eusart1RxCount++;
  8158  011A44  2A53               	incf	_eusart1RxCount^0,f,c	;volatile
  8159  011A46  0012               	return		;funcret
  8160  011A48                     __end_of_EUSART1_RxDataHandler:
  8161                           	callstack 0
  8162                           
  8163                           	psect	text65
  8164  000000                     __ptext65:
  8165                           	callstack 0
  8166  000000                     
  8167                           	psect	rparam
  8168  0000                     
  8169                           	psect	temp
  8170  000056                     btemp:
  8171                           	callstack 0
  8172  000056                     	ds	1
  8173  0000                     int$flags	set	btemp
  8174  0000                     wtemp8	set	btemp+1
  8175  0000                     ttemp5	set	btemp+1
  8176  0000                     ttemp6	set	btemp+4
  8177  0000                     ttemp7	set	btemp+8
  8178                           
  8179                           	psect	idloc
  8180                           
  8181                           ;Config register IDLOC0 @ 0x200000
  8182                           ;	unspecified, using default values
  8183  200000                     	org	2097152
  8184  200000  FFFF               	dw	65535
  8185                           
  8186                           ;Config register IDLOC1 @ 0x200002
  8187                           ;	unspecified, using default values
  8188  200002                     	org	2097154
  8189  200002  FFFF               	dw	65535
  8190                           
  8191                           ;Config register IDLOC2 @ 0x200004
  8192                           ;	unspecified, using default values
  8193  200004                     	org	2097156
  8194  200004  FFFF               	dw	65535
  8195                           
  8196                           ;Config register IDLOC3 @ 0x200006
  8197                           ;	unspecified, using default values
  8198  200006                     	org	2097158
  8199  200006  FFFF               	dw	65535
  8200                           
  8201                           ;Config register IDLOC4 @ 0x200008
  8202                           ;	unspecified, using default values
  8203  200008                     	org	2097160
  8204  200008  FFFF               	dw	65535
  8205                           
  8206                           ;Config register IDLOC5 @ 0x20000A
  8207                           ;	unspecified, using default values
  8208  20000A                     	org	2097162
  8209  20000A  FFFF               	dw	65535
  8210                           
  8211                           ;Config register IDLOC6 @ 0x20000C
  8212                           ;	unspecified, using default values
  8213  20000C                     	org	2097164
  8214  20000C  FFFF               	dw	65535
  8215                           
  8216                           ;Config register IDLOC7 @ 0x20000E
  8217                           ;	unspecified, using default values
  8218  20000E                     	org	2097166
  8219  20000E  FFFF               	dw	65535
  8220                           
  8221                           ;Config register IDLOC8 @ 0x200010
  8222                           ;	unspecified, using default values
  8223  200010                     	org	2097168
  8224  200010  FFFF               	dw	65535
  8225                           
  8226                           ;Config register IDLOC9 @ 0x200012
  8227                           ;	unspecified, using default values
  8228  200012                     	org	2097170
  8229  200012  FFFF               	dw	65535
  8230                           
  8231                           ;Config register IDLOC10 @ 0x200014
  8232                           ;	unspecified, using default values
  8233  200014                     	org	2097172
  8234  200014  FFFF               	dw	65535
  8235                           
  8236                           ;Config register IDLOC11 @ 0x200016
  8237                           ;	unspecified, using default values
  8238  200016                     	org	2097174
  8239  200016  FFFF               	dw	65535
  8240                           
  8241                           ;Config register IDLOC12 @ 0x200018
  8242                           ;	unspecified, using default values
  8243  200018                     	org	2097176
  8244  200018  FFFF               	dw	65535
  8245                           
  8246                           ;Config register IDLOC13 @ 0x20001A
  8247                           ;	unspecified, using default values
  8248  20001A                     	org	2097178
  8249  20001A  FFFF               	dw	65535
  8250                           
  8251                           ;Config register IDLOC14 @ 0x20001C
  8252                           ;	unspecified, using default values
  8253  20001C                     	org	2097180
  8254  20001C  FFFF               	dw	65535
  8255                           
  8256                           ;Config register IDLOC15 @ 0x20001E
  8257                           ;	unspecified, using default values
  8258  20001E                     	org	2097182
  8259  20001E  FFFF               	dw	65535
  8260                           
  8261                           ;Config register IDLOC16 @ 0x200020
  8262                           ;	unspecified, using default values
  8263  200020                     	org	2097184
  8264  200020  FFFF               	dw	65535
  8265                           
  8266                           ;Config register IDLOC17 @ 0x200022
  8267                           ;	unspecified, using default values
  8268  200022                     	org	2097186
  8269  200022  FFFF               	dw	65535
  8270                           
  8271                           ;Config register IDLOC18 @ 0x200024
  8272                           ;	unspecified, using default values
  8273  200024                     	org	2097188
  8274  200024  FFFF               	dw	65535
  8275                           
  8276                           ;Config register IDLOC19 @ 0x200026
  8277                           ;	unspecified, using default values
  8278  200026                     	org	2097190
  8279  200026  FFFF               	dw	65535
  8280                           
  8281                           ;Config register IDLOC20 @ 0x200028
  8282                           ;	unspecified, using default values
  8283  200028                     	org	2097192
  8284  200028  FFFF               	dw	65535
  8285                           
  8286                           ;Config register IDLOC21 @ 0x20002A
  8287                           ;	unspecified, using default values
  8288  20002A                     	org	2097194
  8289  20002A  FFFF               	dw	65535
  8290                           
  8291                           ;Config register IDLOC22 @ 0x20002C
  8292                           ;	unspecified, using default values
  8293  20002C                     	org	2097196
  8294  20002C  FFFF               	dw	65535
  8295                           
  8296                           ;Config register IDLOC23 @ 0x20002E
  8297                           ;	unspecified, using default values
  8298  20002E                     	org	2097198
  8299  20002E  FFFF               	dw	65535
  8300                           
  8301                           ;Config register IDLOC24 @ 0x200030
  8302                           ;	unspecified, using default values
  8303  200030                     	org	2097200
  8304  200030  FFFF               	dw	65535
  8305                           
  8306                           ;Config register IDLOC25 @ 0x200032
  8307                           ;	unspecified, using default values
  8308  200032                     	org	2097202
  8309  200032  FFFF               	dw	65535
  8310                           
  8311                           ;Config register IDLOC26 @ 0x200034
  8312                           ;	unspecified, using default values
  8313  200034                     	org	2097204
  8314  200034  FFFF               	dw	65535
  8315                           
  8316                           ;Config register IDLOC27 @ 0x200036
  8317                           ;	unspecified, using default values
  8318  200036                     	org	2097206
  8319  200036  FFFF               	dw	65535
  8320                           
  8321                           ;Config register IDLOC28 @ 0x200038
  8322                           ;	unspecified, using default values
  8323  200038                     	org	2097208
  8324  200038  FFFF               	dw	65535
  8325                           
  8326                           ;Config register IDLOC29 @ 0x20003A
  8327                           ;	unspecified, using default values
  8328  20003A                     	org	2097210
  8329  20003A  FFFF               	dw	65535
  8330                           
  8331                           ;Config register IDLOC30 @ 0x20003C
  8332                           ;	unspecified, using default values
  8333  20003C                     	org	2097212
  8334  20003C  FFFF               	dw	65535
  8335                           
  8336                           ;Config register IDLOC31 @ 0x20003E
  8337                           ;	unspecified, using default values
  8338  20003E                     	org	2097214
  8339  20003E  FFFF               	dw	65535
  8340                           
  8341                           ;Config register IDLOC32 @ 0x200040
  8342                           ;	unspecified, using default values
  8343  200040                     	org	2097216
  8344  200040  FFFF               	dw	65535
  8345                           
  8346                           ;Config register IDLOC33 @ 0x200042
  8347                           ;	unspecified, using default values
  8348  200042                     	org	2097218
  8349  200042  FFFF               	dw	65535
  8350                           
  8351                           ;Config register IDLOC34 @ 0x200044
  8352                           ;	unspecified, using default values
  8353  200044                     	org	2097220
  8354  200044  FFFF               	dw	65535
  8355                           
  8356                           ;Config register IDLOC35 @ 0x200046
  8357                           ;	unspecified, using default values
  8358  200046                     	org	2097222
  8359  200046  FFFF               	dw	65535
  8360                           
  8361                           ;Config register IDLOC36 @ 0x200048
  8362                           ;	unspecified, using default values
  8363  200048                     	org	2097224
  8364  200048  FFFF               	dw	65535
  8365                           
  8366                           ;Config register IDLOC37 @ 0x20004A
  8367                           ;	unspecified, using default values
  8368  20004A                     	org	2097226
  8369  20004A  FFFF               	dw	65535
  8370                           
  8371                           ;Config register IDLOC38 @ 0x20004C
  8372                           ;	unspecified, using default values
  8373  20004C                     	org	2097228
  8374  20004C  FFFF               	dw	65535
  8375                           
  8376                           ;Config register IDLOC39 @ 0x20004E
  8377                           ;	unspecified, using default values
  8378  20004E                     	org	2097230
  8379  20004E  FFFF               	dw	65535
  8380                           
  8381                           ;Config register IDLOC40 @ 0x200050
  8382                           ;	unspecified, using default values
  8383  200050                     	org	2097232
  8384  200050  FFFF               	dw	65535
  8385                           
  8386                           ;Config register IDLOC41 @ 0x200052
  8387                           ;	unspecified, using default values
  8388  200052                     	org	2097234
  8389  200052  FFFF               	dw	65535
  8390                           
  8391                           ;Config register IDLOC42 @ 0x200054
  8392                           ;	unspecified, using default values
  8393  200054                     	org	2097236
  8394  200054  FFFF               	dw	65535
  8395                           
  8396                           ;Config register IDLOC43 @ 0x200056
  8397                           ;	unspecified, using default values
  8398  200056                     	org	2097238
  8399  200056  FFFF               	dw	65535
  8400                           
  8401                           ;Config register IDLOC44 @ 0x200058
  8402                           ;	unspecified, using default values
  8403  200058                     	org	2097240
  8404  200058  FFFF               	dw	65535
  8405                           
  8406                           ;Config register IDLOC45 @ 0x20005A
  8407                           ;	unspecified, using default values
  8408  20005A                     	org	2097242
  8409  20005A  FFFF               	dw	65535
  8410                           
  8411                           ;Config register IDLOC46 @ 0x20005C
  8412                           ;	unspecified, using default values
  8413  20005C                     	org	2097244
  8414  20005C  FFFF               	dw	65535
  8415                           
  8416                           ;Config register IDLOC47 @ 0x20005E
  8417                           ;	unspecified, using default values
  8418  20005E                     	org	2097246
  8419  20005E  FFFF               	dw	65535
  8420                           
  8421                           ;Config register IDLOC48 @ 0x200060
  8422                           ;	unspecified, using default values
  8423  200060                     	org	2097248
  8424  200060  FFFF               	dw	65535
  8425                           
  8426                           ;Config register IDLOC49 @ 0x200062
  8427                           ;	unspecified, using default values
  8428  200062                     	org	2097250
  8429  200062  FFFF               	dw	65535
  8430                           
  8431                           ;Config register IDLOC50 @ 0x200064
  8432                           ;	unspecified, using default values
  8433  200064                     	org	2097252
  8434  200064  FFFF               	dw	65535
  8435                           
  8436                           ;Config register IDLOC51 @ 0x200066
  8437                           ;	unspecified, using default values
  8438  200066                     	org	2097254
  8439  200066  FFFF               	dw	65535
  8440                           
  8441                           ;Config register IDLOC52 @ 0x200068
  8442                           ;	unspecified, using default values
  8443  200068                     	org	2097256
  8444  200068  FFFF               	dw	65535
  8445                           
  8446                           ;Config register IDLOC53 @ 0x20006A
  8447                           ;	unspecified, using default values
  8448  20006A                     	org	2097258
  8449  20006A  FFFF               	dw	65535
  8450                           
  8451                           ;Config register IDLOC54 @ 0x20006C
  8452                           ;	unspecified, using default values
  8453  20006C                     	org	2097260
  8454  20006C  FFFF               	dw	65535
  8455                           
  8456                           ;Config register IDLOC55 @ 0x20006E
  8457                           ;	unspecified, using default values
  8458  20006E                     	org	2097262
  8459  20006E  FFFF               	dw	65535
  8460                           
  8461                           ;Config register IDLOC56 @ 0x200070
  8462                           ;	unspecified, using default values
  8463  200070                     	org	2097264
  8464  200070  FFFF               	dw	65535
  8465                           
  8466                           ;Config register IDLOC57 @ 0x200072
  8467                           ;	unspecified, using default values
  8468  200072                     	org	2097266
  8469  200072  FFFF               	dw	65535
  8470                           
  8471                           ;Config register IDLOC58 @ 0x200074
  8472                           ;	unspecified, using default values
  8473  200074                     	org	2097268
  8474  200074  FFFF               	dw	65535
  8475                           
  8476                           ;Config register IDLOC59 @ 0x200076
  8477                           ;	unspecified, using default values
  8478  200076                     	org	2097270
  8479  200076  FFFF               	dw	65535
  8480                           
  8481                           ;Config register IDLOC60 @ 0x200078
  8482                           ;	unspecified, using default values
  8483  200078                     	org	2097272
  8484  200078  FFFF               	dw	65535
  8485                           
  8486                           ;Config register IDLOC61 @ 0x20007A
  8487                           ;	unspecified, using default values
  8488  20007A                     	org	2097274
  8489  20007A  FFFF               	dw	65535
  8490                           
  8491                           ;Config register IDLOC62 @ 0x20007C
  8492                           ;	unspecified, using default values
  8493  20007C                     	org	2097276
  8494  20007C  FFFF               	dw	65535
  8495                           
  8496                           ;Config register IDLOC63 @ 0x20007E
  8497                           ;	unspecified, using default values
  8498  20007E                     	org	2097278
  8499  20007E  FFFF               	dw	65535
  8500                           
  8501                           ;Config register IDLOC64 @ 0x200080
  8502                           ;	unspecified, using default values
  8503  200080                     	org	2097280
  8504  200080  FFFF               	dw	65535
  8505                           
  8506                           ;Config register IDLOC65 @ 0x200082
  8507                           ;	unspecified, using default values
  8508  200082                     	org	2097282
  8509  200082  FFFF               	dw	65535
  8510                           
  8511                           ;Config register IDLOC66 @ 0x200084
  8512                           ;	unspecified, using default values
  8513  200084                     	org	2097284
  8514  200084  FFFF               	dw	65535
  8515                           
  8516                           ;Config register IDLOC67 @ 0x200086
  8517                           ;	unspecified, using default values
  8518  200086                     	org	2097286
  8519  200086  FFFF               	dw	65535
  8520                           
  8521                           ;Config register IDLOC68 @ 0x200088
  8522                           ;	unspecified, using default values
  8523  200088                     	org	2097288
  8524  200088  FFFF               	dw	65535
  8525                           
  8526                           ;Config register IDLOC69 @ 0x20008A
  8527                           ;	unspecified, using default values
  8528  20008A                     	org	2097290
  8529  20008A  FFFF               	dw	65535
  8530                           
  8531                           ;Config register IDLOC70 @ 0x20008C
  8532                           ;	unspecified, using default values
  8533  20008C                     	org	2097292
  8534  20008C  FFFF               	dw	65535
  8535                           
  8536                           ;Config register IDLOC71 @ 0x20008E
  8537                           ;	unspecified, using default values
  8538  20008E                     	org	2097294
  8539  20008E  FFFF               	dw	65535
  8540                           
  8541                           ;Config register IDLOC72 @ 0x200090
  8542                           ;	unspecified, using default values
  8543  200090                     	org	2097296
  8544  200090  FFFF               	dw	65535
  8545                           
  8546                           ;Config register IDLOC73 @ 0x200092
  8547                           ;	unspecified, using default values
  8548  200092                     	org	2097298
  8549  200092  FFFF               	dw	65535
  8550                           
  8551                           ;Config register IDLOC74 @ 0x200094
  8552                           ;	unspecified, using default values
  8553  200094                     	org	2097300
  8554  200094  FFFF               	dw	65535
  8555                           
  8556                           ;Config register IDLOC75 @ 0x200096
  8557                           ;	unspecified, using default values
  8558  200096                     	org	2097302
  8559  200096  FFFF               	dw	65535
  8560                           
  8561                           ;Config register IDLOC76 @ 0x200098
  8562                           ;	unspecified, using default values
  8563  200098                     	org	2097304
  8564  200098  FFFF               	dw	65535
  8565                           
  8566                           ;Config register IDLOC77 @ 0x20009A
  8567                           ;	unspecified, using default values
  8568  20009A                     	org	2097306
  8569  20009A  FFFF               	dw	65535
  8570                           
  8571                           ;Config register IDLOC78 @ 0x20009C
  8572                           ;	unspecified, using default values
  8573  20009C                     	org	2097308
  8574  20009C  FFFF               	dw	65535
  8575                           
  8576                           ;Config register IDLOC79 @ 0x20009E
  8577                           ;	unspecified, using default values
  8578  20009E                     	org	2097310
  8579  20009E  FFFF               	dw	65535
  8580                           
  8581                           ;Config register IDLOC80 @ 0x2000A0
  8582                           ;	unspecified, using default values
  8583  2000A0                     	org	2097312
  8584  2000A0  FFFF               	dw	65535
  8585                           
  8586                           ;Config register IDLOC81 @ 0x2000A2
  8587                           ;	unspecified, using default values
  8588  2000A2                     	org	2097314
  8589  2000A2  FFFF               	dw	65535
  8590                           
  8591                           ;Config register IDLOC82 @ 0x2000A4
  8592                           ;	unspecified, using default values
  8593  2000A4                     	org	2097316
  8594  2000A4  FFFF               	dw	65535
  8595                           
  8596                           ;Config register IDLOC83 @ 0x2000A6
  8597                           ;	unspecified, using default values
  8598  2000A6                     	org	2097318
  8599  2000A6  FFFF               	dw	65535
  8600                           
  8601                           ;Config register IDLOC84 @ 0x2000A8
  8602                           ;	unspecified, using default values
  8603  2000A8                     	org	2097320
  8604  2000A8  FFFF               	dw	65535
  8605                           
  8606                           ;Config register IDLOC85 @ 0x2000AA
  8607                           ;	unspecified, using default values
  8608  2000AA                     	org	2097322
  8609  2000AA  FFFF               	dw	65535
  8610                           
  8611                           ;Config register IDLOC86 @ 0x2000AC
  8612                           ;	unspecified, using default values
  8613  2000AC                     	org	2097324
  8614  2000AC  FFFF               	dw	65535
  8615                           
  8616                           ;Config register IDLOC87 @ 0x2000AE
  8617                           ;	unspecified, using default values
  8618  2000AE                     	org	2097326
  8619  2000AE  FFFF               	dw	65535
  8620                           
  8621                           ;Config register IDLOC88 @ 0x2000B0
  8622                           ;	unspecified, using default values
  8623  2000B0                     	org	2097328
  8624  2000B0  FFFF               	dw	65535
  8625                           
  8626                           ;Config register IDLOC89 @ 0x2000B2
  8627                           ;	unspecified, using default values
  8628  2000B2                     	org	2097330
  8629  2000B2  FFFF               	dw	65535
  8630                           
  8631                           ;Config register IDLOC90 @ 0x2000B4
  8632                           ;	unspecified, using default values
  8633  2000B4                     	org	2097332
  8634  2000B4  FFFF               	dw	65535
  8635                           
  8636                           ;Config register IDLOC91 @ 0x2000B6
  8637                           ;	unspecified, using default values
  8638  2000B6                     	org	2097334
  8639  2000B6  FFFF               	dw	65535
  8640                           
  8641                           ;Config register IDLOC92 @ 0x2000B8
  8642                           ;	unspecified, using default values
  8643  2000B8                     	org	2097336
  8644  2000B8  FFFF               	dw	65535
  8645                           
  8646                           ;Config register IDLOC93 @ 0x2000BA
  8647                           ;	unspecified, using default values
  8648  2000BA                     	org	2097338
  8649  2000BA  FFFF               	dw	65535
  8650                           
  8651                           ;Config register IDLOC94 @ 0x2000BC
  8652                           ;	unspecified, using default values
  8653  2000BC                     	org	2097340
  8654  2000BC  FFFF               	dw	65535
  8655                           
  8656                           ;Config register IDLOC95 @ 0x2000BE
  8657                           ;	unspecified, using default values
  8658  2000BE                     	org	2097342
  8659  2000BE  FFFF               	dw	65535
  8660                           
  8661                           ;Config register IDLOC96 @ 0x2000C0
  8662                           ;	unspecified, using default values
  8663  2000C0                     	org	2097344
  8664  2000C0  FFFF               	dw	65535
  8665                           
  8666                           ;Config register IDLOC97 @ 0x2000C2
  8667                           ;	unspecified, using default values
  8668  2000C2                     	org	2097346
  8669  2000C2  FFFF               	dw	65535
  8670                           
  8671                           ;Config register IDLOC98 @ 0x2000C4
  8672                           ;	unspecified, using default values
  8673  2000C4                     	org	2097348
  8674  2000C4  FFFF               	dw	65535
  8675                           
  8676                           ;Config register IDLOC99 @ 0x2000C6
  8677                           ;	unspecified, using default values
  8678  2000C6                     	org	2097350
  8679  2000C6  FFFF               	dw	65535
  8680                           
  8681                           ;Config register IDLOC100 @ 0x2000C8
  8682                           ;	unspecified, using default values
  8683  2000C8                     	org	2097352
  8684  2000C8  FFFF               	dw	65535
  8685                           
  8686                           ;Config register IDLOC101 @ 0x2000CA
  8687                           ;	unspecified, using default values
  8688  2000CA                     	org	2097354
  8689  2000CA  FFFF               	dw	65535
  8690                           
  8691                           ;Config register IDLOC102 @ 0x2000CC
  8692                           ;	unspecified, using default values
  8693  2000CC                     	org	2097356
  8694  2000CC  FFFF               	dw	65535
  8695                           
  8696                           ;Config register IDLOC103 @ 0x2000CE
  8697                           ;	unspecified, using default values
  8698  2000CE                     	org	2097358
  8699  2000CE  FFFF               	dw	65535
  8700                           
  8701                           ;Config register IDLOC104 @ 0x2000D0
  8702                           ;	unspecified, using default values
  8703  2000D0                     	org	2097360
  8704  2000D0  FFFF               	dw	65535
  8705                           
  8706                           ;Config register IDLOC105 @ 0x2000D2
  8707                           ;	unspecified, using default values
  8708  2000D2                     	org	2097362
  8709  2000D2  FFFF               	dw	65535
  8710                           
  8711                           ;Config register IDLOC106 @ 0x2000D4
  8712                           ;	unspecified, using default values
  8713  2000D4                     	org	2097364
  8714  2000D4  FFFF               	dw	65535
  8715                           
  8716                           ;Config register IDLOC107 @ 0x2000D6
  8717                           ;	unspecified, using default values
  8718  2000D6                     	org	2097366
  8719  2000D6  FFFF               	dw	65535
  8720                           
  8721                           ;Config register IDLOC108 @ 0x2000D8
  8722                           ;	unspecified, using default values
  8723  2000D8                     	org	2097368
  8724  2000D8  FFFF               	dw	65535
  8725                           
  8726                           ;Config register IDLOC109 @ 0x2000DA
  8727                           ;	unspecified, using default values
  8728  2000DA                     	org	2097370
  8729  2000DA  FFFF               	dw	65535
  8730                           
  8731                           ;Config register IDLOC110 @ 0x2000DC
  8732                           ;	unspecified, using default values
  8733  2000DC                     	org	2097372
  8734  2000DC  FFFF               	dw	65535
  8735                           
  8736                           ;Config register IDLOC111 @ 0x2000DE
  8737                           ;	unspecified, using default values
  8738  2000DE                     	org	2097374
  8739  2000DE  FFFF               	dw	65535
  8740                           
  8741                           ;Config register IDLOC112 @ 0x2000E0
  8742                           ;	unspecified, using default values
  8743  2000E0                     	org	2097376
  8744  2000E0  FFFF               	dw	65535
  8745                           
  8746                           ;Config register IDLOC113 @ 0x2000E2
  8747                           ;	unspecified, using default values
  8748  2000E2                     	org	2097378
  8749  2000E2  FFFF               	dw	65535
  8750                           
  8751                           ;Config register IDLOC114 @ 0x2000E4
  8752                           ;	unspecified, using default values
  8753  2000E4                     	org	2097380
  8754  2000E4  FFFF               	dw	65535
  8755                           
  8756                           ;Config register IDLOC115 @ 0x2000E6
  8757                           ;	unspecified, using default values
  8758  2000E6                     	org	2097382
  8759  2000E6  FFFF               	dw	65535
  8760                           
  8761                           ;Config register IDLOC116 @ 0x2000E8
  8762                           ;	unspecified, using default values
  8763  2000E8                     	org	2097384
  8764  2000E8  FFFF               	dw	65535
  8765                           
  8766                           ;Config register IDLOC117 @ 0x2000EA
  8767                           ;	unspecified, using default values
  8768  2000EA                     	org	2097386
  8769  2000EA  FFFF               	dw	65535
  8770                           
  8771                           ;Config register IDLOC118 @ 0x2000EC
  8772                           ;	unspecified, using default values
  8773  2000EC                     	org	2097388
  8774  2000EC  FFFF               	dw	65535
  8775                           
  8776                           ;Config register IDLOC119 @ 0x2000EE
  8777                           ;	unspecified, using default values
  8778  2000EE                     	org	2097390
  8779  2000EE  FFFF               	dw	65535
  8780                           
  8781                           ;Config register IDLOC120 @ 0x2000F0
  8782                           ;	unspecified, using default values
  8783  2000F0                     	org	2097392
  8784  2000F0  FFFF               	dw	65535
  8785                           
  8786                           ;Config register IDLOC121 @ 0x2000F2
  8787                           ;	unspecified, using default values
  8788  2000F2                     	org	2097394
  8789  2000F2  FFFF               	dw	65535
  8790                           
  8791                           ;Config register IDLOC122 @ 0x2000F4
  8792                           ;	unspecified, using default values
  8793  2000F4                     	org	2097396
  8794  2000F4  FFFF               	dw	65535
  8795                           
  8796                           ;Config register IDLOC123 @ 0x2000F6
  8797                           ;	unspecified, using default values
  8798  2000F6                     	org	2097398
  8799  2000F6  FFFF               	dw	65535
  8800                           
  8801                           ;Config register IDLOC124 @ 0x2000F8
  8802                           ;	unspecified, using default values
  8803  2000F8                     	org	2097400
  8804  2000F8  FFFF               	dw	65535
  8805                           
  8806                           ;Config register IDLOC125 @ 0x2000FA
  8807                           ;	unspecified, using default values
  8808  2000FA                     	org	2097402
  8809  2000FA  FFFF               	dw	65535
  8810                           
  8811                           ;Config register IDLOC126 @ 0x2000FC
  8812                           ;	unspecified, using default values
  8813  2000FC                     	org	2097404
  8814  2000FC  FFFF               	dw	65535
  8815                           
  8816                           ;Config register IDLOC127 @ 0x2000FE
  8817                           ;	unspecified, using default values
  8818  2000FE                     	org	2097406
  8819  2000FE  FFFF               	dw	65535
  8820                           
  8821                           	psect	config
  8822                           
  8823                           ;Config register CONFIG1L @ 0x300000
  8824                           ;	External Oscillator mode Selection bits
  8825                           ;	FEXTOSC = OFF, Oscillator not enabled
  8826                           ;	Power-up default value for COSC bits
  8827                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  8828  300000                     	org	3145728
  8829  300000  EC                 	db	236
  8830                           
  8831                           ;Config register CONFIG1H @ 0x300001
  8832                           ;	Clock Out Enable bit
  8833                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8834                           ;	Clock Switch Enable bit
  8835                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8836                           ;	Fail-Safe Clock Monitor Enable bit
  8837                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8838  300001                     	org	3145729
  8839  300001  FF                 	db	255
  8840                           
  8841                           ;Config register CONFIG2L @ 0x300002
  8842                           ;	Master Clear Enable bit
  8843                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  8844                           ;	Power-up Timer Enable bit
  8845                           ;	PWRTE = OFF, Power up timer disabled
  8846                           ;	Low-power BOR enable bit
  8847                           ;	LPBOREN = OFF, Low power BOR is disabled
  8848                           ;	Brown-out Reset Enable bits
  8849                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8850  300002                     	org	3145730
  8851  300002  FF                 	db	255
  8852                           
  8853                           ;Config register CONFIG2H @ 0x300003
  8854                           ;	Brown Out Reset Voltage selection bits
  8855                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  8856                           ;	ZCD Disable bit
  8857                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8858                           ;	PPSLOCK bit One-Way Set Enable bit
  8859                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  8860                           ;	Stack Full/Underflow Reset Enable bit
  8861                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8862                           ;	Extended Instruction Set Enable bit
  8863                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8864  300003                     	org	3145731
  8865  300003  FF                 	db	255
  8866                           
  8867                           ;Config register CONFIG3L @ 0x300004
  8868                           ;	WDT Period Select bits
  8869                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8870                           ;	WDT operating mode
  8871                           ;	WDTE = OFF, WDT Disabled
  8872  300004                     	org	3145732
  8873  300004  9F                 	db	159
  8874                           
  8875                           ;Config register CONFIG3H @ 0x300005
  8876                           ;	WDT Window Select bits
  8877                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8878                           ;	WDT input clock selector
  8879                           ;	WDTCCS = SC, Software Control
  8880  300005                     	org	3145733
  8881  300005  FF                 	db	255
  8882                           
  8883                           ;Config register CONFIG4L @ 0x300006
  8884                           ;	Write Protection Block 0
  8885                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8886                           ;	Write Protection Block 1
  8887                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8888                           ;	Write Protection Block 2
  8889                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8890                           ;	Write Protection Block 3
  8891                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8892                           ;	Write Protection Block 4
  8893                           ;	WRT4 = 0x1, unprogrammed default
  8894                           ;	Write Protection Block 5
  8895                           ;	WRT5 = 0x1, unprogrammed default
  8896                           ;	Write Protection Block 6
  8897                           ;	WRT6 = 0x1, unprogrammed default
  8898                           ;	Write Protection Block 7
  8899                           ;	WRT7 = 0x1, unprogrammed default
  8900  300006                     	org	3145734
  8901  300006  FF                 	db	255
  8902                           
  8903                           ;Config register CONFIG4H @ 0x300007
  8904                           ;	Configuration Register Write Protection bit
  8905                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  8906                           ;	Boot Block Write Protection bit
  8907                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8908                           ;	Data EEPROM Write Protection bit
  8909                           ;	WRTD = OFF, Data EEPROM not write-protected
  8910                           ;	Scanner Enable bit
  8911                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  8912                           ;	Low Voltage Programming Enable bit
  8913                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8914  300007                     	org	3145735
  8915  300007  FF                 	db	255
  8916                           
  8917                           ;Config register CONFIG5L @ 0x300008
  8918                           ;	UserNVM Program Memory Code Protection bit
  8919                           ;	CP = OFF, UserNVM code protection disabled
  8920                           ;	DataNVM Memory Code Protection bit
  8921                           ;	CPD = OFF, DataNVM code protection disabled
  8922  300008                     	org	3145736
  8923  300008  FF                 	db	255
  8924                           
  8925                           ;Config register CONFIG5H @ 0x300009
  8926                           ;	unspecified, using default values
  8927  300009                     	org	3145737
  8928  300009  FF                 	db	255
  8929                           
  8930                           ;Config register CONFIG6L @ 0x30000A
  8931                           ;	Table Read Protection Block 0
  8932                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8933                           ;	Table Read Protection Block 1
  8934                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8935                           ;	Table Read Protection Block 2
  8936                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8937                           ;	Table Read Protection Block 3
  8938                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8939                           ;	Table Read Protection Block 4
  8940                           ;	EBTR4 = 0x1, unprogrammed default
  8941                           ;	Table Read Protection Block 5
  8942                           ;	EBTR5 = 0x1, unprogrammed default
  8943                           ;	Table Read Protection Block 6
  8944                           ;	EBTR6 = 0x1, unprogrammed default
  8945                           ;	Table Read Protection Block 7
  8946                           ;	EBTR7 = 0x1, unprogrammed default
  8947  30000A                     	org	3145738
  8948  30000A  FF                 	db	255
  8949                           
  8950                           ;Config register CONFIG6H @ 0x30000B
  8951                           ;	Boot Block Table Read Protection bit
  8952                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8953  30000B                     	org	3145739
  8954  30000B  FF                 	db	255
  8955                           tosu	equ	0xFFF
  8956                           tosh	equ	0xFFE
  8957                           tosl	equ	0xFFD
  8958                           stkptr	equ	0xFFC
  8959                           pclatu	equ	0xFFB
  8960                           pclath	equ	0xFFA
  8961                           pcl	equ	0xFF9
  8962                           tblptru	equ	0xFF8
  8963                           tblptrh	equ	0xFF7
  8964                           tblptrl	equ	0xFF6
  8965                           tablat	equ	0xFF5
  8966                           prodh	equ	0xFF4
  8967                           prodl	equ	0xFF3
  8968                           indf0	equ	0xFEF
  8969                           postinc0	equ	0xFEE
  8970                           postdec0	equ	0xFED
  8971                           preinc0	equ	0xFEC
  8972                           plusw0	equ	0xFEB
  8973                           fsr0h	equ	0xFEA
  8974                           fsr0l	equ	0xFE9
  8975                           wreg	equ	0xFE8
  8976                           indf1	equ	0xFE7
  8977                           postinc1	equ	0xFE6
  8978                           postdec1	equ	0xFE5
  8979                           preinc1	equ	0xFE4
  8980                           plusw1	equ	0xFE3
  8981                           fsr1h	equ	0xFE2
  8982                           fsr1l	equ	0xFE1
  8983                           bsr	equ	0xFE0
  8984                           indf2	equ	0xFDF
  8985                           postinc2	equ	0xFDE
  8986                           postdec2	equ	0xFDD
  8987                           preinc2	equ	0xFDC
  8988                           plusw2	equ	0xFDB
  8989                           fsr2h	equ	0xFDA
  8990                           fsr2l	equ	0xFD9
  8991                           status	equ	0xFD8

Data Sizes:
    Strings     534
    Constant    0
    Data        0
    BSS         76
    Persistent  30
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    145     146
    BANK1           256     23     119
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> dbuf(BANK1[32]), rmove@move_buf(BANK0[40]), rmove@speed_buf(BANK0[40]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 40
		 -> dbuf(BANK1[32]), rmove@move_buf(BANK0[40]), rmove@speed_buf(BANK0[40]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_print@Buffer(COMRAM[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_print@Buffer(COMRAM[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 18
		 -> LaySheetsOnTrays@lcd_string(BANK1[16]), STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[17]), STR_29(CODE[16]), lcd_page_1@lcd_string(COMRAM[16]), STR_25(CODE[17]), 
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_19(CODE[18]), STR_18(CODE[17]), lcd_show_values@lcd_string(COMRAM[16]), 
		 -> STR_8(CODE[16]), STR_7(CODE[18]), STR_6(CODE[18]), STR_5(CODE[18]), 
		 -> STR_4(CODE[18]), STR_3(CODE[18]), lcd_GUI@lcd_string(BANK0[16]), STR_1(CODE[17]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 18
		 -> LaySheetsOnTrays@lcd_string(BANK1[16]), STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[17]), STR_29(CODE[16]), lcd_page_1@lcd_string(COMRAM[16]), STR_25(CODE[17]), 
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_19(CODE[18]), STR_18(CODE[17]), lcd_show_values@lcd_string(COMRAM[16]), 
		 -> STR_8(CODE[16]), STR_7(CODE[18]), STR_6(CODE[18]), STR_5(CODE[18]), 
		 -> STR_4(CODE[18]), STR_3(CODE[18]), lcd_GUI@lcd_string(BANK0[16]), STR_1(CODE[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[13]), STR_34(CODE[13]), 
		 -> STR_28(CODE[15]), STR_27(CODE[16]), STR_26(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[18]), STR_15(CODE[15]), STR_14(CODE[15]), STR_13(CODE[16]), 
		 -> STR_12(CODE[17]), STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[21]), 
		 -> STR_2(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[13]), STR_34(CODE[13]), 
		 -> STR_28(CODE[15]), STR_27(CODE[16]), STR_26(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[18]), STR_15(CODE[15]), STR_14(CODE[15]), STR_13(CODE[16]), 
		 -> STR_12(CODE[17]), STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[21]), 
		 -> STR_2(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[13]), STR_34(CODE[13]), 
		 -> STR_28(CODE[15]), STR_27(CODE[16]), STR_26(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[18]), STR_15(CODE[15]), STR_14(CODE[15]), STR_13(CODE[16]), 
		 -> STR_12(CODE[17]), STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[21]), 
		 -> STR_2(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> LaySheetsOnTrays@lcd_string(BANK1[16]), rmove@move_buf(BANK0[40]), rmove@speed_buf(BANK0[40]), lcd_page_1@lcd_string(COMRAM[16]), 
		 -> lcd_show_values@lcd_string(COMRAM[16]), lcd_GUI@lcd_string(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1616$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1616$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TX_Buffer2@buff	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_print@Buffer(COMRAM[16]), 

    TX_Buffer1@buff	PTR unsigned char  size(2) Largest target is 40
		 -> rmove@move_buf(BANK0[40]), rmove@speed_buf(BANK0[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_print@Buffer(COMRAM[16]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 18
		 -> LaySheetsOnTrays@lcd_string(BANK1[16]), STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[17]), STR_29(CODE[16]), lcd_page_1@lcd_string(COMRAM[16]), STR_25(CODE[17]), 
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_19(CODE[18]), STR_18(CODE[17]), lcd_show_values@lcd_string(COMRAM[16]), 
		 -> STR_8(CODE[16]), STR_7(CODE[18]), STR_6(CODE[18]), STR_5(CODE[18]), 
		 -> STR_4(CODE[18]), STR_3(CODE[18]), lcd_GUI@lcd_string(BANK0[16]), STR_1(CODE[17]), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _lcd_clear->_EUSART2_Write
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _TX_Buffer1->_strlen
    _lcd_set_cursor->_EUSART2_Write
    _lcd_print->_strcpy
    _TX_Buffer2->_EUSART2_Write
    _distance->___wmul
    ___wmul->___fltol

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INT0_CallBack->_INT0_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_LaySheetsOnTrays
    _lcd_GUI->_sprintf
    _LaySheetsOnTrays->_rmove
    _rmove->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LaySheetsOnTrays

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   66354
                                            143 BANK0      2     2      0
                   _LaySheetsOnTrays
                  _SYSTEM_Initialize
                            _lcd_GUI
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0      31
                                             10 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (1) _lcd_GUI                                             37    37      0   21150
                                             51 BANK0     35    35      0
                    _DATAEE_ReadByte
                    _INT0_Read_Count
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _INT0_Read_Count                                      2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     348
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     392
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3      98
                                              9 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _LaySheetsOnTrays                                    31    28      3   41031
                                            137 BANK0      6     3      3
                                              0 BANK1     23    23      0
                           _distance
                          _lcd_print
                     _lcd_set_cursor
                              _rmove
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rmove                                               86    82      4   18826
                                             51 BANK0     86    82      4
                         _TX_Buffer1
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   17199
                                             30 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   13827
                                             22 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   13345
                                             72 COMRAM     4     4      0
                                              0 BANK0     22    16      6
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5279
                                             36 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              9 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              9 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6133
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3867
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     400
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _TX_Buffer1                                           4     1      3     521
                                             13 COMRAM     4     1      3
                      _EUSART1_Write
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       1     1      0      62
                                             10 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                           18    16      2    3100
                                             19 COMRAM    18    16      2
                         _TX_Buffer2
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                              10     6      4     317
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _TX_Buffer2                                           4     1      3     341
                                             10 COMRAM     4     1      3
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _distance                                             4     0      4    1290
                                             25 COMRAM     4     0      4
                            ___fltol
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     562
                                             19 COMRAM     6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              5 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LaySheetsOnTrays
     _distance
       ___fltol
       ___wmul
         ___fltol (ARG)
     _lcd_print
       _TX_Buffer2
         _EUSART2_Write
       _strcpy
     _lcd_set_cursor
       _EUSART2_Write
     _rmove
       _TX_Buffer1
         _EUSART1_Write
         _strlen (ARG)
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
             _utoa
               ___lodiv
               ___lomod
               _pad
       _strlen
     _sprintf
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _lcd_GUI
     _DATAEE_ReadByte
     _INT0_Read_Count
     _lcd_print
     _lcd_set_cursor
     _sprintf
   _lcd_clear
     _EUSART2_Write
   _lcd_print
   _lcd_set_cursor

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      27        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      25        0.0%
BANK11             100      0       0      26        0.0%
BITBANK10          100      0       0      23        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      21        0.0%
BANK9              100      0       0      22        0.0%
BITBANK8           100      0       0      19        0.0%
BANK8              100      0       0      20        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     17      77       6       46.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     91      92       4       91.2%
BITBIGSFRllllll     75      0       0      56        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITBIGSFRhhhl       53      0       0      33        0.0%
BITBIGSFRllhhl      4F      0       0      37        0.0%
BITBANK14           1F      0       0      29        0.0%
BANK14              1F      0       0      30        0.0%
BIGRAM_1            1F      0       0      58        0.0%
BITBIGSFRllllll     11      0       0      54        0.0%
BITBIGSFRllllll      F      0       0      41        0.0%
BITBIGSFRllllll      C      0       0      53        0.0%
BITBIGSFRllllll      B      0       0      44        0.0%
BITBIGSFRhhlllh      9      0       0      34        0.0%
BITBIGSFRhhhhh       7      0       0      31        0.0%
BITBIGSFRllllll      7      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      4      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      49        0.0%
BITBIGSFRlllllh      3      0       0      40        0.0%
BITBIGSFRllllh       3      0       0      39        0.0%
BITBIGSFRllhl        3      0       0      38        0.0%
BITBIGSFRllllll      2      0       0      45        0.0%
BITBIGSFRllllll      2      0       0      52        0.0%
BITBIGSFRhhhhl       2      0       0      32        0.0%
BITBIGSFRllllll      2      0       0      50        0.0%
BITBIGSFRllllll      2      0       0      43        0.0%
BITBIGSFRhhllll      2      0       0      35        0.0%
BITBIGSFRllhhhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      46        0.0%
BITBIGSFRllllll      1      0       0      47        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15E      57        0.0%
DATA                 0      0     15E      60        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 14 12:18:21 2022

                                            l87 160A                             ___wmul@multiplicand 0016  
                                TX_Buffer1@buff 000E                                  TX_Buffer2@buff 000B  
                                TX_Buffer1@size 0010                                  TX_Buffer2@size 000D  
                                           l203 1C0A                                             l212 1BEE  
                                           l206 1BFC                                             l209 1C18  
                                           l153 1678                                             l402 1C50  
                                           l180 1B5E                                             l360 1B62  
                                           l336 182E                                             l248 1BB6  
                                           l177 1B4A                                             l274 1BA8  
                                           l258 1C22                                             l363 1B76  
                                           l604 14C4                                             l381 1BE0  
                                           l293 17E2                                             l541 1B8C  
                                           l605 14C4                                             l462 1B2E  
                                           l622 07BC                                             l375 1BD2  
                                           l287 1B9A                                             l711 1AD6  
                                           l720 1B12                                             l456 1AF4  
                                           l378 1BC4                                             l723 1574  
                                           l459 1B46                                             l708 1A92  
                                           l735 1A1C                                             l743 0A56  
                                           l761 1AB8                                             l729 18EE  
                                           l738 1956                                             l755 0B40  
                                           l758 0B62                                             l875 0CEA  
                                           l888 0E4E                      ??_INT0_SetInterruptHandler 000D  
        __end_of_EUSART2_SetFramingErrorHandler 1BD4                  _EUSART2_SetFramingErrorHandler 1BC6  
                                           _abs 1874                                             _pad 11E0  
                                           tosl 000FFD                                             wreg 000FE8  
                                 _INT0_CallBack 19BC                                 ?_lcd_set_cursor 0001  
                                 _INT1_CallBack 198A                                    ___fltol@exp1 0013  
                                          ?_abs 001C                                            l1206 1044  
                                          l1216 1114                                            l1209 10F4  
                                          l1058 0F54                                            l1502 07F4  
                                          l1512 09BC                                            l1504 07FC  
                                          l4001 184E                                            l3201 1BAA  
                                          l4011 0B96                                            l1531 18AA  
                                          l4003 1852                                            l4021 0BD8  
                                          l4013 0B9A                                            l4005 0B64  
                                          l4101 100A                                            l3221 1BC6  
                                          l1534 18B2                                            l1526 16DE  
                                          l4031 0C32                                            l4023 0BF6  
                                          l4015 0BA8                                            l4007 0B68  
                                          l1471 12A0                                            l4103 100C  
                                          l1199 1024                                            l4111 106C  
                                          l1519 0556                                            l1527 16E6  
                                          l1439 1796                                            l3223 1BB8  
                                          l3311 1576                                            l4033 0C60  
                                          l4025 0BFE                                            l4041 0C9A  
                                          l4017 0BC8                                            l4009 0B76  
                                          l4201 0290                                            l4105 101E  
                                          l4121 10EE                                            l4113 1080  
                                          l3225 1BD4                                            l3401 181A  
                                          l3217 1B9C                                            l3321 15D4  
                                          l3313 158E                                            l1546 11DE  
                                          l1554 1872                                            l1466 1224  
                                          l1563 1744                                            l4043 0CAA  
                                          l4035 0C80                                            l4027 0C12  
                                          l4019 0BCC                                            l4051 0CF0  
                                          l4131 121C                                            l4123 11E0  
                                          l4203 029C                                            l4115 108E  
                                          l4107 1046                                            l4211 07BE  
                                          l3403 182A                                            l3219 1B8E  
                                          l3331 15E2                                            l3323 15D6  
                                          l3315 1598                                            l3411 1B78  
                                          l4301 1B62                                            l4045 0CCA  
                                          l4037 0C82                                            l4029 0C20  
                                          l4061 0D50                                            l4053 0CFE  
                                          l1557 1C52                                            l4141 1288  
                                          l1469 1266                                            l4133 1230  
                                          l4125 11EE                                            l4205 02A4  
                                          l1477 009E                                            l4117 10BC  
                                          l4109 1064                                            l4221 082C  
                                          l4213 07CC                                            l3341 1620  
                                          l3405 1C4E                                            l3333 15E4  
                                          l3325 15D8                                            l3317 159A  
                                          l3413 1B80                                            l4303 1B72  
                                          l4039 0C94                                            l4071 0DC6  
                                          l4063 0D6E                                            l4055 0D1E  
                                          l4135 1244                                            l4127 1202  
                                          l4207 02B4                                            l1479 00A6  
                                          l4151 0020                                            l4119 10DC  
                                          l4231 08BE                                            l4223 0836  
                                          l4215 07CE                                            l4311 16BE  
                                          l3183 1BE2                                            l3351 1634  
                                          l3343 1624                                            l3335 15E6  
                                          l3327 15DA                                            l3319 15AA  
                                          l3407 1B14                                            l3415 1B84  
                                          l4401 1B0A                                            l4081 0E2E  
                                          l4073 0DE6                                            l4065 0D76  
                                          l4057 0D22                                            l4049 0CEC  
                                          l4145 1874                                            l1569 1924  
                                          l4137 1248                                            l4129 1210  
                                          l1497 02DC                                            l4161 0092  
                                          l4153 0048                                            l4241 0986  
                                          l4225 083C                                            l4233 0922  
                                          l4217 07E8                                            l4305 167A  
                                          l4321 1784                                            l4313 1746  
                                          l3185 1BFE                                            l3353 1644  
                                          l3345 1628                                            l3337 160C  
                                          l3409 1B30                                            l3329 15E0  
                                          l3417 1B86                                            l4331 19F6  
                                          l4403 1A6E                                            l4075 0DF8  
                                          l4067 0D8A                                            l4059 0D30  
                                          l4147 188E                                            l4139 1274  
                                          l4171 00DC                                            l4163 00AE  
                                          l4155 0068                                            l4091 0F88  
                                          l4235 0934                                            l4243 0994  
                                          l4227 08B2                                            l4219 0824  
                                          l4251 0314                                            l4307 1682  
                                          l4315 1758                                            l4411 1510  
                                          l3187 1BF0                                            l3355 1654  
                                          l3347 162C                                            l3339 1610  
                                          l3419 1B88                                            l4333 1A08  
                                          l4325 16E8                                            l4405 1A82  
                                          l4341 18CE                                            l4069 0D98  
                                          l4077 0DFE                                            l4181 017A  
                                          l4173 00E6                                            l4165 00C0  
                                          l4157 0076                                            l4149 0000  
                                          l4093 0F9C                                            l4085 0F56  
                                          l4237 0952                                            l4229 08B8  
                                          l4261 03C4                                            l4253 0326  
                                          l4309 1690                                            l4317 1760  
                                          l4413 1522                                            l4501 09C8  
                                          l3189 1C0C                                            l3357 1674  
                                          l3349 1630                                            l3381 17AE  
                                          l4421 1ABA                                            l4335 1A0A  
                                          l4327 16F8                                            l4343 18D0  
                                          l4079 0E0E                                            l4191 024A  
                                          l4175 00EC                                            l4183 01DE  
                                          l4167 00CE                                            l4159 0078  
                                          l4095 0FAA                                            l4087 0F62  
                                          l4239 096C                                            l4255 032A  
                                          l4247 02DE                                            l4319 1768  
                                          l4415 1546                                            l4407 14D0  
                                          l4511 0A40                                            l4503 09E4  
                                          l3391 17CC                                            l3383 17B2  
                                          l3367 1C1A                                            l4431 059C  
                                          l4423 1AC6                                            l4361 0EA4  
                                          l4353 0E50                                            l4417 1926  
                                          l4329 19EE                                            l4345 18E2  
                                          l4337 18B4                                            l4185 01F8  
                                          l4193 0258                                            l4177 016E  
                                          l4169 00D4                                            l4097 0FBC  
                                          l4089 0F80                                            l4273 04A8  
                                          l4265 03FC                                            l4257 0352  
                                          l4249 0306                                            l4409 14F4  
                                          l4521 0ACA                                            l4513 0A4C  
                                          l4505 0A08                                            l3393 17DE  
                                          l3385 17B4                                            l3377 1798  
                                          l3481 1AD8                                            l4441 0626  
                                          l4433 05BE                                            l4425 0558  
                                          l4601 141E                                            l4363 0EA6  
                                          l4355 0E66                                            l4347 1A94  
                                          l4339 18BC                                            l4195 026A  
                                          l4187 0216                                            l4179 0174  
                                          l4099 0FEA                                            l4291 0544  
                                          l4275 04D0                                            l4283 0500  
                                          l4267 0424                                            l4259 037A  
                                          l4531 0B10                                            l4523 0AEE  
                                          l4515 0A64                                            l4507 0A1C  
                                          l3395 17E4                                            l3387 17C6  
                                          l3379 179E                                            l3491 1AEC  
                                          l3483 1ADC                                            l4451 065C  
                                          l4443 062C                                            l4435 05D4  
                                          l4427 057A                                            l4611 1444  
                                          l4603 1422                                            l4365 0EB6  
                                          l4349 1AB0                                            l4197 0278  
                                          l4189 0230                                            l4285 050E  
                                          l4277 04DE                                            l4269 0470  
                                          l4533 0B16                                            l4517 0A8E  
                                          l4509 0A22                                            l3397 17FA  
                                          l3389 17CA                                            l3493 1AF0  
                                          l3485 1AE0                                            l4461 06B8  
                                          l4453 0676                                            l4445 0638  
                                          l4437 05F6                                            l4429 0586  
                                          l4621 1494                                            l4613 1448  
                                          l4605 1424                                            ?_pad 001A  
                                          l4391 0F34                                            l4375 0EE0  
                                          l4367 0EBA                                            l4359 0E7A  
                                          l4199 027E                                            l4279 04F2  
                                          l4535 0B34                                            l4519 0AB2  
                                          l3399 180A                                            l3487 1AE4  
                                          l4471 0724                                            l4463 06D2  
                                          l4455 067C                                            l4447 064A  
                                          l4439 061A                                            l4623 1498  
                                          l4615 145C                                            l4607 1426  
                                          l4393 0F44                                            l4385 0F08  
                                          l4377 0EEA                                            l4369 0EC8  
                                          l4297 1B4A                                            l4289 051C  
                                          l4529 0B0A                                            l4537 0B4E  
                                          l3489 1AE8                                            l4481 0764  
                                          l4473 0742                                            l4465 06D8  
                                          l4449 0650                                            l4457 06A6  
                                          l4625 14B2                                            l4617 1460  
                                          l4609 142A                                            l4387 0F14  
                                          l4379 0EF4                                            l4299 1B5A  
                                          l4483 076C                                            l4475 074A  
                                          l4459 06AC                                            l4467 06FE  
                                          l4627 14B8                                            l4619 147A  
                                          l4389 0F24                                            l4397 1AF8  
                                          l4485 0770                                            l4477 074E  
                                          l4469 070A                                            l4399 1B04  
                                          l4495 07A8                                            l4487 0780  
                                          l4479 0756                                            l4489 0790  
                                          l4499 09BE                                            l3981 1162  
                                          l3973 1116                                            l3983 1198  
                                          l3975 1128                                            l3991 1900  
                                          l3977 113A                                            l3993 1918  
                                          l3979 1144                                            l3987 18F0  
                                          l3997 1830                                            l3989 18FC  
                                          l3999 183C                                            STR_1 FE8C  
                                          STR_2 FF78                                            STR_3 FE47  
                                          STR_4 FE47                                            STR_5 FE35  
                                          STR_6 FE47                                            STR_7 FE11  
                                          STR_8 FF68                                            STR_9 FDE9  
                                          u3100 1918                                            u3101 1914  
                                          _LATA 000F82                                            u3110 1872  
                                          _LATB 000F83                                            u3111 186E  
                                          _LATC 000F84                                            u3120 0B76  
                                          u3200 0D30                                            _LATD 000F85  
                                          u3121 0B72                                            u3201 0D2C  
                                          _LATE 000F86                                            u3130 0BA8  
                                          u3210 0D6E                                            u3131 0BA4  
                                          u3211 0D6A                                            u3220 0D98  
                                          u3060 1128                                            u3300 108E  
                                          u3141 0BD2                                            u3221 0D94  
                                          u3061 1124                                            u3301 108A  
                                          u3150 0BF6                                            u3230 0DC6  
                                          u3070 113A                                            u3310 10BC  
                                          u3151 0BF2                                            u3231 0DC2  
                                          u3071 1136                                            u3311 10B8  
                                          u3160 0C20                                            u3240 0E0E  
                                          u3080 1162                                            u3320 11EE  
                                          u3400 0076                                            u4040 145C  
                                          u3161 0C1C                                            u3241 0E0A  
                                          u3081 115E                                            u3321 11EA  
                                          u3401 0072                                            u4041 1458  
                                          u3170 0C60                                            u3090 1198  
                                          u3330 1210                                            u3410 0092  
                                          u3171 0C5C                                            u3091 1194  
                                          u3331 120C                                            u3411 008E  
                                          u3251 0F5C                                            u3180 0CAA  
                                          u3340 1266                                            u3500 0278  
                                          u3420 00C0                                            u3260 0F80  
                                          u3181 0CA6                                            u3341 1262  
                                          u3501 0274                                            u3421 00BC  
                                          u3261 0F7C                                            u3190 0CFE  
                                          u3350 1274                                            u3510 0290  
                                          u3430 00CE                                            u3270 0FAA  
                                          u3191 0CFA                                            u3351 1270  
                                          u3511 028C                                            u3431 00CA  
                                          u3271 0FA6                                            u4207 1436  
                                          u3360 188E                                            u3440 01F8  
                                          u3280 0FEA                                            u3520 07CC  
                                          u3600 0352                                            u3361 188A  
                                          u3441 01F4                                            u3281 0FE6  
                                          u3521 07C8                                            u3601 034E  
                                          u4217 146C                                            u3450 0216  
                                          u3370 0030                                            u3290 1064  
                                          u3530 07E8                                            u3610 037A  
                                          u3451 0212                                            u3371 002A  
                                          u3291 1060                                            u3531 07E4  
                                          u3611 0376                                            u4307 1518  
                                          u4227 14A4                                            u3700 18E2  
                                          u3460 0230                                            u3380 0032  
                                          u3540 0934                                            u3620 0424  
                                          u3701 18DE                                            u3461 022C  
                                          u3541 0930                                            u3621 0420  
                                          u4317 156A                                            u4237 1ACC  
                                          u3710 0E66                                            u3470 024A  
                                          u3390 0048                                            u3550 0952  
                                          u3630 04D0                                            u3711 0E62  
                                          u4327 1B0C                                            u3471 0246  
                                          u3391 0044                                            u3551 094E  
                                          u3631 04CC                                            u4247 0668  
                                          u3720 0E9A                                            u3640 1B5A  
                                          u3480 0258                                            u3560 096C  
                                          u3800 0742                                            u3641 1B56  
                                          u3481 0254                                            u3561 0968  
                                          u3801 073E                                            u4257 0694  
                                          u3730 0EC8                                            u3650 1B72  
                                          u3490 026A                                            u3570 0986  
                                          u3810 0764                                            u3731 0EC4  
                                          u3651 1B6E                                            u3491 0266  
                                          u3571 0982                                            u3811 0760  
                                          u4267 06C4                                            u3740 0EDC  
                                          u3580 0994                                            u3660 16DE  
                                          u3820 0780                                            _PMD0 000EDC  
                                          u3741 0ED8                                            u3725 0E90  
                                          u3581 0990                                            u3661 16DA  
                                          u3821 077C                                            u4277 06F0  
                                          _PMD1 000EDD                                            u3750 0F04  
                                          u3670 1732                                            u3590 0306  
                                          u3830 0790                                            _PMD2 000EDE  
                                          u3751 0F00                                            u3591 0302  
                                          u4287 0798                                            u3831 078C  
                                          _PMD3 000EDF                                            u3760 0F24  
                                          u3680 1744                                            u3840 0A64  
                                          _PMD4 000EE0                                            u3761 0F20  
                                          u3681 1740                                            u3841 0A60  
                                          u4297 07B0                                            _PMD5 000EE1  
                                          u3770 0F34                                            u3690 1A1C  
                                          u3850 0AB2                                            u3771 0F30  
                                          u3691 1A18                                            u3851 0AAE  
                                          u3860 0AEE                                            u3780 064A  
                                          u3677 1728                                            u3861 0AEA  
                                          u3781 0646                                            u3870 0B06  
                                          u3790 0724                                            u3871 0B02  
                                          u3791 0720                                            u3880 0B4E  
                                          u3881 0B4A                                            u3890 0B62  
                                          u3891 0B5E                                            _WPUA 000F0B  
                                          _WPUB 000F13                                            _WPUC 000F1B  
                                          _WPUD 000F20                                            _WPUE 000F28  
                                 _INT2_CallBack 1958                                   _EUSART1_Write 1B48  
                                 _EUSART2_Write 1B60                                            abs@a 001C  
                                          _dbuf 0122                                            _main 141E  
                                          _dtoa 0000                                            _prec 004D  
                                          _nout 0118                                            pad@i 0021  
                                          pad@p 001E                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0023                                            fsr2l 000FD9  
                                          btemp 0056                                            _utoa 07BE  
                     ?_INT2_SetInterruptHandler 000A                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00E6  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                         ??_abs 001E                                           ??_pad 0020  
                                    _TX_Buffer1 18B4                                      _TX_Buffer2 19EE  
                              __end_of_INT0_ISR 1C42                                __end_of_INT1_ISR 1C38  
                              __end_of_INT2_ISR 1C2E                   __end_of_OSCILLATOR_Initialize 1B48  
                         _eusart1RxStatusBuffer 0100                                   ___fltol@sign1 0012  
                               __end_of___aodiv 0CEC                                           ?_main 0001  
                                         ?_dtoa 0025                                 __end_of___aomod 0E50  
                                         STR_10 FDFE                                           STR_12 FF36  
                                         STR_20 FF03                                           STR_13 FF98  
                                         STR_21 FE7B                                           STR_14 FFB8  
                                         STR_22 FF58                                           STR_30 FEF2  
                                         STR_15 FFC7                                           STR_31 FED0  
                                         STR_23 FEAE                                           STR_24 FE9D  
                                         STR_32 FE59                                           STR_16 FE23  
                                         STR_17 FEE1                                           STR_33 FEBF  
                                         STR_25 FE6A                                           STR_34 FFE5  
                                         STR_26 FF47                                           STR_18 FF14  
                                         STR_35 FFF2                                           STR_27 FFA8  
                                         STR_28 FFD6                                           STR_36 FF25  
                                         STR_37 FF25                                           STR_29 FF88  
                               __end_of___fltol 0F56                                           ?_utoa 0025  
                               __end_of___lodiv 1046                                 __end_of___lomod 1116  
                                         i2l200 1C4C                                           i2l241 1C40  
                                         i2l411 0088                                           i2l252 1396  
                                         i2l412 00D2                                           i2l245 19EC  
                                         i2l191 1A46                                           i2l255 141C  
                                         i2l271 19BA                                           i2l407 0040  
                                         i2l280 1C2C                                           i2l409 0064  
                                         i2l417 00D2                                           i2l194 1C58  
                                         i2l290 1C54                                           i2l187 1362  
                                         i2l267 1C36                                           i2l284 1988  
                                         i2l197 1C46                                           i2l277 1C56  
                                         _OSCEN 000ED7                                    vfpfcnvrt@fmt 0062  
                                  vfpfcnvrt@llu 006E                                           _TRISA 000F87  
                                         _TRISB 000F88                                  ?_INT0_CallBack 0001  
                                         _TRISC 000F89                                           _TRISD 000F8A  
                                         _TRISE 000F8B                                 __end_of_lcd_GUI 07BE  
                                  lcd_print@str 0014                                    distance@inch 001A  
                                ?_INT1_CallBack 0001                                 _DATAEE_ReadByte 1B78  
                                         _flags 004F                                           _count 0114  
                ??_INT1_DefaultInterruptHandler 0001                                           _fputc 1116  
                                         _fputs 1830                                           _input 0110  
                                         pad@fp 001A                                           _rmove 14CC  
                                         _width 011A                                           _putch 1C52  
                                         _start 0121                                           dtoa@d 0027  
                                         dtoa@i 0047                                           dtoa@n 003F  
                                         dtoa@p 0039                                           dtoa@s 003D  
                                         dtoa@w 003B                                  ?_INT2_CallBack 0001  
                      _INT1_SetInterruptHandler 1B9C                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                         ttemp5 0057                                           ttemp6 005A  
                                         ttemp7 005E                                           utoa@d 0027  
                                         utoa@i 0043                                           utoa@n 003B  
                                         utoa@p 0037                                           utoa@w 0039  
                                         status 000FD8                                           wtemp8 0057  
                               __end_of_sprintf 1798                                ___lodiv@dividend 000A  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 1C5A  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1C58                                 __initialization 1A48  
                    __end_of_EUSART1_Initialize 167A                                    __end_of_main 14CC  
                                  __end_of_dtoa 02DE                                    __end_of_utoa 09BE  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 00EF  
                                        ??_dtoa 002F                                          ??_utoa 002F  
                                 __activetblptr 000003                     _EUSART2_DefaultErrorHandler 000000  
                                 rmove@move_buf 00C0                                ___lodiv@quotient 001A  
                    __end_of_EUSART2_Initialize 1830                                          ?_fputc 000A  
                                        ?_fputs 0013                                          ?_rmove 0093  
                                        _ANSELA 000F0C                                          ?_putch 0001  
                                        _ANSELB 000F14                                          _ANSELC 000F1C  
                                        _ANSELD 000F21                                          _ANSELE 000F29  
                                        _RC1REG 000F98                                          _RC2REG 000E94  
                                        _RB3PPS 000EED                                          _RC1STA 000F9C  
                                        _RC2STA 000E98                                          _RB6PPS 000EF0  
                                        _ODCONA 000F0A                                          _ODCONB 000F12  
                                        _RC6PPS 000EF8                                          _ODCONC 000F1A  
                                        _ODCOND 000F1F                                          _ODCONE 000F27  
                                        i2l3211 13B4                                          i2l3203 1364  
                                        i2l3213 13D6                                          i2l3205 1372  
                                        i2l3215 13E6                                          i2l3207 1388  
                                        i2l3209 13A4                                          i2l3191 1A1E  
                                        i2l3193 1A2E                                          i2l3361 1C48  
                                        i2l3195 1A30                                          i2l3451 12C0  
                                        i2l3363 19BC                                          i2l3371 19A0  
                                        i2l3197 1A40                                          i2l3461 1322  
                                        i2l3453 12D0                                          i2l3365 19D2  
                                        i2l3373 1958                                          i2l3199 1A44  
                                        i2l3359 1C42                                          i2l3463 133E  
                                        i2l3455 12EA                                          i2l3447 12A2  
                                        i2l3375 196E                                          i2l3465 135E  
                                        i2l3457 12F8                                          i2l3449 12B2  
                                        i2l3369 198A                                          i2l3473 1C2E  
                                        i2l3721 0038                                          i2l3459 1308  
                                        i2l3467 1C38                                          i2l3475 1C32  
                                        i2l3731 0096                                          i2l3723 004E  
                                        i2l3469 1C3C                                          i2l3477 1C24  
                                        i2l3733 00A4                                          i2l3725 005C  
                                        i2l3717 001A                                          i2l3479 1C28  
                                        i2l3735 00B2                                          i2l3727 0072  
                                        i2l3719 002A                                          i2l3729 0080  
                                        _INLVLA 000F08                                          _INLVLB 000F10  
                                        _INLVLC 000F18                                          _INLVLD 000F1D  
                                        _INLVLE 000F25                                          _TABLAT 000FF5  
                                        _OSCFRQ 000ED9                                          _RX1PPS 000EB0  
                                        _TX1REG 000F99                                          _TX2REG 000E95  
                                        _TX1STA 000F9D                                          _TX2STA 000E99  
                                  vfprintf@cfmt 007C                                __end_of_distance 1958  
                                     ??___aodiv 001A                                       ??___aomod 001A  
                                        ___wmul 1A94                                       ??___fltol 000E  
                                     ??___lodiv 001A                                       ??___lomod 001A  
                                   ?_TX_Buffer1 000E                                     ?_TX_Buffer2 000B  
                      ?_EUSART1_SetErrorHandler 000A                                          clear_0 1A4E  
                                        clear_1 1A5E                                       ??_lcd_GUI 0093  
                                        isa$std 000001                     _EUSART2_FramingErrorHandler 0148  
                                        pad@buf 001C                ??_EUSART1_SetOverrunErrorHandler 000D  
               ?_EUSART1_SetOverrunErrorHandler 000A                                 ??_INT0_CallBack 0006  
                                        _status 0120                                          dtoa@fp 0025  
                       __end_of_DATAEE_ReadByte 1B8E                                          _strcpy 16E8  
                                        _strlen 18F0                                          fputc@c 000A  
                                _PMD_Initialize 1B14            __end_of_INT2_DefaultInterruptHandler 1C56  
                  _INT2_DefaultInterruptHandler 1C54                                          fputs@c 0017  
                                        fputs@i 0018                                          fputs@s 0013  
                               ??_INT1_CallBack 0001                                    __mediumconst FDE8  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                          putch@c 0001  
                               ??_INT2_CallBack 0001                                __end_of_vfprintf 16E8  
                               ??_EUSART1_Write 000A                                          utoa@fp 0025  
                               ??_EUSART2_Write 000A        INT2_SetInterruptHandler@InterruptHandler 000A  
      INT1_SetInterruptHandler@InterruptHandler 000A        INT0_SetInterruptHandler@InterruptHandler 000A  
                                     ??_sprintf 004D                                 _eusart1RxBuffer 0108  
                               _INT0_Read_Count 1C1A                               _SYSTEM_Initialize 1AD8  
                                    __accesstop 0060                         __end_of__initialization 1A64  
                                     ?_INT0_ISR 0001                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                      ___fltol@f1 000A  
                   LaySheetsOnTrays@motorNumber 0176                   __end_of_EUSART1_RxDataHandler 1A48  
             LaySheetsOnTrays@totalSheetsPlaced 0174                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 000D                                   __end_of_fputc 11E0  
                                 __end_of_fputs 1874                                   __end_of_rmove 1576  
                                 __end_of_putch 1C54                     LaySheetsOnTrays@returnCount 0172  
                        __end_of_PMD_Initialize 1B30                                ??_lcd_set_cursor 000B  
                      ?_EUSART2_SetErrorHandler 000A                __end_of_INT2_SetInterruptHandler 1B9C  
                   __end_of_EUSART1_Receive_ISR 1364                 fp__INT2_DefaultInterruptHandler 0000  
                 ?_INT2_DefaultInterruptHandler 0001                                         ??_fputc 000E  
                     __end_of_SYSTEM_Initialize 1AF6                                         ??_fputs 0017  
                                       ??_rmove 0097                                         ??_putch 000A  
                                 _eusart1RxHead 0055                                   _eusart1RxTail 0054  
                                    __pbssBANK0 00F1                                      __pbssBANK1 0100  
               ??_EUSART1_SetRxInterruptHandler 000D                           _INT0_InterruptHandler 0151  
                                    ??_INT0_ISR 0006                                      ??_INT1_ISR 0001  
                                    ??_INT2_ISR 0001                ??_EUSART2_SetFramingErrorHandler 000D  
               ?_EUSART2_SetFramingErrorHandler 000A                 __end_of_EUSART1_SetErrorHandler 1C1A  
                                rmove@speed_buf 0098                                         ?___wmul 0014  
                               ?_PMD_Initialize 0001                                         ?_strcpy 000A  
                                       ?_strlen 000A          __end_of_EUSART1_SetFramingErrorHandler 1C0C  
                _EUSART1_SetFramingErrorHandler 1BFE                                ?_DATAEE_ReadByte 000A  
                    ??_INT1_SetInterruptHandler 000D                                         _INT0PPS 000E9C  
                                       _INT1PPS 000E9D                                         _INT2PPS 000E9E  
                       __end_of_INT0_Read_Count 1C24                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9B                                         _SP1BRGL 000F9A  
                                       _SP2BRGH 000E97                                         _SP2BRGL 000E96  
                                       _OSCCON1 000ED3                                         _OSCCON3 000ED5  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7A  
                                       _NVMADRL 000F79                                         _NVMADRU 000F7B  
                                       _NVMDATH 000F7D                                         _OSCTUNE 000ED8  
                                       _NVMDATL 000F7C                                         _NVMCON2 000F81  
                                       _SLRCONA 000F09                                         _SLRCONB 000F11  
                                       _SLRCONC 000F19                                         _SLRCOND 000F1E  
                                       _SLRCONE 000F26                                       ?_distance 001A  
                              ___lomod@dividend 000A                                _LaySheetsOnTrays 09BE  
                     ?_INT0_SetInterruptHandler 000A                                         __Hparam 0000  
                                       __Lparam 0000                               __end_of_lcd_clear 1AD8  
                                       ___aodiv 0B64                               __end_of_lcd_print 1A94  
                                       ___aomod 0CEC                                         ___fltol 0E50  
                     LaySheetsOnTrays@sheetSize 00EB                                         ___lodiv 0F56  
                                       ___lomod 1046                                       ?_vfprintf 0076  
                                       __pcinit 1A48                 __end_of_EUSART2_SetErrorHandler 1BE2  
                                       __ramtop 0F00                                         _lcd_GUI 0558  
                                       __ptext0 141E                                         __ptext1 1ABA  
                                       __ptext2 0558                                         __ptext3 1C1A  
                                       __ptext4 1B78                                         __ptext5 1AD8  
                                       __ptext6 1B14                                         __ptext7 1576  
                                       __ptext8 1B30                                         __ptext9 1C4E  
                           lcd_GUI@LengthEEprom 00AE              _EUSART2_DefaultOverrunErrorHandler 000000  
                         _OSCILLATOR_Initialize 1B30                              _EUSART1_Initialize 160C  
                      ??_PIN_MANAGER_Initialize 000A                   ??_EUSART1_DefaultErrorHandler 0001  
                                       _sprintf 1746                                      ??_distance 001E  
                          end_of_initialization 1A64                        _INT2_SetInterruptHandler 1B8E  
                           ?_EUSART1_Initialize 0001                  ??_INT2_DefaultInterruptHandler 0001  
                                       fputc@fp 000C                     _EUSART1_OverrunErrorHandler 0157  
                                       fputs@fp 0015           __end_of_EUSART1_SetRxInterruptHandler 1BF0  
                 _EUSART1_SetRxInterruptHandler 1BE2                              _EUSART2_Initialize 17E4  
                             __end_of_vfpfcnvrt 0558                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                 lcd_GUI@location 00B3  
                                  ??_TX_Buffer1 0011                                    ??_TX_Buffer2 000E  
                                    ??_vfprintf 004D                            ??_EUSART1_Initialize 000D  
                           ?_EUSART2_Initialize 0001                                         strcpy@d 0012  
                                       strlen@a 000C                                         strcpy@s 0010  
                                       strlen@s 000A                           _INT1_InterruptHandler 014E  
                                     _PORTCbits 000F8E                                ?_INT0_Read_Count 000A  
                           EUSART1_Write@txData 000A                            ??_EUSART2_Initialize 000D  
                            __end_of_TX_Buffer1 18F0                              __end_of_TX_Buffer2 1A1E  
                                  _EUSART1_Read 000000                    __end_of_INTERRUPT_Initialize 1C52  
          __end_of_INT0_DefaultInterruptHandler 141E                    _INT0_DefaultInterruptHandler 1364  
                                   vfpfcnvrt@ap 0064                                     vfpfcnvrt@fp 0060  
                                   vfpfcnvrt@ll 0066                                  __end_of___wmul 1ABA  
                        ?_OSCILLATOR_Initialize 0001                           __end_of_INT0_CallBack 19EE  
                                __end_of_strcpy 1746                                  __end_of_strlen 1926  
                           start_initialization 1A48                                 ___lodiv@divisor 0012  
                               ___lodiv@counter 0022                                     __end_of_abs 18B4  
                         __end_of_INT1_CallBack 19BC                                     __end_of_pad 12A2  
 EUSART1_SetRxInterruptHandler@interruptHandler 000A                           __end_of_INT2_CallBack 198A  
                         __end_of_EUSART1_Write 1B60                           __end_of_EUSART2_Write 1B78  
                        fp__EUSART1_Receive_ISR 0000                                 _scaledValuePast 011C  
                           DATAEE_ReadByte@bAdd 000A          __end_of_EUSART2_SetOverrunErrorHandler 1BC6  
                _EUSART2_SetOverrunErrorHandler 1BB8                                     vfprintf@fmt 0078  
                              ??_PMD_Initialize 000A                                        ??___wmul 0018  
                         _EUSART1_RxDataHandler 1A1E                  ?_EUSART1_SetRxInterruptHandler 000A  
                      __end_of_LaySheetsOnTrays 0B64                      __end_of_EXT_INT_Initialize 17E4  
               fp__INT0_DefaultInterruptHandler 0000                   ?_INT0_DefaultInterruptHandler 0001  
                                      ??_strcpy 000E                                        ??_strlen 000C  
                                _eusart1RxCount 0053                                     __pbssCOMRAM 004D  
             _EUSART1_RxDefaultInterruptHandler 015D                __end_of_INT0_SetInterruptHandler 1BB8  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0160  
                              ___aodiv@dividend 000A                             EUSART2_Write@txData 000A  
              ??_EUSART1_SetFramingErrorHandler 000D                 ?_EUSART1_SetFramingErrorHandler 000A  
                         _INT2_InterruptHandler 014B                                       __pnvBANK1 0142  
                        _PIN_MANAGER_Initialize 1576                                       _dtoa$1694 0037  
                                     __pintcode 0008                                   __pmediumconst FDE8  
                                      ?___aodiv 000A                                        ?___aomod 000A  
                              ___aodiv@quotient 001C                                        ?___fltol 000A  
                                      ?___lodiv 000A                                        ?___lomod 000A  
                                     _lcd_clear 1ABA                                        ?_lcd_GUI 0001  
                  ??_INTERRUPT_InterruptManager 0006                                       _lcd_print 1A6E  
                               ___lomod@divisor 0012                                        _BAUD1CON 000F9E  
                                      _BAUD2CON 000E9A                                 ___lomod@counter 001A  
                    ??_INT2_SetInterruptHandler 000D           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1C48            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1C42  
                          _EUSART1_ErrorHandler 0154                         _EUSART1_SetErrorHandler 1C0C  
                                      ?_sprintf 007E                            _INTERRUPT_Initialize 1C4E  
                           lcd_GUI@selectSwitch 00B0                                        _INT0_ISR 1C38  
                                      _INT1_ISR 1C2E                                        _INT2_ISR 1C24  
                                ___wmul@product 0018                             lcd_GUI@sheetsEEprom 00AC  
       EUSART2_SetErrorHandler@interruptHandler 000A         EUSART1_SetErrorHandler@interruptHandler 000A  
                     ?_INT1_SetInterruptHandler 000A                                        _PIE0bits 000EBD  
                                     _sectorRAM 000D00                                        _PIE3bits 000EC0  
                                      i2u222_40 1A40                                        i2u222_41 1A3C  
                                      i2u223_40 1372                                        i2u223_41 136E  
                                      i2u224_40 13A4                                        i2u240_40 19A0  
                                      i2u224_41 13A0                                        i2u240_41 199C  
                                      i2u225_40 13D6                                        i2u225_41 13D2  
                                      i2u241_48 19A6                                        i2u242_40 196E  
                                      i2u241_49 19BA                                        i2u242_41 196A  
                                      i2u226_45 13FA                                        i2u226_46 1404  
                                      i2u226_47 1414                                        i2u244_40 12C0  
                                      i2u243_48 1974                                        i2u244_41 12BC  
                                      i2u243_49 1988                                        i2u246_40 12F8  
                                      i2u245_48 12D6                                        i2u238_40 19D2  
                                      i2u246_41 12F4                                        i2u245_49 12EA  
                                      i2u238_41 19CE                                        _PIR0bits 000EC5  
                                      i2u248_40 133E                                        i2u247_48 130E  
                                      i2u239_48 19D8                                        i2u280_40 002A  
                                      i2u248_41 133A                                        i2u247_49 1322  
                                      i2u239_49 19EC                                        i2u280_41 0026  
                                      i2u281_40 0038                                        i2u281_41 0034  
                                      i2u249_48 1344                                        i2u282_40 004E  
                                      i2u249_49 135A                                        i2u282_41 004A  
                                      i2u283_40 005C                                        i2u283_41 0058  
                                      i2u284_40 0072                                        i2u284_41 006E  
                                      i2u285_40 0080                                        i2u285_41 007C  
                                      _PIR3bits 000EC8                                        i2u286_40 0096  
                                      i2u286_41 0092                                        i2u287_40 00A4  
                                      i2u287_41 00A0                                        i2u288_40 00B2  
                                      i2u288_41 00AE                                        i2u289_48 00B8  
                                      i2u289_49 00CE                                        _PIR7bits 000ECC  
                        ?_EUSART1_RxDataHandler 0001                      LaySheetsOnTrays@lcd_string 0160  
                                     _quickTime 00F1                                      ?_lcd_clear 0001  
                                     _vfpfcnvrt 02DE                                      ?_lcd_print 0014  
                             ___wmul@multiplier 0014                  ??_INT0_DefaultInterruptHandler 0001  
                                    rmove@motor 00E8                                      rmove@speed 0093  
                               lcd_print@Buffer 0016                           ?_INTERRUPT_Initialize 0001  
                      _INT0_SetInterruptHandler 1BAA                         _EUSART2_SetErrorHandler 1BD4  
                   _EUSART2_OverrunErrorHandler 0145                                        __Hrparam 0000  
                                    vfprintf@ap 007A                                        __Lrparam 0000  
                                    vfprintf@fp 0076                         ??_OSCILLATOR_Initialize 000A  
                    LaySheetsOnTrays@sheetCount 00E9                                      ?_vfpfcnvrt 0060  
                               ___aodiv@divisor 0012                                 ___aodiv@counter 001A  
                     ??_EUSART1_SetErrorHandler 000D             __end_of_EUSART1_DefaultErrorHandler 1C4E  
                   _EUSART1_DefaultErrorHandler 1C48                                      sprintf@fmt 0080  
                          _EUSART2_ErrorHandler 0142                             lcd_GUI@presentCount 00B4  
                                      __ptext10 1798                                        __ptext11 1B8E  
                                      __ptext20 1BF0                                        __ptext12 1B9C  
                                      __ptext21 1BFE                                        __ptext13 1BAA  
                                      __ptext30 0F56                                        __ptext22 1C0C  
                                      __ptext14 17E4                                        __ptext31 0000  
                                      __ptext23 09BE                                        __ptext15 1BB8  
                                      __ptext40 18B4                                        __ptext32 11E0  
                                      __ptext24 14CC                                        __ptext16 1BC6  
                                      __ptext41 1B48                                        __ptext33 18F0  
                                      __ptext25 1746                                        __ptext17 1BD4  
                                      __ptext42 1AF6                                        __ptext34 1830  
                                      __ptext26 167A                                        __ptext18 160C  
                                      __ptext51 1C24                                        __ptext43 1A6E  
                                      __ptext35 1116                                        __ptext27 02DE  
                                      __ptext19 1BE2                                        __ptext60 12A2  
                                      __ptext52 1958                                        __ptext44 16E8  
                                      __ptext36 1C52                                        __ptext28 07BE  
                                      __ptext61 1C42                                        __ptext53 1C54  
                                      __ptext45 19EE                                        __ptext37 1874  
                                      __ptext29 1046                                        __ptext62 1C58  
                                      __ptext54 1C2E                                        __ptext46 1B60  
                                      __ptext38 0CEC                                        __ptext63 1C48  
                                      __ptext55 198A                                        __ptext47 1926  
                                      __ptext39 0B64                                        __ptext64 1A1E  
                                      __ptext56 1C56                                        __ptext48 1A94  
                                      __ptext65 0000                                        __ptext57 1C38  
                                      __ptext49 0E50                                        __ptext58 19BC  
                                      __ptext59 1364                                        _distance 1926  
                                    strcpy@dest 000A                               lcd_GUI@lcd_string 0096  
                                   _scaledValue 011E              _EUSART2_DefaultFramingErrorHandler 000000  
                            lcd_GUI@select_bool 00A8                               ??_DATAEE_ReadByte 000C  
                                      lcd_GUI@i 00AA                                      _RC1STAbits 000F9C  
                                    _RC2STAbits 000E98  EUSART2_SetOverrunErrorHandler@interruptHandler 000A  
EUSART1_SetOverrunErrorHandler@interruptHandler 000A                                        isa$xinst 000000  
                                      int$flags 0056                                     TX_Buffer1@i 0011  
                                   TX_Buffer2@i 000E                                        _vfprintf 167A  
            __end_of_INTERRUPT_InterruptManager 00E6                      _INTERRUPT_InterruptManager 0008  
                                   ??_lcd_clear 000B                    LaySheetsOnTrays@forwardCount 0170  
                             ?_LaySheetsOnTrays 00E9                     _EUSART1_FramingErrorHandler 015A  
                           _EUSART1_Receive_ISR 12A2                                     ??_lcd_print 0016  
          __end_of_INT1_DefaultInterruptHandler 1C58                    _INT1_DefaultInterruptHandler 1C56  
                              ___aomod@dividend 000A                ??_EUSART2_SetOverrunErrorHandler 000D  
               ?_EUSART2_SetOverrunErrorHandler 000A                              ??_LaySheetsOnTrays 00EC  
                                    _INTCONbits 000FF2                                     _NVMCON0bits 000F7F  
                                   _NVMCON1bits 000F80                          ??_INTERRUPT_Initialize 000A  
                                   lcd_GUI@page 00A6                       ??_EUSART2_SetErrorHandler 000D  
                            _EXT_INT_Initialize 1798                                        intlevel2 0000  
                                _lcd_set_cursor 1AF6                                       sprintf@ap 0086  
                             lcd_set_cursor@pos 000B                            ?_EUSART1_Receive_ISR 0001  
                       ?_PIN_MANAGER_Initialize 0001                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1BFE                  _EUSART1_SetOverrunErrorHandler 1BF0  
                                     strcpy@src 000C  EUSART2_SetFramingErrorHandler@interruptHandler 000A  
EUSART1_SetFramingErrorHandler@interruptHandler 000A                                        rmove@pos 0095  
                               ___aomod@divisor 0012                                     ??_vfpfcnvrt 0049  
                               ___aomod@counter 001A                              _eusart1RxLastError 0052  
                              lcd_GUI@pastCount 00B1                            ??_EXT_INT_Initialize 000D  
                                      sprintf@f 0088                                        sprintf@s 007E  
               fp__INT1_DefaultInterruptHandler 0000                   ?_INT1_DefaultInterruptHandler 0001  
              __end_of_INT1_SetInterruptHandler 1BAA                          __end_of_lcd_set_cursor 1B14  
                                    _TX1STAbits 000F9D                                      _TX2STAbits 000E99  
                                  ___aodiv@sign 001B                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 160C                              _eusart2RxLastError 0051  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 001B  
                             ??_INT0_Read_Count 000C  
